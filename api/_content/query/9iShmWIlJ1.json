[{"_path":"/til/cpp-magic-enum","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Magic Enum C++","description":"Biblioteca C++17 header-only que provê reflexão estática de enums, trabalha com qualquer tipo de enum sem usar macros.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Biblioteca C++17 header-only que provê reflexão estática de enums, trabalha com qualquer tipo de enum sem usar macros."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_cast"}]},{"type":"text","value":" obtains enum value from string or integer."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_value"}]},{"type":"text","value":" returns enum value at specified index."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_values"}]},{"type":"text","value":" obtains enum value sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_count"}]},{"type":"text","value":" returns number of enum values."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_integer"}]},{"type":"text","value":" obtains integer value from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_name"}]},{"type":"text","value":" returns string name from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_names"}]},{"type":"text","value":" obtains string enum name sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_entries"}]},{"type":"text","value":" obtains pair (value enum, string enum name) sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_index"}]},{"type":"text","value":" obtains index in enum value sequence from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_contains"}]},{"type":"text","value":" checks whether enum contains enumerator with such value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_type_name"}]},{"type":"text","value":" returns string name of enum type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"is_unscoped_enum"}]},{"type":"text","value":" checks whether type is an Unscoped enumeration."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"is_scoped_enum"}]},{"type":"text","value":" checks whether type is an Scoped enumeration."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"underlying_type"}]},{"type":"text","value":" improved UB-free \"SFINAE-friendly\" std::underlying_type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ostream_operators"}]},{"type":"text","value":" ostream operators for enums."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"bitwise_operators"}]},{"type":"text","value":" bitwise operators for enums."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inserir exemplos"}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/Neargye/magic_enum","rel":["nofollow"]},"children":[{"type":"text","value":"Magic Enum C++"}]}]}]}]},"date":"2020-06-27T00:00:00.000Z","draft":true,"tags":["C++","cpp"],"Thumbnail":"img/headers/debian.jpg","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Biblioteca C++17 header-only que provê reflexão estática de enums, trabalha com qualquer tipo de enum sem usar macros."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_cast"}]},{"type":"text","value":" obtains enum value from string or integer."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_value"}]},{"type":"text","value":" returns enum value at specified index."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_values"}]},{"type":"text","value":" obtains enum value sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_count"}]},{"type":"text","value":" returns number of enum values."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_integer"}]},{"type":"text","value":" obtains integer value from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_name"}]},{"type":"text","value":" returns string name from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_names"}]},{"type":"text","value":" obtains string enum name sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_entries"}]},{"type":"text","value":" obtains pair (value enum, string enum name) sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_index"}]},{"type":"text","value":" obtains index in enum value sequence from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_contains"}]},{"type":"text","value":" checks whether enum contains enumerator with such value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_type_name"}]},{"type":"text","value":" returns string name of enum type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"is_unscoped_enum"}]},{"type":"text","value":" checks whether type is an Unscoped enumeration."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"is_scoped_enum"}]},{"type":"text","value":" checks whether type is an Scoped enumeration."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"underlying_type"}]},{"type":"text","value":" improved UB-free \"SFINAE-friendly\" std::underlying_type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ostream_operators"}]},{"type":"text","value":" ostream operators for enums."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"bitwise_operators"}]},{"type":"text","value":" bitwise operators for enums."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inserir exemplos"}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/Neargye/magic_enum","rel":["nofollow"]},"children":[{"type":"text","value":"Magic Enum C++"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-magic-enum.md","_source":"content","_file":"til/cpp-magic-enum.md","_extension":"md"},{"_path":"/til/cpp-thread","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Thread em C++","description":"Escrevendo funções e classes para execução em paralelo.","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"thread-com-função-sem-argumentos"},"children":[{"type":"text","value":"Thread com função sem argumentos"}]},{"type":"element","tag":"code","props":{"code":"void foo() {\n  cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n}\n\nvoid run () {\n  thread t1( foo );\n  // Algum processamento...\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void foo() {\n  cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n}\n\nvoid run () {\n  thread t1( foo );\n  // Algum processamento...\n  t1.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-função-passando-parâmetros-por-valor"},"children":[{"type":"text","value":"Thread com função passando parâmetros por valor"}]},{"type":"element","tag":"code","props":{"code":"void fooByRef( int & a ) {\n  while( true ) {\n    cout << \"O valor é \" << a << endl;\n    this_thread::sleep_for( chrono::milliseconds( 1000 ) );\n  }\n}\n\nvoid run () {\n  int p = 9;\n  thread t2( fooByRef, std::ref( p ) ); // usar o wrapper ref para não passar por valor\n  // Algum processamento...\n  this_thread::sleep_for( chrono::milliseconds( 5000 ) );\n  p = 30;\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void fooByRef( int & a ) {\n  while( true ) {\n    cout << \"O valor é \" << a << endl;\n    this_thread::sleep_for( chrono::milliseconds( 1000 ) );\n  }\n}\n\nvoid run () {\n  int p = 9;\n  thread t2( fooByRef, std::ref( p ) ); // usar o wrapper ref para não passar por valor\n  // Algum processamento...\n  this_thread::sleep_for( chrono::milliseconds( 5000 ) );\n  p = 30;\n  t1.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-função-passando-parâmetros-por-referência"},"children":[{"type":"text","value":"Thread com função passando parâmetros por referência"}]},{"type":"element","tag":"code","props":{"code":"void foo( int a, int b ) {\n}\n\nvoid run () {\n  int p = 9;\n  int q = 8;\n  thread t1( foo, p, q );\n  // Algum processamento...\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void foo( int a, int b ) {\n}\n\nvoid run () {\n  int p = 9;\n  int q = 8;\n  thread t1( foo, p, q );\n  // Algum processamento...\n  t1.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-classe-callable"},"children":[{"type":"text","value":"Thread com classe callable"}]},{"type":"element","tag":"code","props":{"code":"class CallableClass {\n  public:\n    void operator()() {\n      cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n    }\n};\n\nvoid run() {\n  CallableClass obj;\n  thread t2( obj );\n  // Algum processamento...\n  t2.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class CallableClass {\n  public:\n    void operator()() {\n      cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n    }\n};\n\nvoid run() {\n  CallableClass obj;\n  thread t2( obj );\n  // Algum processamento...\n  t2.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-lambda"},"children":[{"type":"text","value":"Thread com lambda"}]},{"type":"element","tag":"code","props":{"code":"// Sintaxe\n// [capture-list]( params ) /*mutable*/ /*constexpr*/ /*exception attribute*/ -> ret { body }\n// [capture-list]( params ) -> ret { body }\n// [capture-list]( params ) { body }\n// [capture-list]{ body }\n\nvoid run() {\n  thread t3( []{\n    cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n  } );\n  // Algum processamento...\n  t3.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Sintaxe\n// [capture-list]( params ) /*mutable*/ /*constexpr*/ /*exception attribute*/ -> ret { body }\n// [capture-list]( params ) -> ret { body }\n// [capture-list]( params ) { body }\n// [capture-list]{ body }\n\nvoid run() {\n  thread t3( []{\n    cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n  } );\n  // Algum processamento...\n  t3.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"join-detach-e-terminate"},"children":[{"type":"text","value":"Join, detach e terminate"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Uma thread representa um objeto de execução em nível de hardware e está num estado chamado "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"joinable"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A opções no estado "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"joinable"}]},{"type":"text","value":" são:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" - introduz um ponto de sincronismo e bloqueia a execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"detach"}]},{"type":"text","value":" - faz a execução continuar em modo independente"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Após esta escolha a thread se torna "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"non joinable"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Se esquecer de realizar o join ou detach a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::terminate"}]},{"type":"text","value":" será chamada pelo destrutor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Um programa com "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::terminate"}]},{"type":"text","value":" é considerado não seguro."}]}]},{"type":"element","tag":"h2","props":{"id":"tratamento-de-exceção"},"children":[{"type":"text","value":"Tratamento de exceção"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para evitar problemas caso uma exceção for lançada antes do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" use\n"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"RAII - Resource acquisition is initialization"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"RAII:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Construtor adquire os recursos"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Destrutor libera os recursos"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exemplo de código com problema:"}]},{"type":"element","tag":"code","props":{"code":"void run() {\n  thread t4( foo );\n  throw runtime_error( \"Algum erro antes do join/detach\" );\n  t4.join(); // esta linha nunca vai ser executada\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void run() {\n  thread t4( foo );\n  throw runtime_error( \"Algum erro antes do join/detach\" );\n  t4.join(); // esta linha nunca vai ser executada\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A classe "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ThreadGuard"}]},{"type":"text","value":" fornece um auxiliar para garantir que o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" será\nsempre executado quando o objeto sair do contexto."}]},{"type":"element","tag":"code","props":{"code":"class ThreadGuard {\n  thread & mThread;\n\n  public:\n    // garantir que não haverá conversões implícitas\n    explicit ThreadGuard( thread & t ) : mThread( t ) {  }\n\n    // realiza o join pelo destrutor\n    ~ThreadGuard() { if( mThread.joinable() ) { mThread.join(); } }\n\n    // não permite o uso dos contrutores de cópia e atribuição\n    ThreadGuard( const ThreadGuard & ) = delete;\n    ThreadGuard & operator= ( const ThreadGuard & ) = delete;\n};\n\nvoid run() {\n  thread t4( foo );\n  ThreadGuard tg( t4 ); // quando sair do escopo o join será chamado\n  throw runtime_error( \"Este erro não afeta a thread acima\" );\n}\n","filename":"6,9","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class ThreadGuard {\n  thread & mThread;\n\n  public:\n    // garantir que não haverá conversões implícitas\n    explicit ThreadGuard( thread & t ) : mThread( t ) {  }\n\n    // realiza o join pelo destrutor\n    ~ThreadGuard() { if( mThread.joinable() ) { mThread.join(); } }\n\n    // não permite o uso dos contrutores de cópia e atribuição\n    ThreadGuard( const ThreadGuard & ) = delete;\n    ThreadGuard & operator= ( const ThreadGuard & ) = delete;\n};\n\nvoid run() {\n  thread t4( foo );\n  ThreadGuard tg( t4 ); // quando sair do escopo o join será chamado\n  throw runtime_error( \"Este erro não afeta a thread acima\" );\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"transferindo-a-posse-das-threads"},"children":[{"type":"text","value":"Transferindo a posse das threads"}]},{"type":"element","tag":"code","props":{"code":"void foo() { }\nvoid bar() { }\n\nvoid run() {\n  thread t1( foo );\n  // thread t2 = t1; // Se fizer isso vai gerar erro de compilação\n\n  // usar move para transferir a posse da thread\n  thread t2 = std::move( t1 ); // t1 não é mais dono da thread\n  t1 = thread( bar ); // t1 tem nova thread\n\n  t1.join();\n  t2.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void foo() { }\nvoid bar() { }\n\nvoid run() {\n  thread t1( foo );\n  // thread t2 = t1; // Se fizer isso vai gerar erro de compilação\n\n  // usar move para transferir a posse da thread\n  thread t2 = std::move( t1 ); // t1 não é mais dono da thread\n  t1 = thread( bar ); // t1 tem nova thread\n\n  t1.join();\n  t2.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"threadget_id"},"children":[{"type":"text","value":"thread::get_id()"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna um id único para cada thread ativa em execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna 0 para todas as threads não ativas"}]}]},{"type":"element","tag":"code","props":{"code":"void run() {\n  thread t1( foo );\n  thread t2( foo );\n  thread t3;\n\n  cout << t1.get_id() << endl; // 1234\n  cout << t2.get_id() << endl; // 5678\n  cout << t3.get_id() << endl; // 0\n\n  t1.join();\n  t2.join();\n\n  cout << t1.get_id() << endl; // 0\n  cout << t2.get_id() << endl; // 0\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void run() {\n  thread t1( foo );\n  thread t2( foo );\n  thread t3;\n\n  cout << t1.get_id() << endl; // 1234\n  cout << t2.get_id() << endl; // 5678\n  cout << t3.get_id() << endl; // 0\n\n  t1.join();\n  t2.join();\n\n  cout << t1.get_id() << endl; // 0\n  cout << t2.get_id() << endl; // 0\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"sleep_for"},"children":[{"type":"text","value":"sleep_for"}]},{"type":"element","tag":"h2","props":{"id":"stdthis_threadyield"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::this_thread::yield()"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna a fatia de tempo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reinsere a thread na fila de execução"}]}]},{"type":"element","tag":"h2","props":{"id":"stdthreadhardware_concurrency"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::thread::hardware_concurrency()"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna o número de thread concorrentes suportado pela implementação do sistema"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"considere este valor apenas como uma dica"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é usualmente o número de cores lógicos"}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.udemy.com/course/modern-cpp-concurrency-in-depth/","rel":["nofollow"]},"children":[{"type":"text","value":"Modern C++ Concurrency in Depth"}]}]}]}]},"date":"2020-06-23T00:00:00.000Z","draft":false,"tags":["C++","cpp","thread"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"thread-com-função-sem-argumentos"},"children":[{"type":"text","value":"Thread com função sem argumentos"}]},{"type":"element","tag":"code","props":{"code":"void foo() {\n  cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n}\n\nvoid run () {\n  thread t1( foo );\n  // Algum processamento...\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void foo() {\n  cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n}\n\nvoid run () {\n  thread t1( foo );\n  // Algum processamento...\n  t1.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-função-passando-parâmetros-por-valor"},"children":[{"type":"text","value":"Thread com função passando parâmetros por valor"}]},{"type":"element","tag":"code","props":{"code":"void fooByRef( int & a ) {\n  while( true ) {\n    cout << \"O valor é \" << a << endl;\n    this_thread::sleep_for( chrono::milliseconds( 1000 ) );\n  }\n}\n\nvoid run () {\n  int p = 9;\n  thread t2( fooByRef, std::ref( p ) ); // usar o wrapper ref para não passar por valor\n  // Algum processamento...\n  this_thread::sleep_for( chrono::milliseconds( 5000 ) );\n  p = 30;\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void fooByRef( int & a ) {\n  while( true ) {\n    cout << \"O valor é \" << a << endl;\n    this_thread::sleep_for( chrono::milliseconds( 1000 ) );\n  }\n}\n\nvoid run () {\n  int p = 9;\n  thread t2( fooByRef, std::ref( p ) ); // usar o wrapper ref para não passar por valor\n  // Algum processamento...\n  this_thread::sleep_for( chrono::milliseconds( 5000 ) );\n  p = 30;\n  t1.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-função-passando-parâmetros-por-referência"},"children":[{"type":"text","value":"Thread com função passando parâmetros por referência"}]},{"type":"element","tag":"code","props":{"code":"void foo( int a, int b ) {\n}\n\nvoid run () {\n  int p = 9;\n  int q = 8;\n  thread t1( foo, p, q );\n  // Algum processamento...\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void foo( int a, int b ) {\n}\n\nvoid run () {\n  int p = 9;\n  int q = 8;\n  thread t1( foo, p, q );\n  // Algum processamento...\n  t1.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-classe-callable"},"children":[{"type":"text","value":"Thread com classe callable"}]},{"type":"element","tag":"code","props":{"code":"class CallableClass {\n  public:\n    void operator()() {\n      cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n    }\n};\n\nvoid run() {\n  CallableClass obj;\n  thread t2( obj );\n  // Algum processamento...\n  t2.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"class CallableClass {\n  public:\n    void operator()() {\n      cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n    }\n};\n\nvoid run() {\n  CallableClass obj;\n  thread t2( obj );\n  // Algum processamento...\n  t2.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-lambda"},"children":[{"type":"text","value":"Thread com lambda"}]},{"type":"element","tag":"code","props":{"code":"// Sintaxe\n// [capture-list]( params ) /*mutable*/ /*constexpr*/ /*exception attribute*/ -> ret { body }\n// [capture-list]( params ) -> ret { body }\n// [capture-list]( params ) { body }\n// [capture-list]{ body }\n\nvoid run() {\n  thread t3( []{\n    cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n  } );\n  // Algum processamento...\n  t3.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// Sintaxe\n// [capture-list]( params ) /*mutable*/ /*constexpr*/ /*exception attribute*/ -> ret { body }\n// [capture-list]( params ) -> ret { body }\n// [capture-list]( params ) { body }\n// [capture-list]{ body }\n\nvoid run() {\n  thread t3( []{\n    cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n  } );\n  // Algum processamento...\n  t3.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"join-detach-e-terminate"},"children":[{"type":"text","value":"Join, detach e terminate"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Uma thread representa um objeto de execução em nível de hardware e está num estado chamado "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"joinable"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A opções no estado "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"joinable"}]},{"type":"text","value":" são:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" - introduz um ponto de sincronismo e bloqueia a execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"detach"}]},{"type":"text","value":" - faz a execução continuar em modo independente"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Após esta escolha a thread se torna "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"non joinable"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Se esquecer de realizar o join ou detach a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::terminate"}]},{"type":"text","value":" será chamada pelo destrutor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Um programa com "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::terminate"}]},{"type":"text","value":" é considerado não seguro."}]}]},{"type":"element","tag":"h2","props":{"id":"tratamento-de-exceção"},"children":[{"type":"text","value":"Tratamento de exceção"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para evitar problemas caso uma exceção for lançada antes do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" use\n"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"RAII - Resource acquisition is initialization"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"RAII:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Construtor adquire os recursos"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Destrutor libera os recursos"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exemplo de código com problema:"}]},{"type":"element","tag":"code","props":{"code":"void run() {\n  thread t4( foo );\n  throw runtime_error( \"Algum erro antes do join/detach\" );\n  t4.join(); // esta linha nunca vai ser executada\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void run() {\n  thread t4( foo );\n  throw runtime_error( \"Algum erro antes do join/detach\" );\n  t4.join(); // esta linha nunca vai ser executada\n}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A classe "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ThreadGuard"}]},{"type":"text","value":" fornece um auxiliar para garantir que o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" será\nsempre executado quando o objeto sair do contexto."}]},{"type":"element","tag":"code","props":{"code":"class ThreadGuard {\n  thread & mThread;\n\n  public:\n    // garantir que não haverá conversões implícitas\n    explicit ThreadGuard( thread & t ) : mThread( t ) {  }\n\n    // realiza o join pelo destrutor\n    ~ThreadGuard() { if( mThread.joinable() ) { mThread.join(); } }\n\n    // não permite o uso dos contrutores de cópia e atribuição\n    ThreadGuard( const ThreadGuard & ) = delete;\n    ThreadGuard & operator= ( const ThreadGuard & ) = delete;\n};\n\nvoid run() {\n  thread t4( foo );\n  ThreadGuard tg( t4 ); // quando sair do escopo o join será chamado\n  throw runtime_error( \"Este erro não afeta a thread acima\" );\n}\n","filename":"6,9","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"class ThreadGuard {\n  thread & mThread;\n\n  public:\n    // garantir que não haverá conversões implícitas\n    explicit ThreadGuard( thread & t ) : mThread( t ) {  }\n\n    // realiza o join pelo destrutor\n    ~ThreadGuard() { if( mThread.joinable() ) { mThread.join(); } }\n\n    // não permite o uso dos contrutores de cópia e atribuição\n    ThreadGuard( const ThreadGuard & ) = delete;\n    ThreadGuard & operator= ( const ThreadGuard & ) = delete;\n};\n\nvoid run() {\n  thread t4( foo );\n  ThreadGuard tg( t4 ); // quando sair do escopo o join será chamado\n  throw runtime_error( \"Este erro não afeta a thread acima\" );\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"transferindo-a-posse-das-threads"},"children":[{"type":"text","value":"Transferindo a posse das threads"}]},{"type":"element","tag":"code","props":{"code":"void foo() { }\nvoid bar() { }\n\nvoid run() {\n  thread t1( foo );\n  // thread t2 = t1; // Se fizer isso vai gerar erro de compilação\n\n  // usar move para transferir a posse da thread\n  thread t2 = std::move( t1 ); // t1 não é mais dono da thread\n  t1 = thread( bar ); // t1 tem nova thread\n\n  t1.join();\n  t2.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void foo() { }\nvoid bar() { }\n\nvoid run() {\n  thread t1( foo );\n  // thread t2 = t1; // Se fizer isso vai gerar erro de compilação\n\n  // usar move para transferir a posse da thread\n  thread t2 = std::move( t1 ); // t1 não é mais dono da thread\n  t1 = thread( bar ); // t1 tem nova thread\n\n  t1.join();\n  t2.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"threadget_id"},"children":[{"type":"text","value":"thread::get_id()"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna um id único para cada thread ativa em execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna 0 para todas as threads não ativas"}]}]},{"type":"element","tag":"code","props":{"code":"void run() {\n  thread t1( foo );\n  thread t2( foo );\n  thread t3;\n\n  cout << t1.get_id() << endl; // 1234\n  cout << t2.get_id() << endl; // 5678\n  cout << t3.get_id() << endl; // 0\n\n  t1.join();\n  t2.join();\n\n  cout << t1.get_id() << endl; // 0\n  cout << t2.get_id() << endl; // 0\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void run() {\n  thread t1( foo );\n  thread t2( foo );\n  thread t3;\n\n  cout << t1.get_id() << endl; // 1234\n  cout << t2.get_id() << endl; // 5678\n  cout << t3.get_id() << endl; // 0\n\n  t1.join();\n  t2.join();\n\n  cout << t1.get_id() << endl; // 0\n  cout << t2.get_id() << endl; // 0\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"sleep_for"},"children":[{"type":"text","value":"sleep_for"}]},{"type":"element","tag":"h2","props":{"id":"stdthis_threadyield"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::this_thread::yield()"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna a fatia de tempo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reinsere a thread na fila de execução"}]}]},{"type":"element","tag":"h2","props":{"id":"stdthreadhardware_concurrency"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::thread::hardware_concurrency()"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna o número de thread concorrentes suportado pela implementação do sistema"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"considere este valor apenas como uma dica"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é usualmente o número de cores lógicos"}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.udemy.com/course/modern-cpp-concurrency-in-depth/","rel":["nofollow"]},"children":[{"type":"text","value":"Modern C++ Concurrency in Depth"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"thread-com-função-sem-argumentos","depth":2,"text":"Thread com função sem argumentos"},{"id":"thread-com-função-passando-parâmetros-por-valor","depth":2,"text":"Thread com função passando parâmetros por valor"},{"id":"thread-com-função-passando-parâmetros-por-referência","depth":2,"text":"Thread com função passando parâmetros por referência"},{"id":"thread-com-classe-callable","depth":2,"text":"Thread com classe callable"},{"id":"thread-com-lambda","depth":2,"text":"Thread com lambda"},{"id":"join-detach-e-terminate","depth":2,"text":"Join, detach e terminate"},{"id":"tratamento-de-exceção","depth":2,"text":"Tratamento de exceção"},{"id":"transferindo-a-posse-das-threads","depth":2,"text":"Transferindo a posse das threads"},{"id":"threadget_id","depth":2,"text":"thread::get_id()"},{"id":"sleep_for","depth":2,"text":"sleep_for"},{"id":"stdthis_threadyield","depth":2,"text":"std::this_thread::yield()"},{"id":"stdthreadhardware_concurrency","depth":2,"text":"std::thread::hardware_concurrency()"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-thread.md","_source":"content","_file":"til/cpp-thread.md","_extension":"md"},{"_path":"/til/cpp-optimlib","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Otimização numérica em C++","description":"A **OptimLib** é uma biblioteca C++ lightweight para otimização numérica de funções não lineares.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"OptimLib"}]},{"type":"text","value":" é uma biblioteca C++ lightweight para otimização numérica de funções não lineares."}]},{"type":"element","tag":"h2","props":{"id":"instalação-da-optimlib"},"children":[{"type":"text","value":"Instalação da optimlib"}]},{"type":"element","tag":"code","props":{"code":"git clone https://github.com/kthohr/optim.git\ncd optim\n./configure --header-only-version\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/kthohr/optim.git\ncd optim\n./configure --header-only-version\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Após os comandos acima é criado um diretório chamado "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"header_only_version"}]},{"type":"text","value":".\nA partir daí é só incluir este diretório nos flags de compilação: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"-Ialgum-lugar/header_only_version"}]}]},{"type":"element","tag":"h2","props":{"id":"exemplo-1"},"children":[{"type":"text","value":"Exemplo 1"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Neste exemplo usaremos o método "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Differential Evolution (DE)"}]},{"type":"text","value":" que é uma busca\ngenética estocástica para otimização global."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Localizar o mínimo da função "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"18.686ex","height":"2.452ex","role":"img","focusable":"false","viewBox":"0 -833.9 8259 1083.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-I-1D453","d":"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-3D","d":"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D453","xLinkHref":"#MJX-1-TEX-I-1D453"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(550,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-1-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(939,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1511,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-1-TEX-N-29"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2177.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"3D","xLinkHref":"#MJX-1-TEX-N-3D"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(3233.6,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(605,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-1-TEX-N-32"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(4464.3,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-1-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5464.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-1-TEX-N-35"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(5964.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6758.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-1-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7759,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-1-TEX-N-36"},"children":[]}]}]}]}]}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Função exemplo para busca do mínimo.","src":"/til/optimlib_01.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A função a ser otimizada precisa ter o seguinte formato:"}]},{"type":"element","tag":"code","props":{"code":"double f( vetor_de_entrada,\n          vetor_de_gradiente,\n          parametros_adicionais )\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"double f( vetor_de_entrada,\n          vetor_de_gradiente,\n          parametros_adicionais )\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Definindo nosso "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"4.299ex","height":"2.262ex","role":"img","focusable":"false","viewBox":"0 -750 1900 1000","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-I-1D453","d":"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D453","xLinkHref":"#MJX-2-TEX-I-1D453"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(550,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-2-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(939,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-2-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1511,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-2-TEX-N-29"},"children":[]}]}]}]}]}]}]},{"type":"text","value":" usando o formato acima:"}]},{"type":"element","tag":"code","props":{"code":"double f( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  // Nosssa função é muito simples e só utiliza uma entrada\n  const double x = vals_inp( 0 );\n  return x * x - 5 * x + 6;\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"double f( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  // Nosssa função é muito simples e só utiliza uma entrada\n  const double x = vals_inp( 0 );\n  return x * x - 5 * x + 6;\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Realizando a otimização:"}]},{"type":"element","tag":"code","props":{"code":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, f, nullptr ) ) {\n  cout << \"Mínimo para f(x): \"\n       << \"x² - 5x + 6 => \" << x << endl;\n  // Mínimo para f(x) = x² - 5x + 6 => 2.5000\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, f, nullptr ) ) {\n  cout << \"Mínimo para f(x): \"\n       << \"x² - 5x + 6 => \" << x << endl;\n  // Mínimo para f(x) = x² - 5x + 6 => 2.5000\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"exemplo-2"},"children":[{"type":"text","value":"Exemplo 2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A função anterior é muito bem comportada e sem mínimos locais. Vamos complicar um pouco."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Localizar o mínimo da função "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"32.874ex","height":"2.452ex","role":"img","focusable":"false","viewBox":"0 -833.9 14530.1 1083.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-I-210E","d":"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-3D","d":"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2E","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-73","d":"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-69","d":"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-6E","d":"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2061","d":""},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"210E","xLinkHref":"#MJX-3-TEX-I-210E"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(576,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-3-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(965,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1537,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-3-TEX-N-29"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2203.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"3D","xLinkHref":"#MJX-3-TEX-N-3D"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(3259.6,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(605,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(4490.3,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-3-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5490.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-3-TEX-N-35"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(5990.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6784.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7785,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-3-TEX-N-36"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(8507.2,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(9507.4,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-3-TEX-N-30"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"2E","xLinkHref":"#MJX-3-TEX-N-2E","transform":"translate(500,0)"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32","transform":"translate(778,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(10952.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"73","xLinkHref":"#MJX-3-TEX-N-73"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"69","xLinkHref":"#MJX-3-TEX-N-69","transform":"translate(394,0)"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"6E","xLinkHref":"#MJX-3-TEX-N-6E","transform":"translate(672,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(12180.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2061","xLinkHref":"#MJX-3-TEX-N-2061"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(12180.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-3-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(12569.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-3-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-3-TEX-N-30","transform":"translate(500,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(13569.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(14141.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-3-TEX-N-29"},"children":[]}]}]}]}]}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Cálculo do valor mínimo.","src":"/til/optimlib_02.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Definindo a nova função:"}]},{"type":"element","tag":"code","props":{"code":"double h( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  const double x  = vals_inp( 0 );\n  return x * x - 5 * x + 6 + 0.2 * sin( 10 * x );\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"double h( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  const double x  = vals_inp( 0 );\n  return x * x - 5 * x + 6 + 0.2 * sin( 10 * x );\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Realizando a otimização:"}]},{"type":"element","tag":"code","props":{"code":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, h, nullptr ) ) {\n  cout << \"Mínimo para h(x): \"\n       << \"x² - 5x + 6 + 0.2 sin( 10x ) => \"\n       << x << endl;\n  // Mínimo para h(x): x² - 5x + 6 + 0.2 sin( 10x ) => 2.3693\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, h, nullptr ) ) {\n  cout << \"Mínimo para h(x): \"\n       << \"x² - 5x + 6 + 0.2 sin( 10x ) => \"\n       << x << endl;\n  // Mínimo para h(x): x² - 5x + 6 + 0.2 sin( 10x ) => 2.3693\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/kthohr/optim","rel":["nofollow"]},"children":[{"type":"text","value":"OptimLib: a lightweight C++ library of numerical optimization methods for nonlinear functions"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=xwR7WbKtylg","rel":["nofollow"]},"children":[{"type":"text","value":"Lec 12 : Differential Evolution"}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"\nmjx-container[jax=\"SVG\"] {\n  direction: ltr;\n}\n\nmjx-container[jax=\"SVG\"] > svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=\"SVG\"] > svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"][width=\"full\"] {\n  display: flex;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"left\"] {\n  text-align: left;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"right\"] {\n  text-align: right;\n}\n\ng[data-mml-node=\"merror\"] > g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=\"merror\"] > rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=\"mtable\"] > g > svg {\n  overflow: visible;\n}\n\n[jax=\"SVG\"] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=\"SVG\"] mjx-tool > mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool > mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=\"maction\"][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=\"SVG\"] path[data-c], mjx-container[jax=\"SVG\"] use[data-c] {\n  stroke-width: 3;\n}\n"}]}]},"date":"2020-06-15T00:00:00.000Z","draft":false,"tags":["C++","cpp","otimização","optimlib","differential evolution"],"Thumbnail":"img/headers/cpp.png","math":true,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"OptimLib"}]},{"type":"text","value":" é uma biblioteca C++ lightweight para otimização numérica de funções não lineares."}]},{"type":"element","tag":"h2","props":{"id":"instalação-da-optimlib"},"children":[{"type":"text","value":"Instalação da optimlib"}]},{"type":"element","tag":"code","props":{"code":"git clone https://github.com/kthohr/optim.git\ncd optim\n./configure --header-only-version\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"git clone https://github.com/kthohr/optim.git"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-93406b"},"children":[{"type":"text","value":"cd"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" optim"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"./configure --header-only-version"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Após os comandos acima é criado um diretório chamado "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"header_only_version"}]},{"type":"text","value":".\nA partir daí é só incluir este diretório nos flags de compilação: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"-Ialgum-lugar/header_only_version"}]}]},{"type":"element","tag":"h2","props":{"id":"exemplo-1"},"children":[{"type":"text","value":"Exemplo 1"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Neste exemplo usaremos o método "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Differential Evolution (DE)"}]},{"type":"text","value":" que é uma busca\ngenética estocástica para otimização global."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Localizar o mínimo da função "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"18.686ex","height":"2.452ex","role":"img","focusable":"false","viewBox":"0 -833.9 8259 1083.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-I-1D453","d":"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-3D","d":"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D453","xLinkHref":"#MJX-1-TEX-I-1D453"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(550,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-1-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(939,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1511,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-1-TEX-N-29"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2177.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"3D","xLinkHref":"#MJX-1-TEX-N-3D"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(3233.6,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(605,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-1-TEX-N-32"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(4464.3,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-1-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5464.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-1-TEX-N-35"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(5964.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6758.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-1-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7759,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-1-TEX-N-36"},"children":[]}]}]}]}]}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Função exemplo para busca do mínimo.","src":"/til/optimlib_01.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A função a ser otimizada precisa ter o seguinte formato:"}]},{"type":"element","tag":"code","props":{"code":"double f( vetor_de_entrada,\n          vetor_de_gradiente,\n          parametros_adicionais )\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-93406b"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"f"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"vetor_de_entrada"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"vetor_de_gradiente"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"parametros_adicionais"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" )"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Definindo nosso "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"4.299ex","height":"2.262ex","role":"img","focusable":"false","viewBox":"0 -750 1900 1000","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-I-1D453","d":"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D453","xLinkHref":"#MJX-2-TEX-I-1D453"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(550,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-2-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(939,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-2-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1511,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-2-TEX-N-29"},"children":[]}]}]}]}]}]}]},{"type":"text","value":" usando o formato acima:"}]},{"type":"element","tag":"code","props":{"code":"double f( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  // Nosssa função é muito simples e só utiliza uma entrada\n  const double x = vals_inp( 0 );\n  return x * x - 5 * x + 6;\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-93406b"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"f"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"vec"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"&"}]},{"type":"element","tag":"span","props":{"class":"ct-7ac0a1"},"children":[{"type":"text","value":"vals_inp"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"vec"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-7ac0a1"},"children":[{"type":"text","value":"grad_out"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-93406b"},"children":[{"type":"text","value":"void"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-7ac0a1"},"children":[{"type":"text","value":"opt_data"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" )"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"{"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-6aa8e9"},"children":[{"type":"text","value":"  // Nosssa função é muito simples e só utiliza uma entrada"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-93406b"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"vals_inp"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" );"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"-"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"6"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Realizando a otimização:"}]},{"type":"element","tag":"code","props":{"code":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, f, nullptr ) ) {\n  cout << \"Mínimo para f(x): \"\n       << \"x² - 5x + 6 => \" << x << endl;\n  // Mínimo para f(x) = x² - 5x + 6 => 2.5000\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::vec x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"ones"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" ) "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"0.5"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-6aa8e9"},"children":[{"type":"text","value":" // Valor inicial 1.5"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"optim"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"de"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( x, f, "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"nullptr"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" ) ) {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"  cout "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ce8c8e"},"children":[{"type":"text","value":"\"Mínimo para f(x): \""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"       "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ce8c8e"},"children":[{"type":"text","value":"\"x² - 5x + 6 => \""}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" endl;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-6aa8e9"},"children":[{"type":"text","value":"  // Mínimo para f(x) = x² - 5x + 6 => 2.5000"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"exemplo-2"},"children":[{"type":"text","value":"Exemplo 2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A função anterior é muito bem comportada e sem mínimos locais. Vamos complicar um pouco."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Localizar o mínimo da função "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"32.874ex","height":"2.452ex","role":"img","focusable":"false","viewBox":"0 -833.9 14530.1 1083.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-I-210E","d":"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-3D","d":"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2E","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-73","d":"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-69","d":"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-6E","d":"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2061","d":""},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"210E","xLinkHref":"#MJX-3-TEX-I-210E"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(576,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-3-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(965,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1537,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-3-TEX-N-29"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2203.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"3D","xLinkHref":"#MJX-3-TEX-N-3D"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(3259.6,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(605,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(4490.3,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-3-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5490.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-3-TEX-N-35"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(5990.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6784.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7785,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-3-TEX-N-36"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(8507.2,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(9507.4,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-3-TEX-N-30"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"2E","xLinkHref":"#MJX-3-TEX-N-2E","transform":"translate(500,0)"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32","transform":"translate(778,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(10952.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"73","xLinkHref":"#MJX-3-TEX-N-73"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"69","xLinkHref":"#MJX-3-TEX-N-69","transform":"translate(394,0)"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"6E","xLinkHref":"#MJX-3-TEX-N-6E","transform":"translate(672,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(12180.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2061","xLinkHref":"#MJX-3-TEX-N-2061"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(12180.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-3-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(12569.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-3-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-3-TEX-N-30","transform":"translate(500,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(13569.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(14141.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-3-TEX-N-29"},"children":[]}]}]}]}]}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Cálculo do valor mínimo.","src":"/til/optimlib_02.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Definindo a nova função:"}]},{"type":"element","tag":"code","props":{"code":"double h( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  const double x  = vals_inp( 0 );\n  return x * x - 5 * x + 6 + 0.2 * sin( 10 * x );\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-93406b"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"h"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"vec"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"&"}]},{"type":"element","tag":"span","props":{"class":"ct-7ac0a1"},"children":[{"type":"text","value":"vals_inp"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"vec"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-7ac0a1"},"children":[{"type":"text","value":"grad_out"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-93406b"},"children":[{"type":"text","value":"void"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-7ac0a1"},"children":[{"type":"text","value":"opt_data"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" )"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"{"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-93406b"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x  "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"vals_inp"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" );"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"-"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"6"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"0.2"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"sin"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"10"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x );"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Realizando a otimização:"}]},{"type":"element","tag":"code","props":{"code":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, h, nullptr ) ) {\n  cout << \"Mínimo para h(x): \"\n       << \"x² - 5x + 6 + 0.2 sin( 10x ) => \"\n       << x << endl;\n  // Mínimo para h(x): x² - 5x + 6 + 0.2 sin( 10x ) => 2.3693\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::vec x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"ones"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" ) "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"0.5"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-6aa8e9"},"children":[{"type":"text","value":" // Valor inicial 1.5"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"optim"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-65ee76"},"children":[{"type":"text","value":"de"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"( x, h, "}]},{"type":"element","tag":"span","props":{"class":"ct-a9f2c1"},"children":[{"type":"text","value":"nullptr"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" ) ) {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"  cout "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ce8c8e"},"children":[{"type":"text","value":"\"Mínimo para h(x): \""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"       "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ce8c8e"},"children":[{"type":"text","value":"\"x² - 5x + 6 + 0.2 sin( 10x ) => \""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"       "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-9cb91e"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":" endl;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-6aa8e9"},"children":[{"type":"text","value":"  // Mínimo para h(x): x² - 5x + 6 + 0.2 sin( 10x ) => 2.3693"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-9de557"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/kthohr/optim","rel":["nofollow"]},"children":[{"type":"text","value":"OptimLib: a lightweight C++ library of numerical optimization methods for nonlinear functions"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=xwR7WbKtylg","rel":["nofollow"]},"children":[{"type":"text","value":"Lec 12 : Differential Evolution"}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"\nmjx-container[jax=\"SVG\"] {\n  direction: ltr;\n}\n\nmjx-container[jax=\"SVG\"] > svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=\"SVG\"] > svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"][width=\"full\"] {\n  display: flex;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"left\"] {\n  text-align: left;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"right\"] {\n  text-align: right;\n}\n\ng[data-mml-node=\"merror\"] > g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=\"merror\"] > rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=\"mtable\"] > g > svg {\n  overflow: visible;\n}\n\n[jax=\"SVG\"] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=\"SVG\"] mjx-tool > mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool > mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=\"maction\"][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=\"SVG\"] path[data-c], mjx-container[jax=\"SVG\"] use[data-c] {\n  stroke-width: 3;\n}\n"}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-ce8c8e{color:#E6DB74}.ct-a9f2c1{color:#AE81FF}.ct-6aa8e9{color:#88846F}.ct-7ac0a1{color:#FD971F}.ct-9cb91e{color:#F92672}.ct-65ee76{color:#A6E22E}.ct-93406b{color:#66D9EF}.ct-9de557{color:#F8F8F2}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"instalação-da-optimlib","depth":2,"text":"Instalação da optimlib"},{"id":"exemplo-1","depth":2,"text":"Exemplo 1"},{"id":"exemplo-2","depth":2,"text":"Exemplo 2"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-optimlib.md","_source":"content","_file":"til/cpp-optimlib.md","_extension":"md"},{"_path":"/til/cpp-constexpr","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"C++ - otimização com constexpr","description":"Otimização com constexpr.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A linguagem C++ possui o conceito de expressões constantes (p.e. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"1+2"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"3*4"}]},{"type":"text","value":")\nque SEMPRE produzem o mesmo resultado sem nenhum efeito colateral. Se\no compilador puder diretamente otimizar e embutir esta expressões no programa\nem tempo de compilação teremos um ganho de performance."}]},{"type":"element","tag":"code","props":{"code":"#include <iostream>\n#define LEN 10\nint len_foo() {\n    int i = 2;\n    return i;\n}\nconstexpr int len_foo_constexpr() {\n    return 5;\n}\n\n// Pode ser usado em recursão\nconstexpr int fibonacci(const int n) {\n    return n == 1 || n == 2 ? 1 : fibonacci(n-1) + fibonacci(n-2);\n}\n\nint main() {\n    char arr_1[10];                      // legal\n    char arr_2[LEN];                     // legal\n    int len = 10;\n    // char arr_3[len];                  // ilegal\n    const int len_2 = len + 1;\n    constexpr int len_2_constexpr = 1 + 2 + 3;\n    // char arr_4[len_2];                // ilegal, mas aceito por vários compiladores\n    // len_2 apesar de constante não é formado somente por constantes\n    char arr_4[len_2_constexpr];         // legal\n    // char arr_5[len_foo()+5];          // ilegal\n    char arr_6[len_foo_constexpr() + 1]; // legal\n    // 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n    std::cout << fibonacci(10) << std::endl;\n    return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#include <iostream>\n#define LEN 10\nint len_foo() {\n    int i = 2;\n    return i;\n}\nconstexpr int len_foo_constexpr() {\n    return 5;\n}\n\n// Pode ser usado em recursão\nconstexpr int fibonacci(const int n) {\n    return n == 1 || n == 2 ? 1 : fibonacci(n-1) + fibonacci(n-2);\n}\n\nint main() {\n    char arr_1[10];                      // legal\n    char arr_2[LEN];                     // legal\n    int len = 10;\n    // char arr_3[len];                  // ilegal\n    const int len_2 = len + 1;\n    constexpr int len_2_constexpr = 1 + 2 + 3;\n    // char arr_4[len_2];                // ilegal, mas aceito por vários compiladores\n    // len_2 apesar de constante não é formado somente por constantes\n    char arr_4[len_2_constexpr];         // legal\n    // char arr_5[len_foo()+5];          // ilegal\n    char arr_6[len_foo_constexpr() + 1]; // legal\n    // 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n    std::cout << fibonacci(10) << std::endl;\n    return 0;\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://itbook.xuxinkai.cn/read/modern-cpp-tutorial-en/02-usability.md","rel":["nofollow"]},"children":[{"type":"text","value":"Chapter 02: Language Usability Enhancements"}]}]}]}]},"date":"2020-05-04T00:00:00.000Z","draft":true,"tags":["C++","cpp","constexpr"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A linguagem C++ possui o conceito de expressões constantes (p.e. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"1+2"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"3*4"}]},{"type":"text","value":")\nque SEMPRE produzem o mesmo resultado sem nenhum efeito colateral. Se\no compilador puder diretamente otimizar e embutir esta expressões no programa\nem tempo de compilação teremos um ganho de performance."}]},{"type":"element","tag":"code","props":{"code":"#include <iostream>\n#define LEN 10\nint len_foo() {\n    int i = 2;\n    return i;\n}\nconstexpr int len_foo_constexpr() {\n    return 5;\n}\n\n// Pode ser usado em recursão\nconstexpr int fibonacci(const int n) {\n    return n == 1 || n == 2 ? 1 : fibonacci(n-1) + fibonacci(n-2);\n}\n\nint main() {\n    char arr_1[10];                      // legal\n    char arr_2[LEN];                     // legal\n    int len = 10;\n    // char arr_3[len];                  // ilegal\n    const int len_2 = len + 1;\n    constexpr int len_2_constexpr = 1 + 2 + 3;\n    // char arr_4[len_2];                // ilegal, mas aceito por vários compiladores\n    // len_2 apesar de constante não é formado somente por constantes\n    char arr_4[len_2_constexpr];         // legal\n    // char arr_5[len_foo()+5];          // ilegal\n    char arr_6[len_foo_constexpr() + 1]; // legal\n    // 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n    std::cout << fibonacci(10) << std::endl;\n    return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"#include <iostream>\n#define LEN 10\nint len_foo() {\n    int i = 2;\n    return i;\n}\nconstexpr int len_foo_constexpr() {\n    return 5;\n}\n\n// Pode ser usado em recursão\nconstexpr int fibonacci(const int n) {\n    return n == 1 || n == 2 ? 1 : fibonacci(n-1) + fibonacci(n-2);\n}\n\nint main() {\n    char arr_1[10];                      // legal\n    char arr_2[LEN];                     // legal\n    int len = 10;\n    // char arr_3[len];                  // ilegal\n    const int len_2 = len + 1;\n    constexpr int len_2_constexpr = 1 + 2 + 3;\n    // char arr_4[len_2];                // ilegal, mas aceito por vários compiladores\n    // len_2 apesar de constante não é formado somente por constantes\n    char arr_4[len_2_constexpr];         // legal\n    // char arr_5[len_foo()+5];          // ilegal\n    char arr_6[len_foo_constexpr() + 1]; // legal\n    // 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n    std::cout << fibonacci(10) << std::endl;\n    return 0;\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://itbook.xuxinkai.cn/read/modern-cpp-tutorial-en/02-usability.md","rel":["nofollow"]},"children":[{"type":"text","value":"Chapter 02: Language Usability Enhancements"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-constexpr.md","_source":"content","_file":"til/cpp-constexpr.md","_extension":"md"},{"_path":"/til/cpp-clant-tidy","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Otimizando código com clang-tidy","description":"Como atualizar seu código C++ utilizando a ferramenta clang-tity.","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"instalação"},"children":[{"type":"text","value":"Instalação"}]},{"type":"element","tag":"code","props":{"code":"apt-get install clang-tidy\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"apt-get install clang-tidy\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"verificadores-disponíveis"},"children":[{"type":"text","value":"Verificadores disponíveis"}]},{"type":"element","tag":"code","props":{"code":"clang-tidy --list-checks -checks='*' | grep \"modernize\"\n    modernize-avoid-bind\n    modernize-deprecated-headers\n    modernize-loop-convert\n    modernize-make-shared\n    modernize-make-unique\n    modernize-pass-by-value\n    modernize-raw-string-literal\n    modernize-redundant-void-arg\n    modernize-replace-auto-ptr\n    modernize-replace-random-shuffle\n    modernize-return-braced-init-list\n    modernize-shrink-to-fit\n    modernize-unary-static-assert\n    modernize-use-auto\n    modernize-use-bool-literals\n    modernize-use-default-member-init\n    modernize-use-emplace\n    modernize-use-equals-default\n    modernize-use-equals-delete\n    modernize-use-noexcept\n    modernize-use-nullptr\n    modernize-use-override\n    modernize-use-transparent-functors\n    modernize-use-uncaught-exceptions\n    modernize-use-using\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"clang-tidy --list-checks -checks='*' | grep \"modernize\"\n    modernize-avoid-bind\n    modernize-deprecated-headers\n    modernize-loop-convert\n    modernize-make-shared\n    modernize-make-unique\n    modernize-pass-by-value\n    modernize-raw-string-literal\n    modernize-redundant-void-arg\n    modernize-replace-auto-ptr\n    modernize-replace-random-shuffle\n    modernize-return-braced-init-list\n    modernize-shrink-to-fit\n    modernize-unary-static-assert\n    modernize-use-auto\n    modernize-use-bool-literals\n    modernize-use-default-member-init\n    modernize-use-emplace\n    modernize-use-equals-default\n    modernize-use-equals-delete\n    modernize-use-noexcept\n    modernize-use-nullptr\n    modernize-use-override\n    modernize-use-transparent-functors\n    modernize-use-uncaught-exceptions\n    modernize-use-using\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"uso"},"children":[{"type":"text","value":"Uso"}]},{"type":"element","tag":"code","props":{"code":"clang-tidy -checks='modernize-use-override' -fix test.cpp -- -std=c++11\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"clang-tidy -checks='modernize-use-override' -fix test.cpp -- -std=c++11\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://clang.llvm.org/extra/clang-tidy/","rel":["nofollow"]},"children":[{"type":"text","value":"Extra Clang Tools 10 documentation - CLANG-TIDY"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/KratosMultiphysics/Kratos/wiki/How-to-use-Clang-Tidy-to-automatically-correct-code","rel":["nofollow"]},"children":[{"type":"text","value":"How to use Clang Tidy to automatically correct code"}]}]}]}]},"date":"2020-01-13T00:00:00.000Z","draft":false,"tags":["C++","cpp","clang-tidy"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"instalação"},"children":[{"type":"text","value":"Instalação"}]},{"type":"element","tag":"code","props":{"code":"apt-get install clang-tidy\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"apt-get install clang-tidy"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"verificadores-disponíveis"},"children":[{"type":"text","value":"Verificadores disponíveis"}]},{"type":"element","tag":"code","props":{"code":"clang-tidy --list-checks -checks='*' | grep \"modernize\"\n    modernize-avoid-bind\n    modernize-deprecated-headers\n    modernize-loop-convert\n    modernize-make-shared\n    modernize-make-unique\n    modernize-pass-by-value\n    modernize-raw-string-literal\n    modernize-redundant-void-arg\n    modernize-replace-auto-ptr\n    modernize-replace-random-shuffle\n    modernize-return-braced-init-list\n    modernize-shrink-to-fit\n    modernize-unary-static-assert\n    modernize-use-auto\n    modernize-use-bool-literals\n    modernize-use-default-member-init\n    modernize-use-emplace\n    modernize-use-equals-default\n    modernize-use-equals-delete\n    modernize-use-noexcept\n    modernize-use-nullptr\n    modernize-use-override\n    modernize-use-transparent-functors\n    modernize-use-uncaught-exceptions\n    modernize-use-using\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"clang-tidy --list-checks -checks="}]},{"type":"element","tag":"span","props":{"class":"ct-8493b1"},"children":[{"type":"text","value":"'*'"}]},{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-57bbb4"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":" grep "}]},{"type":"element","tag":"span","props":{"class":"ct-8493b1"},"children":[{"type":"text","value":"\"modernize\""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-avoid-bind"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-deprecated-headers"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-loop-convert"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-make-shared"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-make-unique"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-pass-by-value"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-raw-string-literal"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-redundant-void-arg"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-replace-auto-ptr"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-replace-random-shuffle"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-return-braced-init-list"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-shrink-to-fit"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-unary-static-assert"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-auto"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-bool-literals"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-default-member-init"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-emplace"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-equals-default"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-equals-delete"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-noexcept"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-nullptr"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-override"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-transparent-functors"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-uncaught-exceptions"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"    modernize-use-using"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"uso"},"children":[{"type":"text","value":"Uso"}]},{"type":"element","tag":"code","props":{"code":"clang-tidy -checks='modernize-use-override' -fix test.cpp -- -std=c++11\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":"clang-tidy -checks="}]},{"type":"element","tag":"span","props":{"class":"ct-8493b1"},"children":[{"type":"text","value":"'modernize-use-override'"}]},{"type":"element","tag":"span","props":{"class":"ct-a38ed5"},"children":[{"type":"text","value":" -fix test.cpp -- -std=c++11"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://clang.llvm.org/extra/clang-tidy/","rel":["nofollow"]},"children":[{"type":"text","value":"Extra Clang Tools 10 documentation - CLANG-TIDY"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/KratosMultiphysics/Kratos/wiki/How-to-use-Clang-Tidy-to-automatically-correct-code","rel":["nofollow"]},"children":[{"type":"text","value":"How to use Clang Tidy to automatically correct code"}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-57bbb4{color:#F92672}.ct-8493b1{color:#E6DB74}.ct-a38ed5{color:#F8F8F2}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"instalação","depth":2,"text":"Instalação"},{"id":"verificadores-disponíveis","depth":2,"text":"Verificadores disponíveis"},{"id":"uso","depth":2,"text":"Uso"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-clant-tidy.md","_source":"content","_file":"til/cpp-clant-tidy.md","_extension":"md"}]