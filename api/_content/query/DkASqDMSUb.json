{"_path":"/til/cpp-mlpack-feed-forward-neural-network-no-debian","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Feed Forward Neural Network no debian com mlpack","description":"Como criar usando C++ uma rede neural do tipo feed forward no Debian stable","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Este artigo mostra como criar uma rede neural simples no\n"},{"type":"element","tag":"a","props":{"href":"https://www.debian.org/releases/stable/","rel":["nofollow"]},"children":[{"type":"text","value":"Debian stable"}]},{"type":"text","value":" utilizando a\n"},{"type":"element","tag":"a","props":{"href":"http://www.mlpack.org","rel":["nofollow"]},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":". A "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":" é uma biblioteca popular e de alta\nperformance para aprendizado de máquina em C++."}]},{"type":"element","tag":"h2","props":{"id":"versões-do-mlpack-disponíveis-do-debian"},"children":[{"type":"text","value":"Versões do mlpack disponíveis do Debian"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As versões disponíveis no momento da escrita deste artigo são:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"center"},"children":[{"type":"text","value":"Versão do Debian"}]},{"type":"element","tag":"th","props":{"align":"center"},"children":[{"type":"text","value":"Versão do mlpack"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Arquiteturas"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"jessie (oldstable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"1.0.10-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 armel armhf i386"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"stretch (stable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"2.1.1-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"buster (testing)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"3.0.4-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"sid (unstable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"3.0.4-1+b1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"kfreebsd-amd64 kfreebsd-i386"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As versões do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"libmlpack-dev"}]},{"type":"text","value":" disponíveis para o "},{"type":"element","tag":"a","props":{"href":"http://debian.org","rel":["nofollow"]},"children":[{"type":"text","value":"Debian"}]},{"type":"text","value":" podem ser consultadas neste\n"},{"type":"element","tag":"a","props":{"href":"https://packages.debian.org/search?keywords=libmlpack-dev&searchon=names&suite=all&section=all","rel":["nofollow"]},"children":[{"type":"text","value":"link"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Neste artigo usaremos a versão "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"3.0.4"}]},{"type":"text","value":" presente no "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"utilizando-pacotes-testing-junto-com-stable"},"children":[{"type":"text","value":"Utilizando pacotes testing junto com stable"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Eu prefiro utilizar somente os pacotes "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":" nos servidores por serem\nversões muito bem testadas. Normalmente as últimas versões não estão\ndisponíveis no repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":", mas sim nos repositórios "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":"\ne "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"unstable"}]},{"type":"text","value":". O repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":" contém próximo candidato a se tornar\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":" de cada pacote. O repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"unstable"}]},{"type":"text","value":" contém a última versão\ndisponível de cada pacote."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Misturar repositórios diferente pode ser algo tranquilo de manter se feito com cuidado.\nÉ só indicar "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"precisamente"}]},{"type":"text","value":" qual pacote deve ser pego de cada repositório.\nO Debian tem um mecanismo bem fácil de usar para realizar esta tarefa.\nNo meu caso eu tenho uma regra geral: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"pegar sempre do stable"}]},{"type":"text","value":" e algumas\npoucas exceções para pacotes específicos."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para mesclar diferentes repositórios basta "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"pinar"}]},{"type":"text","value":" os pacotes para indicar quais versões serão usadas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para marcar o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":" e o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"armadillo"}]},{"type":"text","value":" para serem instalados a partir do\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":" crie um arquivo chamado "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/apt/preferences.d/mlpack"}]},{"type":"text","value":" com\no seguinte conteúdo:"}]},{"type":"element","tag":"code","props":{"code":"Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/apt/preferences.d/mlpack"}]},{"type":"text","value":" poderia ter qualquer nome, mas é conveniente usar algo descritivo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"E para desfazer a pinagem basta remover o arquivo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então é só proceder a instalação normal com o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"apt"}]},{"type":"text","value":" como de costume:"}]},{"type":"element","tag":"code","props":{"code":"apt install libmlpack-dev\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"apt install libmlpack-dev\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"dados-de-treinamento"},"children":[{"type":"text","value":"Dados de treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vamos utilizar dois grupos de dados, cada um com duas variáveis (x e y)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Olhando nosso conjunto de dados de cima podemos ver claramente duas curvas, uma para cada conjunto."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Grupo de dados de treinamento","src":"/til/mlpack-foo-1.gif#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para facilitar a visualização, o primeiro grupo está em "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"z=0"}]},{"type":"text","value":" e o segundo em "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"z=1"}]},{"type":"text","value":", conforme pode ser visto na\nanimação abaixo. É mais ou menos isso que a rede deverá "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"aprender"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Grupo de dados de treinamento","src":"/til/mlpack-foo-2.gif#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"foo.csv"}]},{"type":"text","value":" contém as duas curvas com os pontos distribuídos do modo\naleatório para não favorecer ou influenciar o treinamento. São ao todo 400\nlinhas e 3 colunas. As duas primeiras colunas são as "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"entradas"}]},{"type":"text","value":" e a terceira\né o "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"grupo"}]},{"type":"text","value":" a qual pertencem."}]},{"type":"element","tag":"code","props":{"code":"-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n...\n","language":"csv"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n...\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"implementação"},"children":[{"type":"text","value":"Implementação"}]},{"type":"element","tag":"h3","props":{"id":"carregando-as-dependências"},"children":[{"type":"text","value":"Carregando as dependências"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Incluindo os cabeçalhos específicos para rede neural artificial (ANN)."}]},{"type":"element","tag":"code","props":{"code":"#include <mlpack/core.hpp>\n#include <mlpack/methods/ann/ffn.hpp>\n#include <mlpack/methods/ann/layer/layer.hpp>\n#include <mlpack/methods/ann/loss_functions/mean_squared_error.hpp>\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#include <mlpack/core.hpp>\n#include <mlpack/methods/ann/ffn.hpp>\n#include <mlpack/methods/ann/layer/layer.hpp>\n#include <mlpack/methods/ann/loss_functions/mean_squared_error.hpp>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para deixar o código bem mais legível alguns namespaces serão usados por padrão."}]},{"type":"element","tag":"code","props":{"code":"using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"carregar-e-transpor-os-dados-do-arquivo-csv"},"children":[{"type":"text","value":"Carregar e transpor os dados do arquivo CSV"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As matrizes do "},{"type":"element","tag":"a","props":{"href":"http://arma.sourceforge.net/","rel":["nofollow"]},"children":[{"type":"text","value":"Armadillo"}]},{"type":"text","value":" (pacote de álgebra linear do mlpack) são armazenada no\nformato "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"column-major"}]},{"type":"text","value":"; isto significa que no disco cada coluna é localizada\nnuma região contígua de memória. Veja\n"},{"type":"element","tag":"a","props":{"href":"https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/matrices.html","rel":["nofollow"]},"children":[{"type":"text","value":"detalhes"}]},{"type":"text","value":" na\ndocumentação do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Esta é uma conveniência bem interessante, pois para escrever os arquivos os\nregistros são entrados por linha e para processamento são tratados em colunas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então além de carregar é preciso transpor a matriz de dados."}]},{"type":"element","tag":"code","props":{"code":"  // lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  // transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout << \"Linhas:  \" << data.n_rows << endl; // 3\n  cout << \"Colunas: \" << data.n_cols << endl; // 400\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  // lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  // transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout << \"Linhas:  \" << data.n_rows << endl; // 3\n  cout << \"Colunas: \" << data.n_cols << endl; // 400\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A matriz de dados foi carregada e precisa ser dividida entre dados de treinamento e dados de teste."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Dados depois de carregados","src":"/til/mlpack-data.svg#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É muito importante que o modelo nunca veja os dados de teste para que se tenha\numa boa generalização."}]},{"type":"element","tag":"h3","props":{"id":"constantes-para-os-índices"},"children":[{"type":"text","value":"Constantes para os índices"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para facilitar a leitura do fonte e evitar "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"números mágicos"}]},{"type":"text","value":" no código defini algumas constantes convenientes:"}]},{"type":"element","tag":"code","props":{"code":"  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note que neste caso serão usadas 10 amostras para teste."}]},{"type":"element","tag":"h3","props":{"id":"dados-de-entrada-para-treinamento"},"children":[{"type":"text","value":"Dados de entrada para treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de entrada para treinamento."}]},{"type":"element","tag":"code","props":{"code":"  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-saída-para-treinamento"},"children":[{"type":"text","value":"Dados de saída para treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de saída para treinamento."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-entrada-para-teste"},"children":[{"type":"text","value":"Dados de entrada para teste"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de entrada para teste."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-saída-para-teste"},"children":[{"type":"text","value":"Dados de saída para teste"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de saída para teste."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"visualizando-os-dados-de-teste"},"children":[{"type":"text","value":"Visualizando os dados de teste"}]},{"type":"element","tag":"code","props":{"code":"  cout << \"Dados de entrada para teste: \\n\" << testdata << endl;\n  cout << \"Dados de saída para teste: \\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  cout << \"Dados de entrada para teste: \\n\" << testdata << endl;\n  cout << \"Dados de saída para teste: \\n\" << testlabels << endl;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É importante notar que os dados de teste contém amostras de ambos os grupos\ne estão distribuídos em todo o espaço de amostra."}]},{"type":"element","tag":"code","props":{"code":"Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"construindo-a-rede-neural"},"children":[{"type":"text","value":"Construindo a rede neural"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"img","src":"/til/mlpack-ffn.svg#center"},"children":[]}]},{"type":"element","tag":"code","props":{"code":"  // Feed Forward Network\n  // FFN<tipo-de-saída-das-camadas, regra-de-inicialização> model;\n  FFN<MeanSquaredError<>, RandomInitialization> model;\n  // Adiciona camada com 2 entradas e 8 saídas\n  model.Add<Linear<>>( traindata.n_rows, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 8 saídas\n  model.Add<Linear<>>( 8, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 1 saída\n  model.Add<Linear<>>( 8, 1 );\n  model.Add<SigmoidLayer<>>();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  // Feed Forward Network\n  // FFN<tipo-de-saída-das-camadas, regra-de-inicialização> model;\n  FFN<MeanSquaredError<>, RandomInitialization> model;\n  // Adiciona camada com 2 entradas e 8 saídas\n  model.Add<Linear<>>( traindata.n_rows, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 8 saídas\n  model.Add<Linear<>>( 8, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 1 saída\n  model.Add<Linear<>>( 8, 1 );\n  model.Add<SigmoidLayer<>>();\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"treinamento"},"children":[{"type":"text","value":"Treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A partir da inicialização aleatória dos pesos da conexões inicia-se o treinamento."}]},{"type":"element","tag":"code","props":{"code":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    // Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    // Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout << \"Erro: \" << diff * diff.t();\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    // Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    // Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout << \"Erro: \" << diff * diff.t();\n  }\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note o erro sendo reduzido a cada treinamento."}]},{"type":"element","tag":"code","props":{"code":"Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"testando-o-modelo-ajustado"},"children":[{"type":"text","value":"Testando o modelo ajustado"}]},{"type":"element","tag":"code","props":{"code":"  mat assignments;\n  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  mat assignments;\n  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Saída:"}]},{"type":"element","tag":"code","props":{"code":"Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"salvando-modelo-para-continuar-depois"},"children":[{"type":"text","value":"Salvando modelo para continuar depois"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O modelo pode ser salvo a qualquer momento e recarregado para continuar o treinamento.\nUm arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"XML"}]},{"type":"text","value":" serializado pelo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":" é salvo."}]},{"type":"element","tag":"code","props":{"code":"  Save( \"model.xml\", \"model\", model, false );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  Save( \"model.xml\", \"model\", model, false );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"carregando-o-modelo-salvo-na-sessão-anterior"},"children":[{"type":"text","value":"Carregando o modelo salvo na sessão anterior"}]},{"type":"element","tag":"code","props":{"code":"  Load( \"model.xml\", \"model\", model );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  Load( \"model.xml\", \"model\", model );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"nova-sessão-de-treinamento-para-refinar"},"children":[{"type":"text","value":"Nova sessão de treinamento para refinar"}]},{"type":"element","tag":"code","props":{"code":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"novos-testes"},"children":[{"type":"text","value":"Novos testes"}]},{"type":"element","tag":"code","props":{"code":"  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Saída:"}]},{"type":"element","tag":"code","props":{"code":"Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"salvando-o-modelo-atualizado"},"children":[{"type":"text","value":"Salvando o modelo atualizado"}]},{"type":"element","tag":"code","props":{"code":"  Save( \"model2.xml\", \"model\", model, false );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  Save( \"model2.xml\", \"model\", model, false );\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"código-fonte-completo"},"children":[{"type":"text","value":"Código fonte completo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O código fonte completo pode ser encontrado no\n"},{"type":"element","tag":"a","props":{"href":"https://github.com/geraldolsribeiro/mlpack-tutorials/tree/master/ffn","rel":["nofollow"]},"children":[{"type":"text","value":"github"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para baixar e compilar o fonte deste artigo utilize:"}]},{"type":"element","tag":"code","props":{"code":"git clone https://github.com/geraldolsribeiro/mlpack-tutorials/\ncd mlpack-tutorials/ffn\nmake\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/geraldolsribeiro/mlpack-tutorials/\ncd mlpack-tutorials/ffn\nmake\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://wiki.debian.org/AptPreferences","rel":["nofollow"]},"children":[{"type":"text","value":"Apt Preferences"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/anntutorial.html","rel":["nofollow"]},"children":[{"type":"text","value":"Neural Network Tutorial"}]}]}]}]},"date":"2019-04-29T00:00:00.000Z","tags":["ffn","mlpack","debian","apt","C++","cpp","armadillo"],"thumbnail":"/img/headers/ffn.jpg","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Este artigo mostra como criar uma rede neural simples no\n"},{"type":"element","tag":"a","props":{"href":"https://www.debian.org/releases/stable/","rel":["nofollow"]},"children":[{"type":"text","value":"Debian stable"}]},{"type":"text","value":" utilizando a\n"},{"type":"element","tag":"a","props":{"href":"http://www.mlpack.org","rel":["nofollow"]},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":". A "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":" é uma biblioteca popular e de alta\nperformance para aprendizado de máquina em C++."}]},{"type":"element","tag":"h2","props":{"id":"versões-do-mlpack-disponíveis-do-debian"},"children":[{"type":"text","value":"Versões do mlpack disponíveis do Debian"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As versões disponíveis no momento da escrita deste artigo são:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"center"},"children":[{"type":"text","value":"Versão do Debian"}]},{"type":"element","tag":"th","props":{"align":"center"},"children":[{"type":"text","value":"Versão do mlpack"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Arquiteturas"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"jessie (oldstable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"1.0.10-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 armel armhf i386"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"stretch (stable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"2.1.1-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"buster (testing)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"3.0.4-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"sid (unstable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"3.0.4-1+b1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"kfreebsd-amd64 kfreebsd-i386"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As versões do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"libmlpack-dev"}]},{"type":"text","value":" disponíveis para o "},{"type":"element","tag":"a","props":{"href":"http://debian.org","rel":["nofollow"]},"children":[{"type":"text","value":"Debian"}]},{"type":"text","value":" podem ser consultadas neste\n"},{"type":"element","tag":"a","props":{"href":"https://packages.debian.org/search?keywords=libmlpack-dev&searchon=names&suite=all&section=all","rel":["nofollow"]},"children":[{"type":"text","value":"link"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Neste artigo usaremos a versão "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"3.0.4"}]},{"type":"text","value":" presente no "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"utilizando-pacotes-testing-junto-com-stable"},"children":[{"type":"text","value":"Utilizando pacotes testing junto com stable"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Eu prefiro utilizar somente os pacotes "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":" nos servidores por serem\nversões muito bem testadas. Normalmente as últimas versões não estão\ndisponíveis no repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":", mas sim nos repositórios "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":"\ne "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"unstable"}]},{"type":"text","value":". O repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":" contém próximo candidato a se tornar\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":" de cada pacote. O repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"unstable"}]},{"type":"text","value":" contém a última versão\ndisponível de cada pacote."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Misturar repositórios diferente pode ser algo tranquilo de manter se feito com cuidado.\nÉ só indicar "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"precisamente"}]},{"type":"text","value":" qual pacote deve ser pego de cada repositório.\nO Debian tem um mecanismo bem fácil de usar para realizar esta tarefa.\nNo meu caso eu tenho uma regra geral: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"pegar sempre do stable"}]},{"type":"text","value":" e algumas\npoucas exceções para pacotes específicos."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para mesclar diferentes repositórios basta "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"pinar"}]},{"type":"text","value":" os pacotes para indicar quais versões serão usadas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para marcar o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":" e o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"armadillo"}]},{"type":"text","value":" para serem instalados a partir do\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":" crie um arquivo chamado "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/apt/preferences.d/mlpack"}]},{"type":"text","value":" com\no seguinte conteúdo:"}]},{"type":"element","tag":"code","props":{"code":"Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/apt/preferences.d/mlpack"}]},{"type":"text","value":" poderia ter qualquer nome, mas é conveniente usar algo descritivo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"E para desfazer a pinagem basta remover o arquivo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então é só proceder a instalação normal com o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"apt"}]},{"type":"text","value":" como de costume:"}]},{"type":"element","tag":"code","props":{"code":"apt install libmlpack-dev\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-dda49e"},"children":[{"type":"text","value":"apt install libmlpack-dev"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"dados-de-treinamento"},"children":[{"type":"text","value":"Dados de treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vamos utilizar dois grupos de dados, cada um com duas variáveis (x e y)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Olhando nosso conjunto de dados de cima podemos ver claramente duas curvas, uma para cada conjunto."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Grupo de dados de treinamento","src":"/til/mlpack-foo-1.gif#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para facilitar a visualização, o primeiro grupo está em "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"z=0"}]},{"type":"text","value":" e o segundo em "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"z=1"}]},{"type":"text","value":", conforme pode ser visto na\nanimação abaixo. É mais ou menos isso que a rede deverá "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"aprender"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Grupo de dados de treinamento","src":"/til/mlpack-foo-2.gif#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"foo.csv"}]},{"type":"text","value":" contém as duas curvas com os pontos distribuídos do modo\naleatório para não favorecer ou influenciar o treinamento. São ao todo 400\nlinhas e 3 colunas. As duas primeiras colunas são as "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"entradas"}]},{"type":"text","value":" e a terceira\né o "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"grupo"}]},{"type":"text","value":" a qual pertencem."}]},{"type":"element","tag":"code","props":{"code":"-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n...\n","language":"csv"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n..."}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"implementação"},"children":[{"type":"text","value":"Implementação"}]},{"type":"element","tag":"h3","props":{"id":"carregando-as-dependências"},"children":[{"type":"text","value":"Carregando as dependências"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Incluindo os cabeçalhos específicos para rede neural artificial (ANN)."}]},{"type":"element","tag":"code","props":{"code":"#include <mlpack/core.hpp>\n#include <mlpack/methods/ann/ffn.hpp>\n#include <mlpack/methods/ann/layer/layer.hpp>\n#include <mlpack/methods/ann/loss_functions/mean_squared_error.hpp>\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"#include <mlpack/core.hpp>\n#include <mlpack/methods/ann/ffn.hpp>\n#include <mlpack/methods/ann/layer/layer.hpp>\n#include <mlpack/methods/ann/loss_functions/mean_squared_error.hpp>"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para deixar o código bem mais legível alguns namespaces serão usados por padrão."}]},{"type":"element","tag":"code","props":{"code":"using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"carregar-e-transpor-os-dados-do-arquivo-csv"},"children":[{"type":"text","value":"Carregar e transpor os dados do arquivo CSV"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As matrizes do "},{"type":"element","tag":"a","props":{"href":"http://arma.sourceforge.net/","rel":["nofollow"]},"children":[{"type":"text","value":"Armadillo"}]},{"type":"text","value":" (pacote de álgebra linear do mlpack) são armazenada no\nformato "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"column-major"}]},{"type":"text","value":"; isto significa que no disco cada coluna é localizada\nnuma região contígua de memória. Veja\n"},{"type":"element","tag":"a","props":{"href":"https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/matrices.html","rel":["nofollow"]},"children":[{"type":"text","value":"detalhes"}]},{"type":"text","value":" na\ndocumentação do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Esta é uma conveniência bem interessante, pois para escrever os arquivos os\nregistros são entrados por linha e para processamento são tratados em colunas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então além de carregar é preciso transpor a matriz de dados."}]},{"type":"element","tag":"code","props":{"code":"  // lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  // transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout << \"Linhas:  \" << data.n_rows << endl; // 3\n  cout << \"Colunas: \" << data.n_cols << endl; // 400\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  // lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  // transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout << \"Linhas:  \" << data.n_rows << endl; // 3\n  cout << \"Colunas: \" << data.n_cols << endl; // 400"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A matriz de dados foi carregada e precisa ser dividida entre dados de treinamento e dados de teste."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Dados depois de carregados","src":"/til/mlpack-data.svg#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É muito importante que o modelo nunca veja os dados de teste para que se tenha\numa boa generalização."}]},{"type":"element","tag":"h3","props":{"id":"constantes-para-os-índices"},"children":[{"type":"text","value":"Constantes para os índices"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para facilitar a leitura do fonte e evitar "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"números mágicos"}]},{"type":"text","value":" no código defini algumas constantes convenientes:"}]},{"type":"element","tag":"code","props":{"code":"  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note que neste caso serão usadas 10 amostras para teste."}]},{"type":"element","tag":"h3","props":{"id":"dados-de-entrada-para-treinamento"},"children":[{"type":"text","value":"Dados de entrada para treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de entrada para treinamento."}]},{"type":"element","tag":"code","props":{"code":"  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-saída-para-treinamento"},"children":[{"type":"text","value":"Dados de saída para treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de saída para treinamento."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-entrada-para-teste"},"children":[{"type":"text","value":"Dados de entrada para teste"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de entrada para teste."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-saída-para-teste"},"children":[{"type":"text","value":"Dados de saída para teste"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de saída para teste."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"visualizando-os-dados-de-teste"},"children":[{"type":"text","value":"Visualizando os dados de teste"}]},{"type":"element","tag":"code","props":{"code":"  cout << \"Dados de entrada para teste: \\n\" << testdata << endl;\n  cout << \"Dados de saída para teste: \\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  cout << \"Dados de entrada para teste: \\n\" << testdata << endl;\n  cout << \"Dados de saída para teste: \\n\" << testlabels << endl;"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É importante notar que os dados de teste contém amostras de ambos os grupos\ne estão distribuídos em todo o espaço de amostra."}]},{"type":"element","tag":"code","props":{"code":"Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"construindo-a-rede-neural"},"children":[{"type":"text","value":"Construindo a rede neural"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"img","src":"/til/mlpack-ffn.svg#center"},"children":[]}]},{"type":"element","tag":"code","props":{"code":"  // Feed Forward Network\n  // FFN<tipo-de-saída-das-camadas, regra-de-inicialização> model;\n  FFN<MeanSquaredError<>, RandomInitialization> model;\n  // Adiciona camada com 2 entradas e 8 saídas\n  model.Add<Linear<>>( traindata.n_rows, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 8 saídas\n  model.Add<Linear<>>( 8, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 1 saída\n  model.Add<Linear<>>( 8, 1 );\n  model.Add<SigmoidLayer<>>();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  // Feed Forward Network\n  // FFN<tipo-de-saída-das-camadas, regra-de-inicialização> model;\n  FFN<MeanSquaredError<>, RandomInitialization> model;\n  // Adiciona camada com 2 entradas e 8 saídas\n  model.Add<Linear<>>( traindata.n_rows, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 8 saídas\n  model.Add<Linear<>>( 8, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 1 saída\n  model.Add<Linear<>>( 8, 1 );\n  model.Add<SigmoidLayer<>>();"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"treinamento"},"children":[{"type":"text","value":"Treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A partir da inicialização aleatória dos pesos da conexões inicia-se o treinamento."}]},{"type":"element","tag":"code","props":{"code":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    // Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    // Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout << \"Erro: \" << diff * diff.t();\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    // Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    // Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout << \"Erro: \" << diff * diff.t();\n  }"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note o erro sendo reduzido a cada treinamento."}]},{"type":"element","tag":"code","props":{"code":"Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"testando-o-modelo-ajustado"},"children":[{"type":"text","value":"Testando o modelo ajustado"}]},{"type":"element","tag":"code","props":{"code":"  mat assignments;\n  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  mat assignments;\n  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Saída:"}]},{"type":"element","tag":"code","props":{"code":"Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"salvando-modelo-para-continuar-depois"},"children":[{"type":"text","value":"Salvando modelo para continuar depois"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O modelo pode ser salvo a qualquer momento e recarregado para continuar o treinamento.\nUm arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"XML"}]},{"type":"text","value":" serializado pelo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":" é salvo."}]},{"type":"element","tag":"code","props":{"code":"  Save( \"model.xml\", \"model\", model, false );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  Save( \"model.xml\", \"model\", model, false );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"carregando-o-modelo-salvo-na-sessão-anterior"},"children":[{"type":"text","value":"Carregando o modelo salvo na sessão anterior"}]},{"type":"element","tag":"code","props":{"code":"  Load( \"model.xml\", \"model\", model );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  Load( \"model.xml\", \"model\", model );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"nova-sessão-de-treinamento-para-refinar"},"children":[{"type":"text","value":"Nova sessão de treinamento para refinar"}]},{"type":"element","tag":"code","props":{"code":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"novos-testes"},"children":[{"type":"text","value":"Novos testes"}]},{"type":"element","tag":"code","props":{"code":"  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Saída:"}]},{"type":"element","tag":"code","props":{"code":"Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"salvando-o-modelo-atualizado"},"children":[{"type":"text","value":"Salvando o modelo atualizado"}]},{"type":"element","tag":"code","props":{"code":"  Save( \"model2.xml\", \"model\", model, false );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  Save( \"model2.xml\", \"model\", model, false );"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"código-fonte-completo"},"children":[{"type":"text","value":"Código fonte completo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O código fonte completo pode ser encontrado no\n"},{"type":"element","tag":"a","props":{"href":"https://github.com/geraldolsribeiro/mlpack-tutorials/tree/master/ffn","rel":["nofollow"]},"children":[{"type":"text","value":"github"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para baixar e compilar o fonte deste artigo utilize:"}]},{"type":"element","tag":"code","props":{"code":"git clone https://github.com/geraldolsribeiro/mlpack-tutorials/\ncd mlpack-tutorials/ffn\nmake\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-dda49e"},"children":[{"type":"text","value":"git clone https://github.com/geraldolsribeiro/mlpack-tutorials/"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-74f0dd"},"children":[{"type":"text","value":"cd"}]},{"type":"element","tag":"span","props":{"class":"ct-dda49e"},"children":[{"type":"text","value":" mlpack-tutorials/ffn"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-dda49e"},"children":[{"type":"text","value":"make"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://wiki.debian.org/AptPreferences","rel":["nofollow"]},"children":[{"type":"text","value":"Apt Preferences"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/anntutorial.html","rel":["nofollow"]},"children":[{"type":"text","value":"Neural Network Tutorial"}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-74f0dd{color:#66D9EF}.ct-dda49e{color:#F8F8F2}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"versões-do-mlpack-disponíveis-do-debian","depth":2,"text":"Versões do mlpack disponíveis do Debian"},{"id":"utilizando-pacotes-testing-junto-com-stable","depth":2,"text":"Utilizando pacotes testing junto com stable"},{"id":"dados-de-treinamento","depth":2,"text":"Dados de treinamento"},{"id":"implementação","depth":2,"text":"Implementação","children":[{"id":"carregando-as-dependências","depth":3,"text":"Carregando as dependências"},{"id":"carregar-e-transpor-os-dados-do-arquivo-csv","depth":3,"text":"Carregar e transpor os dados do arquivo CSV"},{"id":"constantes-para-os-índices","depth":3,"text":"Constantes para os índices"},{"id":"dados-de-entrada-para-treinamento","depth":3,"text":"Dados de entrada para treinamento"},{"id":"dados-de-saída-para-treinamento","depth":3,"text":"Dados de saída para treinamento"},{"id":"dados-de-entrada-para-teste","depth":3,"text":"Dados de entrada para teste"},{"id":"dados-de-saída-para-teste","depth":3,"text":"Dados de saída para teste"},{"id":"visualizando-os-dados-de-teste","depth":3,"text":"Visualizando os dados de teste"},{"id":"construindo-a-rede-neural","depth":3,"text":"Construindo a rede neural"},{"id":"treinamento","depth":3,"text":"Treinamento"},{"id":"testando-o-modelo-ajustado","depth":3,"text":"Testando o modelo ajustado"},{"id":"salvando-modelo-para-continuar-depois","depth":3,"text":"Salvando modelo para continuar depois"},{"id":"carregando-o-modelo-salvo-na-sessão-anterior","depth":3,"text":"Carregando o modelo salvo na sessão anterior"},{"id":"nova-sessão-de-treinamento-para-refinar","depth":3,"text":"Nova sessão de treinamento para refinar"},{"id":"novos-testes","depth":3,"text":"Novos testes"},{"id":"salvando-o-modelo-atualizado","depth":3,"text":"Salvando o modelo atualizado"}]},{"id":"código-fonte-completo","depth":2,"text":"Código fonte completo"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-mlpack-feed-forward-neural-network-no-debian.md","_source":"content","_file":"til/cpp-mlpack-feed-forward-neural-network-no-debian.md","_extension":"md"}