[{"_path":"/til/cpp-magic-enum","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Magic Enum C++","description":"Biblioteca C++17 header-only que provê reflexão estática de enums, trabalha com qualquer tipo de enum sem usar macros.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Biblioteca C++17 header-only que provê reflexão estática de enums, trabalha com qualquer tipo de enum sem usar macros."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_cast"}]},{"type":"text","value":" obtains enum value from string or integer."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_value"}]},{"type":"text","value":" returns enum value at specified index."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_values"}]},{"type":"text","value":" obtains enum value sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_count"}]},{"type":"text","value":" returns number of enum values."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_integer"}]},{"type":"text","value":" obtains integer value from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_name"}]},{"type":"text","value":" returns string name from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_names"}]},{"type":"text","value":" obtains string enum name sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_entries"}]},{"type":"text","value":" obtains pair (value enum, string enum name) sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_index"}]},{"type":"text","value":" obtains index in enum value sequence from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_contains"}]},{"type":"text","value":" checks whether enum contains enumerator with such value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_type_name"}]},{"type":"text","value":" returns string name of enum type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"is_unscoped_enum"}]},{"type":"text","value":" checks whether type is an Unscoped enumeration."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"is_scoped_enum"}]},{"type":"text","value":" checks whether type is an Scoped enumeration."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"underlying_type"}]},{"type":"text","value":" improved UB-free \"SFINAE-friendly\" std::underlying_type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ostream_operators"}]},{"type":"text","value":" ostream operators for enums."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"bitwise_operators"}]},{"type":"text","value":" bitwise operators for enums."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inserir exemplos"}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/Neargye/magic_enum","rel":["nofollow"]},"children":[{"type":"text","value":"Magic Enum C++"}]}]}]}]},"date":"2020-06-27T00:00:00.000Z","draft":true,"tags":["C++","cpp"],"Thumbnail":"img/headers/debian.jpg","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Biblioteca C++17 header-only que provê reflexão estática de enums, trabalha com qualquer tipo de enum sem usar macros."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_cast"}]},{"type":"text","value":" obtains enum value from string or integer."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_value"}]},{"type":"text","value":" returns enum value at specified index."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_values"}]},{"type":"text","value":" obtains enum value sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_count"}]},{"type":"text","value":" returns number of enum values."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_integer"}]},{"type":"text","value":" obtains integer value from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_name"}]},{"type":"text","value":" returns string name from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_names"}]},{"type":"text","value":" obtains string enum name sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_entries"}]},{"type":"text","value":" obtains pair (value enum, string enum name) sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_index"}]},{"type":"text","value":" obtains index in enum value sequence from enum value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_contains"}]},{"type":"text","value":" checks whether enum contains enumerator with such value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"enum_type_name"}]},{"type":"text","value":" returns string name of enum type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"is_unscoped_enum"}]},{"type":"text","value":" checks whether type is an Unscoped enumeration."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"is_scoped_enum"}]},{"type":"text","value":" checks whether type is an Scoped enumeration."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"underlying_type"}]},{"type":"text","value":" improved UB-free \"SFINAE-friendly\" std::underlying_type."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ostream_operators"}]},{"type":"text","value":" ostream operators for enums."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"bitwise_operators"}]},{"type":"text","value":" bitwise operators for enums."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inserir exemplos"}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/Neargye/magic_enum","rel":["nofollow"]},"children":[{"type":"text","value":"Magic Enum C++"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-magic-enum.md","_source":"content","_file":"til/cpp-magic-enum.md","_extension":"md"},{"_path":"/til/cpp-thread","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Thread em C++","description":"Escrevendo funções e classes para execução em paralelo.","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"thread-com-função-sem-argumentos"},"children":[{"type":"text","value":"Thread com função sem argumentos"}]},{"type":"element","tag":"code","props":{"code":"void foo() {\n  cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n}\n\nvoid run () {\n  thread t1( foo );\n  // Algum processamento...\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void foo() {\n  cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n}\n\nvoid run () {\n  thread t1( foo );\n  // Algum processamento...\n  t1.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-função-passando-parâmetros-por-valor"},"children":[{"type":"text","value":"Thread com função passando parâmetros por valor"}]},{"type":"element","tag":"code","props":{"code":"void fooByRef( int & a ) {\n  while( true ) {\n    cout << \"O valor é \" << a << endl;\n    this_thread::sleep_for( chrono::milliseconds( 1000 ) );\n  }\n}\n\nvoid run () {\n  int p = 9;\n  thread t2( fooByRef, std::ref( p ) ); // usar o wrapper ref para não passar por valor\n  // Algum processamento...\n  this_thread::sleep_for( chrono::milliseconds( 5000 ) );\n  p = 30;\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void fooByRef( int & a ) {\n  while( true ) {\n    cout << \"O valor é \" << a << endl;\n    this_thread::sleep_for( chrono::milliseconds( 1000 ) );\n  }\n}\n\nvoid run () {\n  int p = 9;\n  thread t2( fooByRef, std::ref( p ) ); // usar o wrapper ref para não passar por valor\n  // Algum processamento...\n  this_thread::sleep_for( chrono::milliseconds( 5000 ) );\n  p = 30;\n  t1.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-função-passando-parâmetros-por-referência"},"children":[{"type":"text","value":"Thread com função passando parâmetros por referência"}]},{"type":"element","tag":"code","props":{"code":"void foo( int a, int b ) {\n}\n\nvoid run () {\n  int p = 9;\n  int q = 8;\n  thread t1( foo, p, q );\n  // Algum processamento...\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void foo( int a, int b ) {\n}\n\nvoid run () {\n  int p = 9;\n  int q = 8;\n  thread t1( foo, p, q );\n  // Algum processamento...\n  t1.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-classe-callable"},"children":[{"type":"text","value":"Thread com classe callable"}]},{"type":"element","tag":"code","props":{"code":"class CallableClass {\n  public:\n    void operator()() {\n      cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n    }\n};\n\nvoid run() {\n  CallableClass obj;\n  thread t2( obj );\n  // Algum processamento...\n  t2.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class CallableClass {\n  public:\n    void operator()() {\n      cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n    }\n};\n\nvoid run() {\n  CallableClass obj;\n  thread t2( obj );\n  // Algum processamento...\n  t2.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-lambda"},"children":[{"type":"text","value":"Thread com lambda"}]},{"type":"element","tag":"code","props":{"code":"// Sintaxe\n// [capture-list]( params ) /*mutable*/ /*constexpr*/ /*exception attribute*/ -> ret { body }\n// [capture-list]( params ) -> ret { body }\n// [capture-list]( params ) { body }\n// [capture-list]{ body }\n\nvoid run() {\n  thread t3( []{\n    cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n  } );\n  // Algum processamento...\n  t3.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Sintaxe\n// [capture-list]( params ) /*mutable*/ /*constexpr*/ /*exception attribute*/ -> ret { body }\n// [capture-list]( params ) -> ret { body }\n// [capture-list]( params ) { body }\n// [capture-list]{ body }\n\nvoid run() {\n  thread t3( []{\n    cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n  } );\n  // Algum processamento...\n  t3.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"join-detach-e-terminate"},"children":[{"type":"text","value":"Join, detach e terminate"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Uma thread representa um objeto de execução em nível de hardware e está num estado chamado "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"joinable"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A opções no estado "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"joinable"}]},{"type":"text","value":" são:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" - introduz um ponto de sincronismo e bloqueia a execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"detach"}]},{"type":"text","value":" - faz a execução continuar em modo independente"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Após esta escolha a thread se torna "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"non joinable"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Se esquecer de realizar o join ou detach a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::terminate"}]},{"type":"text","value":" será chamada pelo destrutor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Um programa com "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::terminate"}]},{"type":"text","value":" é considerado não seguro."}]}]},{"type":"element","tag":"h2","props":{"id":"tratamento-de-exceção"},"children":[{"type":"text","value":"Tratamento de exceção"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para evitar problemas caso uma exceção for lançada antes do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" use\n"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"RAII - Resource acquisition is initialization"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"RAII:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Construtor adquire os recursos"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Destrutor libera os recursos"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exemplo de código com problema:"}]},{"type":"element","tag":"code","props":{"code":"void run() {\n  thread t4( foo );\n  throw runtime_error( \"Algum erro antes do join/detach\" );\n  t4.join(); // esta linha nunca vai ser executada\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void run() {\n  thread t4( foo );\n  throw runtime_error( \"Algum erro antes do join/detach\" );\n  t4.join(); // esta linha nunca vai ser executada\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A classe "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ThreadGuard"}]},{"type":"text","value":" fornece um auxiliar para garantir que o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" será\nsempre executado quando o objeto sair do contexto."}]},{"type":"element","tag":"code","props":{"code":"class ThreadGuard {\n  thread & mThread;\n\n  public:\n    // garantir que não haverá conversões implícitas\n    explicit ThreadGuard( thread & t ) : mThread( t ) {  }\n\n    // realiza o join pelo destrutor\n    ~ThreadGuard() { if( mThread.joinable() ) { mThread.join(); } }\n\n    // não permite o uso dos contrutores de cópia e atribuição\n    ThreadGuard( const ThreadGuard & ) = delete;\n    ThreadGuard & operator= ( const ThreadGuard & ) = delete;\n};\n\nvoid run() {\n  thread t4( foo );\n  ThreadGuard tg( t4 ); // quando sair do escopo o join será chamado\n  throw runtime_error( \"Este erro não afeta a thread acima\" );\n}\n","filename":"6,9","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class ThreadGuard {\n  thread & mThread;\n\n  public:\n    // garantir que não haverá conversões implícitas\n    explicit ThreadGuard( thread & t ) : mThread( t ) {  }\n\n    // realiza o join pelo destrutor\n    ~ThreadGuard() { if( mThread.joinable() ) { mThread.join(); } }\n\n    // não permite o uso dos contrutores de cópia e atribuição\n    ThreadGuard( const ThreadGuard & ) = delete;\n    ThreadGuard & operator= ( const ThreadGuard & ) = delete;\n};\n\nvoid run() {\n  thread t4( foo );\n  ThreadGuard tg( t4 ); // quando sair do escopo o join será chamado\n  throw runtime_error( \"Este erro não afeta a thread acima\" );\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"transferindo-a-posse-das-threads"},"children":[{"type":"text","value":"Transferindo a posse das threads"}]},{"type":"element","tag":"code","props":{"code":"void foo() { }\nvoid bar() { }\n\nvoid run() {\n  thread t1( foo );\n  // thread t2 = t1; // Se fizer isso vai gerar erro de compilação\n\n  // usar move para transferir a posse da thread\n  thread t2 = std::move( t1 ); // t1 não é mais dono da thread\n  t1 = thread( bar ); // t1 tem nova thread\n\n  t1.join();\n  t2.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void foo() { }\nvoid bar() { }\n\nvoid run() {\n  thread t1( foo );\n  // thread t2 = t1; // Se fizer isso vai gerar erro de compilação\n\n  // usar move para transferir a posse da thread\n  thread t2 = std::move( t1 ); // t1 não é mais dono da thread\n  t1 = thread( bar ); // t1 tem nova thread\n\n  t1.join();\n  t2.join();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"threadget_id"},"children":[{"type":"text","value":"thread::get_id()"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna um id único para cada thread ativa em execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna 0 para todas as threads não ativas"}]}]},{"type":"element","tag":"code","props":{"code":"void run() {\n  thread t1( foo );\n  thread t2( foo );\n  thread t3;\n\n  cout << t1.get_id() << endl; // 1234\n  cout << t2.get_id() << endl; // 5678\n  cout << t3.get_id() << endl; // 0\n\n  t1.join();\n  t2.join();\n\n  cout << t1.get_id() << endl; // 0\n  cout << t2.get_id() << endl; // 0\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"void run() {\n  thread t1( foo );\n  thread t2( foo );\n  thread t3;\n\n  cout << t1.get_id() << endl; // 1234\n  cout << t2.get_id() << endl; // 5678\n  cout << t3.get_id() << endl; // 0\n\n  t1.join();\n  t2.join();\n\n  cout << t1.get_id() << endl; // 0\n  cout << t2.get_id() << endl; // 0\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"sleep_for"},"children":[{"type":"text","value":"sleep_for"}]},{"type":"element","tag":"h2","props":{"id":"stdthis_threadyield"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::this_thread::yield()"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna a fatia de tempo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reinsere a thread na fila de execução"}]}]},{"type":"element","tag":"h2","props":{"id":"stdthreadhardware_concurrency"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::thread::hardware_concurrency()"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna o número de thread concorrentes suportado pela implementação do sistema"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"considere este valor apenas como uma dica"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é usualmente o número de cores lógicos"}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.udemy.com/course/modern-cpp-concurrency-in-depth/","rel":["nofollow"]},"children":[{"type":"text","value":"Modern C++ Concurrency in Depth"}]}]}]}]},"date":"2020-06-23T00:00:00.000Z","draft":false,"tags":["C++","cpp","thread"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"thread-com-função-sem-argumentos"},"children":[{"type":"text","value":"Thread com função sem argumentos"}]},{"type":"element","tag":"code","props":{"code":"void foo() {\n  cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n}\n\nvoid run () {\n  thread t1( foo );\n  // Algum processamento...\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void foo() {\n  cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n}\n\nvoid run () {\n  thread t1( foo );\n  // Algum processamento...\n  t1.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-função-passando-parâmetros-por-valor"},"children":[{"type":"text","value":"Thread com função passando parâmetros por valor"}]},{"type":"element","tag":"code","props":{"code":"void fooByRef( int & a ) {\n  while( true ) {\n    cout << \"O valor é \" << a << endl;\n    this_thread::sleep_for( chrono::milliseconds( 1000 ) );\n  }\n}\n\nvoid run () {\n  int p = 9;\n  thread t2( fooByRef, std::ref( p ) ); // usar o wrapper ref para não passar por valor\n  // Algum processamento...\n  this_thread::sleep_for( chrono::milliseconds( 5000 ) );\n  p = 30;\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void fooByRef( int & a ) {\n  while( true ) {\n    cout << \"O valor é \" << a << endl;\n    this_thread::sleep_for( chrono::milliseconds( 1000 ) );\n  }\n}\n\nvoid run () {\n  int p = 9;\n  thread t2( fooByRef, std::ref( p ) ); // usar o wrapper ref para não passar por valor\n  // Algum processamento...\n  this_thread::sleep_for( chrono::milliseconds( 5000 ) );\n  p = 30;\n  t1.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-função-passando-parâmetros-por-referência"},"children":[{"type":"text","value":"Thread com função passando parâmetros por referência"}]},{"type":"element","tag":"code","props":{"code":"void foo( int a, int b ) {\n}\n\nvoid run () {\n  int p = 9;\n  int q = 8;\n  thread t1( foo, p, q );\n  // Algum processamento...\n  t1.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void foo( int a, int b ) {\n}\n\nvoid run () {\n  int p = 9;\n  int q = 8;\n  thread t1( foo, p, q );\n  // Algum processamento...\n  t1.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-classe-callable"},"children":[{"type":"text","value":"Thread com classe callable"}]},{"type":"element","tag":"code","props":{"code":"class CallableClass {\n  public:\n    void operator()() {\n      cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n    }\n};\n\nvoid run() {\n  CallableClass obj;\n  thread t2( obj );\n  // Algum processamento...\n  t2.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"class CallableClass {\n  public:\n    void operator()() {\n      cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n    }\n};\n\nvoid run() {\n  CallableClass obj;\n  thread t2( obj );\n  // Algum processamento...\n  t2.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"thread-com-lambda"},"children":[{"type":"text","value":"Thread com lambda"}]},{"type":"element","tag":"code","props":{"code":"// Sintaxe\n// [capture-list]( params ) /*mutable*/ /*constexpr*/ /*exception attribute*/ -> ret { body }\n// [capture-list]( params ) -> ret { body }\n// [capture-list]( params ) { body }\n// [capture-list]{ body }\n\nvoid run() {\n  thread t3( []{\n    cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n  } );\n  // Algum processamento...\n  t3.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// Sintaxe\n// [capture-list]( params ) /*mutable*/ /*constexpr*/ /*exception attribute*/ -> ret { body }\n// [capture-list]( params ) -> ret { body }\n// [capture-list]( params ) { body }\n// [capture-list]{ body }\n\nvoid run() {\n  thread t3( []{\n    cout << \"Corpo da função: \" << this_thread::get_id() << endl;\n  } );\n  // Algum processamento...\n  t3.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"join-detach-e-terminate"},"children":[{"type":"text","value":"Join, detach e terminate"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Uma thread representa um objeto de execução em nível de hardware e está num estado chamado "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"joinable"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A opções no estado "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"joinable"}]},{"type":"text","value":" são:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" - introduz um ponto de sincronismo e bloqueia a execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"detach"}]},{"type":"text","value":" - faz a execução continuar em modo independente"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Após esta escolha a thread se torna "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"non joinable"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Se esquecer de realizar o join ou detach a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::terminate"}]},{"type":"text","value":" será chamada pelo destrutor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Um programa com "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::terminate"}]},{"type":"text","value":" é considerado não seguro."}]}]},{"type":"element","tag":"h2","props":{"id":"tratamento-de-exceção"},"children":[{"type":"text","value":"Tratamento de exceção"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para evitar problemas caso uma exceção for lançada antes do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" use\n"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"RAII - Resource acquisition is initialization"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"RAII:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Construtor adquire os recursos"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Destrutor libera os recursos"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exemplo de código com problema:"}]},{"type":"element","tag":"code","props":{"code":"void run() {\n  thread t4( foo );\n  throw runtime_error( \"Algum erro antes do join/detach\" );\n  t4.join(); // esta linha nunca vai ser executada\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void run() {\n  thread t4( foo );\n  throw runtime_error( \"Algum erro antes do join/detach\" );\n  t4.join(); // esta linha nunca vai ser executada\n}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A classe "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ThreadGuard"}]},{"type":"text","value":" fornece um auxiliar para garantir que o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"join"}]},{"type":"text","value":" será\nsempre executado quando o objeto sair do contexto."}]},{"type":"element","tag":"code","props":{"code":"class ThreadGuard {\n  thread & mThread;\n\n  public:\n    // garantir que não haverá conversões implícitas\n    explicit ThreadGuard( thread & t ) : mThread( t ) {  }\n\n    // realiza o join pelo destrutor\n    ~ThreadGuard() { if( mThread.joinable() ) { mThread.join(); } }\n\n    // não permite o uso dos contrutores de cópia e atribuição\n    ThreadGuard( const ThreadGuard & ) = delete;\n    ThreadGuard & operator= ( const ThreadGuard & ) = delete;\n};\n\nvoid run() {\n  thread t4( foo );\n  ThreadGuard tg( t4 ); // quando sair do escopo o join será chamado\n  throw runtime_error( \"Este erro não afeta a thread acima\" );\n}\n","filename":"6,9","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"class ThreadGuard {\n  thread & mThread;\n\n  public:\n    // garantir que não haverá conversões implícitas\n    explicit ThreadGuard( thread & t ) : mThread( t ) {  }\n\n    // realiza o join pelo destrutor\n    ~ThreadGuard() { if( mThread.joinable() ) { mThread.join(); } }\n\n    // não permite o uso dos contrutores de cópia e atribuição\n    ThreadGuard( const ThreadGuard & ) = delete;\n    ThreadGuard & operator= ( const ThreadGuard & ) = delete;\n};\n\nvoid run() {\n  thread t4( foo );\n  ThreadGuard tg( t4 ); // quando sair do escopo o join será chamado\n  throw runtime_error( \"Este erro não afeta a thread acima\" );\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"transferindo-a-posse-das-threads"},"children":[{"type":"text","value":"Transferindo a posse das threads"}]},{"type":"element","tag":"code","props":{"code":"void foo() { }\nvoid bar() { }\n\nvoid run() {\n  thread t1( foo );\n  // thread t2 = t1; // Se fizer isso vai gerar erro de compilação\n\n  // usar move para transferir a posse da thread\n  thread t2 = std::move( t1 ); // t1 não é mais dono da thread\n  t1 = thread( bar ); // t1 tem nova thread\n\n  t1.join();\n  t2.join();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void foo() { }\nvoid bar() { }\n\nvoid run() {\n  thread t1( foo );\n  // thread t2 = t1; // Se fizer isso vai gerar erro de compilação\n\n  // usar move para transferir a posse da thread\n  thread t2 = std::move( t1 ); // t1 não é mais dono da thread\n  t1 = thread( bar ); // t1 tem nova thread\n\n  t1.join();\n  t2.join();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"threadget_id"},"children":[{"type":"text","value":"thread::get_id()"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna um id único para cada thread ativa em execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna 0 para todas as threads não ativas"}]}]},{"type":"element","tag":"code","props":{"code":"void run() {\n  thread t1( foo );\n  thread t2( foo );\n  thread t3;\n\n  cout << t1.get_id() << endl; // 1234\n  cout << t2.get_id() << endl; // 5678\n  cout << t3.get_id() << endl; // 0\n\n  t1.join();\n  t2.join();\n\n  cout << t1.get_id() << endl; // 0\n  cout << t2.get_id() << endl; // 0\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"void run() {\n  thread t1( foo );\n  thread t2( foo );\n  thread t3;\n\n  cout << t1.get_id() << endl; // 1234\n  cout << t2.get_id() << endl; // 5678\n  cout << t3.get_id() << endl; // 0\n\n  t1.join();\n  t2.join();\n\n  cout << t1.get_id() << endl; // 0\n  cout << t2.get_id() << endl; // 0\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"sleep_for"},"children":[{"type":"text","value":"sleep_for"}]},{"type":"element","tag":"h2","props":{"id":"stdthis_threadyield"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::this_thread::yield()"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna a fatia de tempo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reinsere a thread na fila de execução"}]}]},{"type":"element","tag":"h2","props":{"id":"stdthreadhardware_concurrency"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"std::thread::hardware_concurrency()"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retorna o número de thread concorrentes suportado pela implementação do sistema"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"considere este valor apenas como uma dica"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é usualmente o número de cores lógicos"}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.udemy.com/course/modern-cpp-concurrency-in-depth/","rel":["nofollow"]},"children":[{"type":"text","value":"Modern C++ Concurrency in Depth"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"thread-com-função-sem-argumentos","depth":2,"text":"Thread com função sem argumentos"},{"id":"thread-com-função-passando-parâmetros-por-valor","depth":2,"text":"Thread com função passando parâmetros por valor"},{"id":"thread-com-função-passando-parâmetros-por-referência","depth":2,"text":"Thread com função passando parâmetros por referência"},{"id":"thread-com-classe-callable","depth":2,"text":"Thread com classe callable"},{"id":"thread-com-lambda","depth":2,"text":"Thread com lambda"},{"id":"join-detach-e-terminate","depth":2,"text":"Join, detach e terminate"},{"id":"tratamento-de-exceção","depth":2,"text":"Tratamento de exceção"},{"id":"transferindo-a-posse-das-threads","depth":2,"text":"Transferindo a posse das threads"},{"id":"threadget_id","depth":2,"text":"thread::get_id()"},{"id":"sleep_for","depth":2,"text":"sleep_for"},{"id":"stdthis_threadyield","depth":2,"text":"std::this_thread::yield()"},{"id":"stdthreadhardware_concurrency","depth":2,"text":"std::thread::hardware_concurrency()"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-thread.md","_source":"content","_file":"til/cpp-thread.md","_extension":"md"},{"_path":"/til/app-djinni","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Desenvolvendo em C++ para mobile com Djinni","description":"Como criar aplicativos para android e IOS usando C++ com Djinni.","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.dropbox.com/s/k1b214bsqgpx4e6/Djinni%20Talk%20-%20CppCon%202015.pdf?dl=0","rel":["nofollow"]},"children":[{"type":"text","value":"Bindings Languages Cross-Platform"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.udemy.com/course/desenvolvendo-aplicativos-mobile-com-cpp-para-android-e-ios/","rel":["nofollow"]},"children":[{"type":"text","value":"Desenvolvendo Aplicativos Mobile com C++ para Android e iOS"}]}]}]}]},"date":"2020-06-23T00:00:00.000Z","draft":true,"tags":["C++","cpp","Djinni"],"Thumbnail":"img/headers/cpp.jpg","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.dropbox.com/s/k1b214bsqgpx4e6/Djinni%20Talk%20-%20CppCon%202015.pdf?dl=0","rel":["nofollow"]},"children":[{"type":"text","value":"Bindings Languages Cross-Platform"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.udemy.com/course/desenvolvendo-aplicativos-mobile-com-cpp-para-android-e-ios/","rel":["nofollow"]},"children":[{"type":"text","value":"Desenvolvendo Aplicativos Mobile com C++ para Android e iOS"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:app-djinni.md","_source":"content","_file":"til/app-djinni.md","_extension":"md"},{"_path":"/til/cpp-optimlib","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Otimização numérica em C++","description":"A **OptimLib** é uma biblioteca C++ lightweight para otimização numérica de funções não lineares.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"OptimLib"}]},{"type":"text","value":" é uma biblioteca C++ lightweight para otimização numérica de funções não lineares."}]},{"type":"element","tag":"h2","props":{"id":"instalação-da-optimlib"},"children":[{"type":"text","value":"Instalação da optimlib"}]},{"type":"element","tag":"code","props":{"code":"git clone https://github.com/kthohr/optim.git\ncd optim\n./configure --header-only-version\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/kthohr/optim.git\ncd optim\n./configure --header-only-version\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Após os comandos acima é criado um diretório chamado "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"header_only_version"}]},{"type":"text","value":".\nA partir daí é só incluir este diretório nos flags de compilação: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"-Ialgum-lugar/header_only_version"}]}]},{"type":"element","tag":"h2","props":{"id":"exemplo-1"},"children":[{"type":"text","value":"Exemplo 1"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Neste exemplo usaremos o método "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Differential Evolution (DE)"}]},{"type":"text","value":" que é uma busca\ngenética estocástica para otimização global."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Localizar o mínimo da função "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"18.686ex","height":"2.452ex","role":"img","focusable":"false","viewBox":"0 -833.9 8259 1083.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-I-1D453","d":"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-3D","d":"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D453","xLinkHref":"#MJX-1-TEX-I-1D453"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(550,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-1-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(939,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1511,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-1-TEX-N-29"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2177.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"3D","xLinkHref":"#MJX-1-TEX-N-3D"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(3233.6,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(605,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-1-TEX-N-32"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(4464.3,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-1-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5464.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-1-TEX-N-35"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(5964.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6758.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-1-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7759,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-1-TEX-N-36"},"children":[]}]}]}]}]}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Função exemplo para busca do mínimo.","src":"/til/optimlib_01.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A função a ser otimizada precisa ter o seguinte formato:"}]},{"type":"element","tag":"code","props":{"code":"double f( vetor_de_entrada,\n          vetor_de_gradiente,\n          parametros_adicionais )\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"double f( vetor_de_entrada,\n          vetor_de_gradiente,\n          parametros_adicionais )\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Definindo nosso "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"4.299ex","height":"2.262ex","role":"img","focusable":"false","viewBox":"0 -750 1900 1000","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-I-1D453","d":"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D453","xLinkHref":"#MJX-2-TEX-I-1D453"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(550,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-2-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(939,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-2-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1511,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-2-TEX-N-29"},"children":[]}]}]}]}]}]}]},{"type":"text","value":" usando o formato acima:"}]},{"type":"element","tag":"code","props":{"code":"double f( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  // Nosssa função é muito simples e só utiliza uma entrada\n  const double x = vals_inp( 0 );\n  return x * x - 5 * x + 6;\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"double f( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  // Nosssa função é muito simples e só utiliza uma entrada\n  const double x = vals_inp( 0 );\n  return x * x - 5 * x + 6;\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Realizando a otimização:"}]},{"type":"element","tag":"code","props":{"code":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, f, nullptr ) ) {\n  cout << \"Mínimo para f(x): \"\n       << \"x² - 5x + 6 => \" << x << endl;\n  // Mínimo para f(x) = x² - 5x + 6 => 2.5000\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, f, nullptr ) ) {\n  cout << \"Mínimo para f(x): \"\n       << \"x² - 5x + 6 => \" << x << endl;\n  // Mínimo para f(x) = x² - 5x + 6 => 2.5000\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"exemplo-2"},"children":[{"type":"text","value":"Exemplo 2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A função anterior é muito bem comportada e sem mínimos locais. Vamos complicar um pouco."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Localizar o mínimo da função "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"32.874ex","height":"2.452ex","role":"img","focusable":"false","viewBox":"0 -833.9 14530.1 1083.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-I-210E","d":"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-3D","d":"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2E","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-73","d":"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-69","d":"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-6E","d":"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2061","d":""},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"210E","xLinkHref":"#MJX-3-TEX-I-210E"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(576,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-3-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(965,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1537,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-3-TEX-N-29"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2203.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"3D","xLinkHref":"#MJX-3-TEX-N-3D"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(3259.6,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(605,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(4490.3,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-3-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5490.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-3-TEX-N-35"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(5990.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6784.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7785,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-3-TEX-N-36"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(8507.2,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(9507.4,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-3-TEX-N-30"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"2E","xLinkHref":"#MJX-3-TEX-N-2E","transform":"translate(500,0)"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32","transform":"translate(778,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(10952.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"73","xLinkHref":"#MJX-3-TEX-N-73"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"69","xLinkHref":"#MJX-3-TEX-N-69","transform":"translate(394,0)"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"6E","xLinkHref":"#MJX-3-TEX-N-6E","transform":"translate(672,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(12180.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2061","xLinkHref":"#MJX-3-TEX-N-2061"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(12180.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-3-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(12569.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-3-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-3-TEX-N-30","transform":"translate(500,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(13569.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(14141.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-3-TEX-N-29"},"children":[]}]}]}]}]}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Cálculo do valor mínimo.","src":"/til/optimlib_02.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Definindo a nova função:"}]},{"type":"element","tag":"code","props":{"code":"double h( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  const double x  = vals_inp( 0 );\n  return x * x - 5 * x + 6 + 0.2 * sin( 10 * x );\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"double h( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  const double x  = vals_inp( 0 );\n  return x * x - 5 * x + 6 + 0.2 * sin( 10 * x );\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Realizando a otimização:"}]},{"type":"element","tag":"code","props":{"code":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, h, nullptr ) ) {\n  cout << \"Mínimo para h(x): \"\n       << \"x² - 5x + 6 + 0.2 sin( 10x ) => \"\n       << x << endl;\n  // Mínimo para h(x): x² - 5x + 6 + 0.2 sin( 10x ) => 2.3693\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, h, nullptr ) ) {\n  cout << \"Mínimo para h(x): \"\n       << \"x² - 5x + 6 + 0.2 sin( 10x ) => \"\n       << x << endl;\n  // Mínimo para h(x): x² - 5x + 6 + 0.2 sin( 10x ) => 2.3693\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/kthohr/optim","rel":["nofollow"]},"children":[{"type":"text","value":"OptimLib: a lightweight C++ library of numerical optimization methods for nonlinear functions"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=xwR7WbKtylg","rel":["nofollow"]},"children":[{"type":"text","value":"Lec 12 : Differential Evolution"}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"\nmjx-container[jax=\"SVG\"] {\n  direction: ltr;\n}\n\nmjx-container[jax=\"SVG\"] > svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=\"SVG\"] > svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"][width=\"full\"] {\n  display: flex;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"left\"] {\n  text-align: left;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"right\"] {\n  text-align: right;\n}\n\ng[data-mml-node=\"merror\"] > g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=\"merror\"] > rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=\"mtable\"] > g > svg {\n  overflow: visible;\n}\n\n[jax=\"SVG\"] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=\"SVG\"] mjx-tool > mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool > mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=\"maction\"][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=\"SVG\"] path[data-c], mjx-container[jax=\"SVG\"] use[data-c] {\n  stroke-width: 3;\n}\n"}]}]},"date":"2020-06-15T00:00:00.000Z","draft":false,"tags":["C++","cpp","otimização","optimlib","differential evolution"],"Thumbnail":"img/headers/cpp.png","math":true,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"OptimLib"}]},{"type":"text","value":" é uma biblioteca C++ lightweight para otimização numérica de funções não lineares."}]},{"type":"element","tag":"h2","props":{"id":"instalação-da-optimlib"},"children":[{"type":"text","value":"Instalação da optimlib"}]},{"type":"element","tag":"code","props":{"code":"git clone https://github.com/kthohr/optim.git\ncd optim\n./configure --header-only-version\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"git clone https://github.com/kthohr/optim.git"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b03afe"},"children":[{"type":"text","value":"cd"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" optim"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"./configure --header-only-version"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Após os comandos acima é criado um diretório chamado "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"header_only_version"}]},{"type":"text","value":".\nA partir daí é só incluir este diretório nos flags de compilação: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"-Ialgum-lugar/header_only_version"}]}]},{"type":"element","tag":"h2","props":{"id":"exemplo-1"},"children":[{"type":"text","value":"Exemplo 1"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Neste exemplo usaremos o método "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Differential Evolution (DE)"}]},{"type":"text","value":" que é uma busca\ngenética estocástica para otimização global."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Localizar o mínimo da função "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"18.686ex","height":"2.452ex","role":"img","focusable":"false","viewBox":"0 -833.9 8259 1083.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-I-1D453","d":"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-3D","d":"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D453","xLinkHref":"#MJX-1-TEX-I-1D453"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(550,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-1-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(939,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1511,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-1-TEX-N-29"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2177.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"3D","xLinkHref":"#MJX-1-TEX-N-3D"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(3233.6,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(605,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-1-TEX-N-32"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(4464.3,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-1-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5464.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-1-TEX-N-35"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(5964.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-1-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6758.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-1-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7759,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-1-TEX-N-36"},"children":[]}]}]}]}]}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Função exemplo para busca do mínimo.","src":"/til/optimlib_01.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A função a ser otimizada precisa ter o seguinte formato:"}]},{"type":"element","tag":"code","props":{"code":"double f( vetor_de_entrada,\n          vetor_de_gradiente,\n          parametros_adicionais )\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b03afe"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"f"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"vetor_de_entrada"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"vetor_de_gradiente"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"parametros_adicionais"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" )"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Definindo nosso "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"4.299ex","height":"2.262ex","role":"img","focusable":"false","viewBox":"0 -750 1900 1000","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-I-1D453","d":"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D453","xLinkHref":"#MJX-2-TEX-I-1D453"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(550,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-2-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(939,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-2-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1511,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-2-TEX-N-29"},"children":[]}]}]}]}]}]}]},{"type":"text","value":" usando o formato acima:"}]},{"type":"element","tag":"code","props":{"code":"double f( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  // Nosssa função é muito simples e só utiliza uma entrada\n  const double x = vals_inp( 0 );\n  return x * x - 5 * x + 6;\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b03afe"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"f"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"vec"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"&"}]},{"type":"element","tag":"span","props":{"class":"ct-156a25"},"children":[{"type":"text","value":"vals_inp"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"vec"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-156a25"},"children":[{"type":"text","value":"grad_out"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-b03afe"},"children":[{"type":"text","value":"void"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-156a25"},"children":[{"type":"text","value":"opt_data"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" )"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"{"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-ad74d3"},"children":[{"type":"text","value":"  // Nosssa função é muito simples e só utiliza uma entrada"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-b03afe"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"vals_inp"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" );"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"-"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"6"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Realizando a otimização:"}]},{"type":"element","tag":"code","props":{"code":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, f, nullptr ) ) {\n  cout << \"Mínimo para f(x): \"\n       << \"x² - 5x + 6 => \" << x << endl;\n  // Mínimo para f(x) = x² - 5x + 6 => 2.5000\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::vec x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"ones"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" ) "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"0.5"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-ad74d3"},"children":[{"type":"text","value":" // Valor inicial 1.5"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"optim"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"de"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( x, f, "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"nullptr"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" ) ) {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"  cout "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-72e9a1"},"children":[{"type":"text","value":"\"Mínimo para f(x): \""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"       "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-72e9a1"},"children":[{"type":"text","value":"\"x² - 5x + 6 => \""}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" endl;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-ad74d3"},"children":[{"type":"text","value":"  // Mínimo para f(x) = x² - 5x + 6 => 2.5000"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"exemplo-2"},"children":[{"type":"text","value":"Exemplo 2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A função anterior é muito bem comportada e sem mínimos locais. Vamos complicar um pouco."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Localizar o mínimo da função "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.566ex;","xmlns":"http://www.w3.org/2000/svg","width":"32.874ex","height":"2.452ex","role":"img","focusable":"false","viewBox":"0 -833.9 14530.1 1083.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-I-210E","d":"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-28","d":"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-I-1D465","d":"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-29","d":"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-3D","d":"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2E","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-73","d":"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-69","d":"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-6E","d":"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2061","d":""},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"210E","xLinkHref":"#MJX-3-TEX-I-210E"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(576,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-3-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(965,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(1537,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-3-TEX-N-29"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2203.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"3D","xLinkHref":"#MJX-3-TEX-N-3D"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(3259.6,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mi"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(605,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(4490.3,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-3-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5490.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-3-TEX-N-35"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(5990.6,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6784.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7785,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-3-TEX-N-36"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(8507.2,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(9507.4,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-3-TEX-N-30"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"2E","xLinkHref":"#MJX-3-TEX-N-2E","transform":"translate(500,0)"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32","transform":"translate(778,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(10952.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"73","xLinkHref":"#MJX-3-TEX-N-73"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"69","xLinkHref":"#MJX-3-TEX-N-69","transform":"translate(394,0)"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"6E","xLinkHref":"#MJX-3-TEX-N-6E","transform":"translate(672,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(12180.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2061","xLinkHref":"#MJX-3-TEX-N-2061"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(12180.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"28","xLinkHref":"#MJX-3-TEX-N-28"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(12569.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-3-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-3-TEX-N-30","transform":"translate(500,0)"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mi","transform":"translate(13569.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"1D465","xLinkHref":"#MJX-3-TEX-I-1D465"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(14141.1,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"29","xLinkHref":"#MJX-3-TEX-N-29"},"children":[]}]}]}]}]}]}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Cálculo do valor mínimo.","src":"/til/optimlib_02.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Definindo a nova função:"}]},{"type":"element","tag":"code","props":{"code":"double h( const arma::vec &vals_inp,\n          arma::vec *grad_out,\n          void *opt_data )\n{\n  const double x  = vals_inp( 0 );\n  return x * x - 5 * x + 6 + 0.2 * sin( 10 * x );\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b03afe"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"h"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"vec"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"&"}]},{"type":"element","tag":"span","props":{"class":"ct-156a25"},"children":[{"type":"text","value":"vals_inp"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"vec"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-156a25"},"children":[{"type":"text","value":"grad_out"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":","}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"          "}]},{"type":"element","tag":"span","props":{"class":"ct-b03afe"},"children":[{"type":"text","value":"void"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-156a25"},"children":[{"type":"text","value":"opt_data"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" )"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"{"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"const"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-b03afe"},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x  "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"vals_inp"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" );"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"-"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"6"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"0.2"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"sin"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"10"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x );"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Realizando a otimização:"}]},{"type":"element","tag":"code","props":{"code":"arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5\nif( optim::de( x, h, nullptr ) ) {\n  cout << \"Mínimo para h(x): \"\n       << \"x² - 5x + 6 + 0.2 sin( 10x ) => \"\n       << x << endl;\n  // Mínimo para h(x): x² - 5x + 6 + 0.2 sin( 10x ) => 2.3693\n}\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::vec x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"arma"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"ones"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" ) "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"0.5"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-ad74d3"},"children":[{"type":"text","value":" // Valor inicial 1.5"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( "}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"optim"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"::"}]},{"type":"element","tag":"span","props":{"class":"ct-995583"},"children":[{"type":"text","value":"de"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"( x, h, "}]},{"type":"element","tag":"span","props":{"class":"ct-300f75"},"children":[{"type":"text","value":"nullptr"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" ) ) {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"  cout "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-72e9a1"},"children":[{"type":"text","value":"\"Mínimo para h(x): \""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"       "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-72e9a1"},"children":[{"type":"text","value":"\"x² - 5x + 6 + 0.2 sin( 10x ) => \""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"       "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-37acf0"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":" endl;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-ad74d3"},"children":[{"type":"text","value":"  // Mínimo para h(x): x² - 5x + 6 + 0.2 sin( 10x ) => 2.3693"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bbf8e4"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/kthohr/optim","rel":["nofollow"]},"children":[{"type":"text","value":"OptimLib: a lightweight C++ library of numerical optimization methods for nonlinear functions"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=xwR7WbKtylg","rel":["nofollow"]},"children":[{"type":"text","value":"Lec 12 : Differential Evolution"}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"\nmjx-container[jax=\"SVG\"] {\n  direction: ltr;\n}\n\nmjx-container[jax=\"SVG\"] > svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=\"SVG\"] > svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"][width=\"full\"] {\n  display: flex;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"left\"] {\n  text-align: left;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"right\"] {\n  text-align: right;\n}\n\ng[data-mml-node=\"merror\"] > g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=\"merror\"] > rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=\"mtable\"] > g > svg {\n  overflow: visible;\n}\n\n[jax=\"SVG\"] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=\"SVG\"] mjx-tool > mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool > mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=\"maction\"][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=\"SVG\"] path[data-c], mjx-container[jax=\"SVG\"] use[data-c] {\n  stroke-width: 3;\n}\n"}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-72e9a1{color:#E6DB74}.ct-300f75{color:#AE81FF}.ct-ad74d3{color:#88846F}.ct-156a25{color:#FD971F}.ct-37acf0{color:#F92672}.ct-995583{color:#A6E22E}.ct-b03afe{color:#66D9EF}.ct-bbf8e4{color:#F8F8F2}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"instalação-da-optimlib","depth":2,"text":"Instalação da optimlib"},{"id":"exemplo-1","depth":2,"text":"Exemplo 1"},{"id":"exemplo-2","depth":2,"text":"Exemplo 2"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-optimlib.md","_source":"content","_file":"til/cpp-optimlib.md","_extension":"md"},{"_path":"/til/cpp-constexpr","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"C++ - otimização com constexpr","description":"Otimização com constexpr.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A linguagem C++ possui o conceito de expressões constantes (p.e. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"1+2"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"3*4"}]},{"type":"text","value":")\nque SEMPRE produzem o mesmo resultado sem nenhum efeito colateral. Se\no compilador puder diretamente otimizar e embutir esta expressões no programa\nem tempo de compilação teremos um ganho de performance."}]},{"type":"element","tag":"code","props":{"code":"#include <iostream>\n#define LEN 10\nint len_foo() {\n    int i = 2;\n    return i;\n}\nconstexpr int len_foo_constexpr() {\n    return 5;\n}\n\n// Pode ser usado em recursão\nconstexpr int fibonacci(const int n) {\n    return n == 1 || n == 2 ? 1 : fibonacci(n-1) + fibonacci(n-2);\n}\n\nint main() {\n    char arr_1[10];                      // legal\n    char arr_2[LEN];                     // legal\n    int len = 10;\n    // char arr_3[len];                  // ilegal\n    const int len_2 = len + 1;\n    constexpr int len_2_constexpr = 1 + 2 + 3;\n    // char arr_4[len_2];                // ilegal, mas aceito por vários compiladores\n    // len_2 apesar de constante não é formado somente por constantes\n    char arr_4[len_2_constexpr];         // legal\n    // char arr_5[len_foo()+5];          // ilegal\n    char arr_6[len_foo_constexpr() + 1]; // legal\n    // 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n    std::cout << fibonacci(10) << std::endl;\n    return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#include <iostream>\n#define LEN 10\nint len_foo() {\n    int i = 2;\n    return i;\n}\nconstexpr int len_foo_constexpr() {\n    return 5;\n}\n\n// Pode ser usado em recursão\nconstexpr int fibonacci(const int n) {\n    return n == 1 || n == 2 ? 1 : fibonacci(n-1) + fibonacci(n-2);\n}\n\nint main() {\n    char arr_1[10];                      // legal\n    char arr_2[LEN];                     // legal\n    int len = 10;\n    // char arr_3[len];                  // ilegal\n    const int len_2 = len + 1;\n    constexpr int len_2_constexpr = 1 + 2 + 3;\n    // char arr_4[len_2];                // ilegal, mas aceito por vários compiladores\n    // len_2 apesar de constante não é formado somente por constantes\n    char arr_4[len_2_constexpr];         // legal\n    // char arr_5[len_foo()+5];          // ilegal\n    char arr_6[len_foo_constexpr() + 1]; // legal\n    // 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n    std::cout << fibonacci(10) << std::endl;\n    return 0;\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://itbook.xuxinkai.cn/read/modern-cpp-tutorial-en/02-usability.md","rel":["nofollow"]},"children":[{"type":"text","value":"Chapter 02: Language Usability Enhancements"}]}]}]}]},"date":"2020-05-04T00:00:00.000Z","draft":true,"tags":["C++","cpp","constexpr"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A linguagem C++ possui o conceito de expressões constantes (p.e. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"1+2"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"3*4"}]},{"type":"text","value":")\nque SEMPRE produzem o mesmo resultado sem nenhum efeito colateral. Se\no compilador puder diretamente otimizar e embutir esta expressões no programa\nem tempo de compilação teremos um ganho de performance."}]},{"type":"element","tag":"code","props":{"code":"#include <iostream>\n#define LEN 10\nint len_foo() {\n    int i = 2;\n    return i;\n}\nconstexpr int len_foo_constexpr() {\n    return 5;\n}\n\n// Pode ser usado em recursão\nconstexpr int fibonacci(const int n) {\n    return n == 1 || n == 2 ? 1 : fibonacci(n-1) + fibonacci(n-2);\n}\n\nint main() {\n    char arr_1[10];                      // legal\n    char arr_2[LEN];                     // legal\n    int len = 10;\n    // char arr_3[len];                  // ilegal\n    const int len_2 = len + 1;\n    constexpr int len_2_constexpr = 1 + 2 + 3;\n    // char arr_4[len_2];                // ilegal, mas aceito por vários compiladores\n    // len_2 apesar de constante não é formado somente por constantes\n    char arr_4[len_2_constexpr];         // legal\n    // char arr_5[len_foo()+5];          // ilegal\n    char arr_6[len_foo_constexpr() + 1]; // legal\n    // 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n    std::cout << fibonacci(10) << std::endl;\n    return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"#include <iostream>\n#define LEN 10\nint len_foo() {\n    int i = 2;\n    return i;\n}\nconstexpr int len_foo_constexpr() {\n    return 5;\n}\n\n// Pode ser usado em recursão\nconstexpr int fibonacci(const int n) {\n    return n == 1 || n == 2 ? 1 : fibonacci(n-1) + fibonacci(n-2);\n}\n\nint main() {\n    char arr_1[10];                      // legal\n    char arr_2[LEN];                     // legal\n    int len = 10;\n    // char arr_3[len];                  // ilegal\n    const int len_2 = len + 1;\n    constexpr int len_2_constexpr = 1 + 2 + 3;\n    // char arr_4[len_2];                // ilegal, mas aceito por vários compiladores\n    // len_2 apesar de constante não é formado somente por constantes\n    char arr_4[len_2_constexpr];         // legal\n    // char arr_5[len_foo()+5];          // ilegal\n    char arr_6[len_foo_constexpr() + 1]; // legal\n    // 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n    std::cout << fibonacci(10) << std::endl;\n    return 0;\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://itbook.xuxinkai.cn/read/modern-cpp-tutorial-en/02-usability.md","rel":["nofollow"]},"children":[{"type":"text","value":"Chapter 02: Language Usability Enhancements"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-constexpr.md","_source":"content","_file":"til/cpp-constexpr.md","_extension":"md"},{"_path":"/til/cpp-clant-tidy","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Otimizando código com clang-tidy","description":"Como atualizar seu código C++ utilizando a ferramenta clang-tity.","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"instalação"},"children":[{"type":"text","value":"Instalação"}]},{"type":"element","tag":"code","props":{"code":"apt-get install clang-tidy\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"apt-get install clang-tidy\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"verificadores-disponíveis"},"children":[{"type":"text","value":"Verificadores disponíveis"}]},{"type":"element","tag":"code","props":{"code":"clang-tidy --list-checks -checks='*' | grep \"modernize\"\n    modernize-avoid-bind\n    modernize-deprecated-headers\n    modernize-loop-convert\n    modernize-make-shared\n    modernize-make-unique\n    modernize-pass-by-value\n    modernize-raw-string-literal\n    modernize-redundant-void-arg\n    modernize-replace-auto-ptr\n    modernize-replace-random-shuffle\n    modernize-return-braced-init-list\n    modernize-shrink-to-fit\n    modernize-unary-static-assert\n    modernize-use-auto\n    modernize-use-bool-literals\n    modernize-use-default-member-init\n    modernize-use-emplace\n    modernize-use-equals-default\n    modernize-use-equals-delete\n    modernize-use-noexcept\n    modernize-use-nullptr\n    modernize-use-override\n    modernize-use-transparent-functors\n    modernize-use-uncaught-exceptions\n    modernize-use-using\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"clang-tidy --list-checks -checks='*' | grep \"modernize\"\n    modernize-avoid-bind\n    modernize-deprecated-headers\n    modernize-loop-convert\n    modernize-make-shared\n    modernize-make-unique\n    modernize-pass-by-value\n    modernize-raw-string-literal\n    modernize-redundant-void-arg\n    modernize-replace-auto-ptr\n    modernize-replace-random-shuffle\n    modernize-return-braced-init-list\n    modernize-shrink-to-fit\n    modernize-unary-static-assert\n    modernize-use-auto\n    modernize-use-bool-literals\n    modernize-use-default-member-init\n    modernize-use-emplace\n    modernize-use-equals-default\n    modernize-use-equals-delete\n    modernize-use-noexcept\n    modernize-use-nullptr\n    modernize-use-override\n    modernize-use-transparent-functors\n    modernize-use-uncaught-exceptions\n    modernize-use-using\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"uso"},"children":[{"type":"text","value":"Uso"}]},{"type":"element","tag":"code","props":{"code":"clang-tidy -checks='modernize-use-override' -fix test.cpp -- -std=c++11\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"clang-tidy -checks='modernize-use-override' -fix test.cpp -- -std=c++11\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://clang.llvm.org/extra/clang-tidy/","rel":["nofollow"]},"children":[{"type":"text","value":"Extra Clang Tools 10 documentation - CLANG-TIDY"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/KratosMultiphysics/Kratos/wiki/How-to-use-Clang-Tidy-to-automatically-correct-code","rel":["nofollow"]},"children":[{"type":"text","value":"How to use Clang Tidy to automatically correct code"}]}]}]}]},"date":"2020-01-13T00:00:00.000Z","draft":false,"tags":["C++","cpp","clang-tidy"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"instalação"},"children":[{"type":"text","value":"Instalação"}]},{"type":"element","tag":"code","props":{"code":"apt-get install clang-tidy\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"apt-get install clang-tidy"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"verificadores-disponíveis"},"children":[{"type":"text","value":"Verificadores disponíveis"}]},{"type":"element","tag":"code","props":{"code":"clang-tidy --list-checks -checks='*' | grep \"modernize\"\n    modernize-avoid-bind\n    modernize-deprecated-headers\n    modernize-loop-convert\n    modernize-make-shared\n    modernize-make-unique\n    modernize-pass-by-value\n    modernize-raw-string-literal\n    modernize-redundant-void-arg\n    modernize-replace-auto-ptr\n    modernize-replace-random-shuffle\n    modernize-return-braced-init-list\n    modernize-shrink-to-fit\n    modernize-unary-static-assert\n    modernize-use-auto\n    modernize-use-bool-literals\n    modernize-use-default-member-init\n    modernize-use-emplace\n    modernize-use-equals-default\n    modernize-use-equals-delete\n    modernize-use-noexcept\n    modernize-use-nullptr\n    modernize-use-override\n    modernize-use-transparent-functors\n    modernize-use-uncaught-exceptions\n    modernize-use-using\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"clang-tidy --list-checks -checks="}]},{"type":"element","tag":"span","props":{"class":"ct-45dd10"},"children":[{"type":"text","value":"'*'"}]},{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-edde06"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":" grep "}]},{"type":"element","tag":"span","props":{"class":"ct-45dd10"},"children":[{"type":"text","value":"\"modernize\""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-avoid-bind"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-deprecated-headers"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-loop-convert"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-make-shared"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-make-unique"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-pass-by-value"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-raw-string-literal"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-redundant-void-arg"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-replace-auto-ptr"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-replace-random-shuffle"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-return-braced-init-list"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-shrink-to-fit"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-unary-static-assert"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-auto"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-bool-literals"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-default-member-init"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-emplace"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-equals-default"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-equals-delete"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-noexcept"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-nullptr"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-override"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-transparent-functors"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-uncaught-exceptions"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"    modernize-use-using"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"uso"},"children":[{"type":"text","value":"Uso"}]},{"type":"element","tag":"code","props":{"code":"clang-tidy -checks='modernize-use-override' -fix test.cpp -- -std=c++11\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":"clang-tidy -checks="}]},{"type":"element","tag":"span","props":{"class":"ct-45dd10"},"children":[{"type":"text","value":"'modernize-use-override'"}]},{"type":"element","tag":"span","props":{"class":"ct-8a5cb2"},"children":[{"type":"text","value":" -fix test.cpp -- -std=c++11"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://clang.llvm.org/extra/clang-tidy/","rel":["nofollow"]},"children":[{"type":"text","value":"Extra Clang Tools 10 documentation - CLANG-TIDY"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/KratosMultiphysics/Kratos/wiki/How-to-use-Clang-Tidy-to-automatically-correct-code","rel":["nofollow"]},"children":[{"type":"text","value":"How to use Clang Tidy to automatically correct code"}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-edde06{color:#F92672}.ct-45dd10{color:#E6DB74}.ct-8a5cb2{color:#F8F8F2}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"instalação","depth":2,"text":"Instalação"},{"id":"verificadores-disponíveis","depth":2,"text":"Verificadores disponíveis"},{"id":"uso","depth":2,"text":"Uso"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-clant-tidy.md","_source":"content","_file":"til/cpp-clant-tidy.md","_extension":"md"},{"_path":"/til/cpp-const-cast","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"C++ - const_cast","description":"Usando o operador `const_cast`","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O operador"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"const_cast"}]},{"type":"text","value":" é utilizado para:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"adicionar um modificador "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" a um tipo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"remover um modificador "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" de um tipo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"adicionar um modificador "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"volatile"}]},{"type":"text","value":" a um tipo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"remover um modificador "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"volatile"}]},{"type":"text","value":" de um tipo"}]}]},{"type":"element","tag":"code","props":{"code":"#include <iostream>\nusing namespace std;\n\nvoid f(int* p) {\n  cout << *p << endl;\n}\n\nint main(void) {\n  const int a = 10;\n  const int* b = &a;\n\n  // A função f() espera receber um int* e não um const int*\n  // f(b);\n\n  int* c = const_cast<int*>(b);\n  f(c);\n\n  // Lvalue é const\n  //  *b = 20;\n\n  // Comportamento indefinido\n  //  *c = 30;\n\n  int a1 = 40;\n  const int* b1 = &a1;\n  int* c1 = const_cast<int*>(b1);\n\n  // o inteiro a1 referenciado por c1 não foi declarado como const\n  *c1 = 50;\n\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#include <iostream>\nusing namespace std;\n\nvoid f(int* p) {\n  cout << *p << endl;\n}\n\nint main(void) {\n  const int a = 10;\n  const int* b = &a;\n\n  // A função f() espera receber um int* e não um const int*\n  // f(b);\n\n  int* c = const_cast<int*>(b);\n  f(c);\n\n  // Lvalue é const\n  //  *b = 20;\n\n  // Comportamento indefinido\n  //  *c = 30;\n\n  int a1 = 40;\n  const int* b1 = &a1;\n  int* c1 = const_cast<int*>(b1);\n\n  // o inteiro a1 referenciado por c1 não foi declarado como const\n  *c1 = 50;\n\n  return 0;\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"[const_cast operator syntax("},{"type":"element","tag":"a","props":{"href":"https://www.ibm.com/support/knowledgecenter/SSLTBW_2.4.0/com.ibm.zos.v2r4.cbclx01/keyword_const_cast.htm","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.ibm.com/support/knowledgecenter/SSLTBW_2.4.0/com.ibm.zos.v2r4.cbclx01/keyword_const_cast.htm"}]},{"type":"text","value":")"}]}]}]},"date":"2020-01-10T00:00:00.000Z","draft":false,"tags":["C++","cpp","const_cast"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O operador"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"const_cast"}]},{"type":"text","value":" é utilizado para:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"adicionar um modificador "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" a um tipo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"remover um modificador "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" de um tipo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"adicionar um modificador "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"volatile"}]},{"type":"text","value":" a um tipo"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"remover um modificador "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"volatile"}]},{"type":"text","value":" de um tipo"}]}]},{"type":"element","tag":"code","props":{"code":"#include <iostream>\nusing namespace std;\n\nvoid f(int* p) {\n  cout << *p << endl;\n}\n\nint main(void) {\n  const int a = 10;\n  const int* b = &a;\n\n  // A função f() espera receber um int* e não um const int*\n  // f(b);\n\n  int* c = const_cast<int*>(b);\n  f(c);\n\n  // Lvalue é const\n  //  *b = 20;\n\n  // Comportamento indefinido\n  //  *c = 30;\n\n  int a1 = 40;\n  const int* b1 = &a1;\n  int* c1 = const_cast<int*>(b1);\n\n  // o inteiro a1 referenciado por c1 não foi declarado como const\n  *c1 = 50;\n\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"#include <iostream>\nusing namespace std;\n\nvoid f(int* p) {\n  cout << *p << endl;\n}\n\nint main(void) {\n  const int a = 10;\n  const int* b = &a;\n\n  // A função f() espera receber um int* e não um const int*\n  // f(b);\n\n  int* c = const_cast<int*>(b);\n  f(c);\n\n  // Lvalue é const\n  //  *b = 20;\n\n  // Comportamento indefinido\n  //  *c = 30;\n\n  int a1 = 40;\n  const int* b1 = &a1;\n  int* c1 = const_cast<int*>(b1);\n\n  // o inteiro a1 referenciado por c1 não foi declarado como const\n  *c1 = 50;\n\n  return 0;\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"[const_cast operator syntax("},{"type":"element","tag":"a","props":{"href":"https://www.ibm.com/support/knowledgecenter/SSLTBW_2.4.0/com.ibm.zos.v2r4.cbclx01/keyword_const_cast.htm","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.ibm.com/support/knowledgecenter/SSLTBW_2.4.0/com.ibm.zos.v2r4.cbclx01/keyword_const_cast.htm"}]},{"type":"text","value":")"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-const-cast.md","_source":"content","_file":"til/cpp-const-cast.md","_extension":"md"},{"_path":"/til/cpp-sort","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"C++ - Ordenação","description":"Como misturar de forma saudável diferentes distribuições do Debian. Instale exatamente a versão do aplicativo que você quer sem bagunçar o sistema todo.","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"estatísticas"},"children":[{"type":"text","value":"Estatísticas"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Método"}]},{"type":"element","tag":"th","props":{"align":"right"},"children":[{"type":"text","value":"Comparações"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Swaps"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Escrita"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Escrita auxiliar"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Tempo ms"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Bubble sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2.096.128"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"1.001.372"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"2.002.744"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"110"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Cocktail Shaker sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2.097.152"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"1.010.635"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"2.021.270"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"109"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Gnome sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2.002.322"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"1.000.141"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"2.000.282"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"106"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Odd-Even sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2.057.262"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"1.047.262"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"2.094.524"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"112"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Comb sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"58.752"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"10.198"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"20.396"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"6"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Os dados desta tabela forma tirados do vídeo "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=FZ8FaztJGEo","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.youtube.com/watch?v=FZ8FaztJGEo"}]}]},{"type":"element","tag":"h2","props":{"id":"bubble-sort"},"children":[{"type":"text","value":"Bubble sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube lyZQPjUT5B4 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"quick-sort"},"children":[{"type":"text","value":"Quick sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube ywWBy6J5gz8 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"select-sort"},"children":[{"type":"text","value":"Select sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube Ns4TPTC8whw %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"shell-sort"},"children":[{"type":"text","value":"Shell sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube CmPA7zE8mx0 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"merge-sort"},"children":[{"type":"text","value":"Merge sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube XaqR3G_NVoo %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"insert-sort"},"children":[{"type":"text","value":"Insert sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube ROalU379l3U %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"heap-sort"},"children":[{"type":"text","value":"Heap sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube Xw2D9aJRBY4 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"binary-search"},"children":[{"type":"text","value":"Binary search"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube iP897Z5Nerk %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"comparação"},"children":[{"type":"text","value":"Comparação"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube DSMCZZGbZo4 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BonzaiThePenguin/WikiSort","rel":["nofollow"]},"children":[{"type":"text","value":"Fast and stable sort algorithm that uses O(1) memory. Public domain."}]}]}]}]},"date":"2020-01-08T00:00:00.000Z","draft":false,"tags":["C++","cpp","ordenação","sort"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"estatísticas"},"children":[{"type":"text","value":"Estatísticas"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Método"}]},{"type":"element","tag":"th","props":{"align":"right"},"children":[{"type":"text","value":"Comparações"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Swaps"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Escrita"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Escrita auxiliar"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Tempo ms"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Bubble sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2.096.128"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"1.001.372"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"2.002.744"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"110"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Cocktail Shaker sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2.097.152"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"1.010.635"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"2.021.270"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"109"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Gnome sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2.002.322"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"1.000.141"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"2.000.282"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"106"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Odd-Even sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2.057.262"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"1.047.262"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"2.094.524"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"112"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Comb sort"}]},{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"58.752"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"10.198"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"20.396"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"0"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"6"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Os dados desta tabela forma tirados do vídeo "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=FZ8FaztJGEo","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.youtube.com/watch?v=FZ8FaztJGEo"}]}]},{"type":"element","tag":"h2","props":{"id":"bubble-sort"},"children":[{"type":"text","value":"Bubble sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube lyZQPjUT5B4 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"quick-sort"},"children":[{"type":"text","value":"Quick sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube ywWBy6J5gz8 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"select-sort"},"children":[{"type":"text","value":"Select sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube Ns4TPTC8whw %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"shell-sort"},"children":[{"type":"text","value":"Shell sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube CmPA7zE8mx0 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"merge-sort"},"children":[{"type":"text","value":"Merge sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube XaqR3G_NVoo %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"insert-sort"},"children":[{"type":"text","value":"Insert sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube ROalU379l3U %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"heap-sort"},"children":[{"type":"text","value":"Heap sort"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube Xw2D9aJRBY4 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"binary-search"},"children":[{"type":"text","value":"Binary search"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube iP897Z5Nerk %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"comparação"},"children":[{"type":"text","value":"Comparação"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% youtube DSMCZZGbZo4 %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/BonzaiThePenguin/WikiSort","rel":["nofollow"]},"children":[{"type":"text","value":"Fast and stable sort algorithm that uses O(1) memory. Public domain."}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"estatísticas","depth":2,"text":"Estatísticas"},{"id":"bubble-sort","depth":2,"text":"Bubble sort"},{"id":"quick-sort","depth":2,"text":"Quick sort"},{"id":"select-sort","depth":2,"text":"Select sort"},{"id":"shell-sort","depth":2,"text":"Shell sort"},{"id":"merge-sort","depth":2,"text":"Merge sort"},{"id":"insert-sort","depth":2,"text":"Insert sort"},{"id":"heap-sort","depth":2,"text":"Heap sort"},{"id":"binary-search","depth":2,"text":"Binary search"},{"id":"comparação","depth":2,"text":"Comparação"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-sort.md","_source":"content","_file":"til/cpp-sort.md","_extension":"md"},{"_path":"/til/cpp-fltk-layout","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"C++ - Gerenciando layout em FLTK","description":"Como controlar o layout em FLTK.","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introdução"},"children":[{"type":"text","value":"Introdução"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O FLTK utiliza um sistema simples, porém versátil para redimensionar interfaces."}]},{"type":"element","tag":"h2","props":{"id":"aplicação-inicial"},"children":[{"type":"text","value":"Aplicação inicial"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Para demonstrar o gerenciamento do layout criei uma aplicação composta de 9 botões com labels de 1 até 9."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Note que eu criei os botões totalmente fora de ordem: 5, 2, 4, 8, 6, 1, 3, 7 e 9. Isto não importa para o layout."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Todos os botões são filhos da janela principal."}]}]},{"type":"element","tag":"h3","props":{"id":"arquivo-01fl"},"children":[{"type":"text","value":"Arquivo 01.fl"}]},{"type":"element","tag":"code","props":{"code":"# data file for the Fltk User Interface Designer (fluid)\nversion 1.0304\nheader_name {.h}\ncode_name {.cxx}\nFunction {} {open\n} {\n  Fl_Window {} {\n    label 01 open selected\n    xywh {122 262 420 180} type Double visible\n  } {\n    Fl_Button {} {\n      label 5\n      xywh {140 60 140 60}\n    }\n    Fl_Button {} {\n      label 2\n      xywh {140 0 140 60}\n    }\n    Fl_Button {} {\n      label 4\n      xywh {0 60 140 60}\n    }\n    Fl_Button {} {\n      label 8\n      xywh {140 120 140 60}\n    }\n    Fl_Button {} {\n      label 6\n      xywh {280 60 140 60}\n    }\n    Fl_Button {} {\n      label 1\n      xywh {0 0 140 60}\n    }\n    Fl_Button {} {\n      label 3\n      xywh {280 0 140 60}\n    }\n    Fl_Button {} {\n      label 7\n      xywh {0 120 140 60}\n    }\n    Fl_Button {} {\n      label 9\n      xywh {280 120 140 60}\n    }\n  }\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# data file for the Fltk User Interface Designer (fluid)\nversion 1.0304\nheader_name {.h}\ncode_name {.cxx}\nFunction {} {open\n} {\n  Fl_Window {} {\n    label 01 open selected\n    xywh {122 262 420 180} type Double visible\n  } {\n    Fl_Button {} {\n      label 5\n      xywh {140 60 140 60}\n    }\n    Fl_Button {} {\n      label 2\n      xywh {140 0 140 60}\n    }\n    Fl_Button {} {\n      label 4\n      xywh {0 60 140 60}\n    }\n    Fl_Button {} {\n      label 8\n      xywh {140 120 140 60}\n    }\n    Fl_Button {} {\n      label 6\n      xywh {280 60 140 60}\n    }\n    Fl_Button {} {\n      label 1\n      xywh {0 0 140 60}\n    }\n    Fl_Button {} {\n      label 3\n      xywh {280 0 140 60}\n    }\n    Fl_Button {} {\n      label 7\n      xywh {0 120 140 60}\n    }\n    Fl_Button {} {\n      label 9\n      xywh {280 120 140 60}\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"arquivo-makefile"},"children":[{"type":"text","value":"Arquivo Makefile"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para realizar a compilação dos programas crie o seguinte "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Makefile"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"# ----------------------------------------------------------------------\n# Copyright (C) 2017-2021 Geraldo Ribeiro <geraldo@intmain.io>\n# ----------------------------------------------------------------------\n\nPROGRAMS=01 02 03 04\nGENERATED=$(addsuffix .h, $(PROGRAMS)) $(addsuffix .cxx, $(PROGRAMS))\n\nCXXFLAGS+=-std=c++17\nCXXFLAGS+=`fltk-config --cxxflags`\nLDFLAGS+=`fltk-config --ldflags`\n\n# Geração de código\n%.cxx: %.fl\n    fluid -c $^\n\n# Opção de compilação 1\n%: %.cxx\n    fltk-config --compile $^\n\n# Opção de compilação 2\n#%: %.cxx\n#   $(CXX) $(LDFLAGS) $^ -o $@ $(LDFLAGS)\n\n\nall: $(PROGRAMS)\n\nclean:\n    rm -f $(PROGRAMS) $(GENERATED)\n","language":"Makefile"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# ----------------------------------------------------------------------\n# Copyright (C) 2017-2021 Geraldo Ribeiro <geraldo@intmain.io>\n# ----------------------------------------------------------------------\n\nPROGRAMS=01 02 03 04\nGENERATED=$(addsuffix .h, $(PROGRAMS)) $(addsuffix .cxx, $(PROGRAMS))\n\nCXXFLAGS+=-std=c++17\nCXXFLAGS+=`fltk-config --cxxflags`\nLDFLAGS+=`fltk-config --ldflags`\n\n# Geração de código\n%.cxx: %.fl\n    fluid -c $^\n\n# Opção de compilação 1\n%: %.cxx\n    fltk-config --compile $^\n\n# Opção de compilação 2\n#%: %.cxx\n#   $(CXX) $(LDFLAGS) $^ -o $@ $(LDFLAGS)\n\n\nall: $(PROGRAMS)\n\nclean:\n    rm -f $(PROGRAMS) $(GENERATED)\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"geração-de-código"},"children":[{"type":"text","value":"Geração de código"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para gerar o código "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C++"}]},{"type":"text","value":" ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".cxx"}]},{"type":"text","value":") a partir do "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fluid"}]},{"type":"text","value":" ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".fl"}]},{"type":"text","value":") basta digitar "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"make"}]},{"type":"text","value":" que o código é gerado e compilado:"}]},{"type":"element","tag":"code","props":{"code":"make\nfluid -c 01.fl\nfltk-config --compile 01.cxx\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"make\nfluid -c 01.fl\nfltk-config --compile 01.cxx\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"arquivo-gerado-01cxx"},"children":[{"type":"text","value":"Arquivo gerado 01.cxx"}]},{"type":"element","tag":"code","props":{"code":"// generated by Fast Light User Interface Designer (fluid) version 1.0304\n\n#include \"01.h\"\n\nint main(int argc, char **argv) {\n  Fl_Double_Window* w;\n  { Fl_Double_Window* o = new Fl_Double_Window(420, 180, \"01\");\n    w = o; if (w) {/* empty */}\n    { new Fl_Button(140, 60, 140, 60, \"5\");\n    } // Fl_Button* o\n    { new Fl_Button(140, 0, 140, 60, \"2\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 60, 140, 60, \"4\");\n    } // Fl_Button* o\n    { new Fl_Button(140, 120, 140, 60, \"8\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 60, 140, 60, \"6\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 0, 140, 60, \"1\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 0, 140, 60, \"3\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 120, 140, 60, \"7\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 120, 140, 60, \"9\");\n    } // Fl_Button* o\n    o->end();\n  } // Fl_Double_Window* o\n  w->show(argc, argv);\n  return Fl::run();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// generated by Fast Light User Interface Designer (fluid) version 1.0304\n\n#include \"01.h\"\n\nint main(int argc, char **argv) {\n  Fl_Double_Window* w;\n  { Fl_Double_Window* o = new Fl_Double_Window(420, 180, \"01\");\n    w = o; if (w) {/* empty */}\n    { new Fl_Button(140, 60, 140, 60, \"5\");\n    } // Fl_Button* o\n    { new Fl_Button(140, 0, 140, 60, \"2\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 60, 140, 60, \"4\");\n    } // Fl_Button* o\n    { new Fl_Button(140, 120, 140, 60, \"8\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 60, 140, 60, \"6\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 0, 140, 60, \"1\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 0, 140, 60, \"3\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 120, 140, 60, \"7\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 120, 140, 60, \"9\");\n    } // Fl_Button* o\n    o->end();\n  } // Fl_Double_Window* o\n  w->show(argc, argv);\n  return Fl::run();\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"executando-a-aplicação-01"},"children":[{"type":"text","value":"Executando a aplicação 01"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao ser executada a aplicação "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"./01"}]},{"type":"text","value":" notamos que o redimensionamento está desabilitado, pois\ntemos na janela principal somente os botões de "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"enrolar"}]},{"type":"text","value":", "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"minimizar"}]},{"type":"text","value":" e "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"fechar"}]},{"type":"text","value":"\nhabilitados."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-01-01.png\" alt=\"Aplicação 01 sem possibilidade de redimensionamento.\" %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"aplicação-02"},"children":[{"type":"text","value":"Aplicação 02"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A aplicação 02 é uma cópia da 01 com redimensionamento ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"resizable"}]},{"type":"text","value":") habilitado na janela principal."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-02-00.png\" alt=\"Ativando redimensionamento na aplicação 02.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Podemos ver pelo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"diff"}]},{"type":"text","value":" abaixo que apenas o flag "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"resizable"}]},{"type":"text","value":" foi adicionado e o título da janela foi alterado para "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"02"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"diff 01.fl 02.fl\n8,9c8,9\n<     label 01 open selected\n<     xywh {122 262 420 180} type Double visible\n---\n>     label 02 open selected\n>     xywh {122 262 420 180} type Double resizable visible\n","language":"diff"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"diff 01.fl 02.fl\n8,9c8,9\n<     label 01 open selected\n<     xywh {122 262 420 180} type Double visible\n---\n>     label 02 open selected\n>     xywh {122 262 420 180} type Double resizable visible\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note que agora o botão de "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"maximizar"}]},{"type":"text","value":" é adicionado:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-02-01.png\" alt=\"Aplicação 02 em tamanho inicial.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"E podemos redimensionar a janela horizontalmente e verticalmente:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-02-02.png\" alt=\"Aplicação 02 redimensionada horizontalmente.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-02-03.png\" alt=\"Aplicação 02 redimensionada verticalmente.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note que todos os 9 botões são redimensionados da mesma forma."}]},{"type":"element","tag":"h2","props":{"id":"aplicação-03"},"children":[{"type":"text","value":"Aplicação 03"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A aplicação 03 é uma cópia da 02 com redimensionamento habilitado no botão 5."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-03-00.png\" alt=\"Ativando o redimensionamento para o botão 05 na aplicação 03.\" %"},"children":[]}]},{"type":"element","tag":"code","props":{"code":"8c8\n<     label 02 open selected\n---\n>     label 03 open selected\n13c13\n<       xywh {140 60 140 60}\n---\n>       xywh {140 60 140 60} resizable\n\n","language":"diff"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"8c8\n<     label 02 open selected\n---\n>     label 03 open selected\n13c13\n<       xywh {140 60 140 60}\n---\n>       xywh {140 60 140 60} resizable\n\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-03-01.png\" alt=\"Aplicação 03 em tamanho inicial.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao redimensionar a janela podemos notar alguns comportamentos:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"os botões 1, 3, 7 e 9 (diagonais de 5) permanecem com suas dimensões originais"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"os botões 2 e 8 (acima e abaixo de 5) são redimensionados horizontalmente acompanhando o tamanho 5."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"os botões 4 e 6 (à direita e à esquerda de 5) são redimensionados verticalmente acompanhando o tamanho 5."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"comportamento válido quando se tem somente um widget marcado como "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"resizable"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-03-02.png\" alt=\"Aplicação 03 redimensionada.\" %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"aplicação-04"},"children":[{"type":"text","value":"Aplicação 04"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A aplicação 04 é uma cópia da 02 com redimensionamento habilitado no botão 9."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-04-01.png\" alt=\"Aplicação 04 redimensionada.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Observe que o mesmo comportamento geral é aplicado:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"diagonais são mantidas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"acima (e abaixo se houvesse) redimensionados acompanhando a largura de 9"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"à esquerda (e à direita se houvesse) redimensionados acompanhando a altura de 9"}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.fltk.org/articles.php?L415","rel":["nofollow"]},"children":[{"type":"text","value":"Article #415: How does resizing work?"}]}]}]}]},"date":"2020-01-08T00:00:00.000Z","draft":false,"tags":["C++","cpp","fltk"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introdução"},"children":[{"type":"text","value":"Introdução"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O FLTK utiliza um sistema simples, porém versátil para redimensionar interfaces."}]},{"type":"element","tag":"h2","props":{"id":"aplicação-inicial"},"children":[{"type":"text","value":"Aplicação inicial"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Para demonstrar o gerenciamento do layout criei uma aplicação composta de 9 botões com labels de 1 até 9."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Note que eu criei os botões totalmente fora de ordem: 5, 2, 4, 8, 6, 1, 3, 7 e 9. Isto não importa para o layout."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Todos os botões são filhos da janela principal."}]}]},{"type":"element","tag":"h3","props":{"id":"arquivo-01fl"},"children":[{"type":"text","value":"Arquivo 01.fl"}]},{"type":"element","tag":"code","props":{"code":"# data file for the Fltk User Interface Designer (fluid)\nversion 1.0304\nheader_name {.h}\ncode_name {.cxx}\nFunction {} {open\n} {\n  Fl_Window {} {\n    label 01 open selected\n    xywh {122 262 420 180} type Double visible\n  } {\n    Fl_Button {} {\n      label 5\n      xywh {140 60 140 60}\n    }\n    Fl_Button {} {\n      label 2\n      xywh {140 0 140 60}\n    }\n    Fl_Button {} {\n      label 4\n      xywh {0 60 140 60}\n    }\n    Fl_Button {} {\n      label 8\n      xywh {140 120 140 60}\n    }\n    Fl_Button {} {\n      label 6\n      xywh {280 60 140 60}\n    }\n    Fl_Button {} {\n      label 1\n      xywh {0 0 140 60}\n    }\n    Fl_Button {} {\n      label 3\n      xywh {280 0 140 60}\n    }\n    Fl_Button {} {\n      label 7\n      xywh {0 120 140 60}\n    }\n    Fl_Button {} {\n      label 9\n      xywh {280 120 140 60}\n    }\n  }\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# data file for the Fltk User Interface Designer (fluid)\nversion 1.0304\nheader_name {.h}\ncode_name {.cxx}\nFunction {} {open\n} {\n  Fl_Window {} {\n    label 01 open selected\n    xywh {122 262 420 180} type Double visible\n  } {\n    Fl_Button {} {\n      label 5\n      xywh {140 60 140 60}\n    }\n    Fl_Button {} {\n      label 2\n      xywh {140 0 140 60}\n    }\n    Fl_Button {} {\n      label 4\n      xywh {0 60 140 60}\n    }\n    Fl_Button {} {\n      label 8\n      xywh {140 120 140 60}\n    }\n    Fl_Button {} {\n      label 6\n      xywh {280 60 140 60}\n    }\n    Fl_Button {} {\n      label 1\n      xywh {0 0 140 60}\n    }\n    Fl_Button {} {\n      label 3\n      xywh {280 0 140 60}\n    }\n    Fl_Button {} {\n      label 7\n      xywh {0 120 140 60}\n    }\n    Fl_Button {} {\n      label 9\n      xywh {280 120 140 60}\n    }\n  }\n}"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"arquivo-makefile"},"children":[{"type":"text","value":"Arquivo Makefile"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para realizar a compilação dos programas crie o seguinte "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Makefile"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"# ----------------------------------------------------------------------\n# Copyright (C) 2017-2021 Geraldo Ribeiro <geraldo@intmain.io>\n# ----------------------------------------------------------------------\n\nPROGRAMS=01 02 03 04\nGENERATED=$(addsuffix .h, $(PROGRAMS)) $(addsuffix .cxx, $(PROGRAMS))\n\nCXXFLAGS+=-std=c++17\nCXXFLAGS+=`fltk-config --cxxflags`\nLDFLAGS+=`fltk-config --ldflags`\n\n# Geração de código\n%.cxx: %.fl\n    fluid -c $^\n\n# Opção de compilação 1\n%: %.cxx\n    fltk-config --compile $^\n\n# Opção de compilação 2\n#%: %.cxx\n#   $(CXX) $(LDFLAGS) $^ -o $@ $(LDFLAGS)\n\n\nall: $(PROGRAMS)\n\nclean:\n    rm -f $(PROGRAMS) $(GENERATED)\n","language":"Makefile"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# ----------------------------------------------------------------------\n# Copyright (C) 2017-2021 Geraldo Ribeiro <geraldo@intmain.io>\n# ----------------------------------------------------------------------\n\nPROGRAMS=01 02 03 04\nGENERATED=$(addsuffix .h, $(PROGRAMS)) $(addsuffix .cxx, $(PROGRAMS))\n\nCXXFLAGS+=-std=c++17\nCXXFLAGS+=`fltk-config --cxxflags`\nLDFLAGS+=`fltk-config --ldflags`\n\n# Geração de código\n%.cxx: %.fl\n    fluid -c $^\n\n# Opção de compilação 1\n%: %.cxx\n    fltk-config --compile $^\n\n# Opção de compilação 2\n#%: %.cxx\n#   $(CXX) $(LDFLAGS) $^ -o $@ $(LDFLAGS)\n\n\nall: $(PROGRAMS)\n\nclean:\n    rm -f $(PROGRAMS) $(GENERATED)"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"geração-de-código"},"children":[{"type":"text","value":"Geração de código"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para gerar o código "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"C++"}]},{"type":"text","value":" ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".cxx"}]},{"type":"text","value":") a partir do "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Fluid"}]},{"type":"text","value":" ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".fl"}]},{"type":"text","value":") basta digitar "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"make"}]},{"type":"text","value":" que o código é gerado e compilado:"}]},{"type":"element","tag":"code","props":{"code":"make\nfluid -c 01.fl\nfltk-config --compile 01.cxx\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b6c040"},"children":[{"type":"text","value":"make"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b6c040"},"children":[{"type":"text","value":"fluid -c 01.fl"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b6c040"},"children":[{"type":"text","value":"fltk-config --compile 01.cxx"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"arquivo-gerado-01cxx"},"children":[{"type":"text","value":"Arquivo gerado 01.cxx"}]},{"type":"element","tag":"code","props":{"code":"// generated by Fast Light User Interface Designer (fluid) version 1.0304\n\n#include \"01.h\"\n\nint main(int argc, char **argv) {\n  Fl_Double_Window* w;\n  { Fl_Double_Window* o = new Fl_Double_Window(420, 180, \"01\");\n    w = o; if (w) {/* empty */}\n    { new Fl_Button(140, 60, 140, 60, \"5\");\n    } // Fl_Button* o\n    { new Fl_Button(140, 0, 140, 60, \"2\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 60, 140, 60, \"4\");\n    } // Fl_Button* o\n    { new Fl_Button(140, 120, 140, 60, \"8\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 60, 140, 60, \"6\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 0, 140, 60, \"1\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 0, 140, 60, \"3\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 120, 140, 60, \"7\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 120, 140, 60, \"9\");\n    } // Fl_Button* o\n    o->end();\n  } // Fl_Double_Window* o\n  w->show(argc, argv);\n  return Fl::run();\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// generated by Fast Light User Interface Designer (fluid) version 1.0304\n\n#include \"01.h\"\n\nint main(int argc, char **argv) {\n  Fl_Double_Window* w;\n  { Fl_Double_Window* o = new Fl_Double_Window(420, 180, \"01\");\n    w = o; if (w) {/* empty */}\n    { new Fl_Button(140, 60, 140, 60, \"5\");\n    } // Fl_Button* o\n    { new Fl_Button(140, 0, 140, 60, \"2\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 60, 140, 60, \"4\");\n    } // Fl_Button* o\n    { new Fl_Button(140, 120, 140, 60, \"8\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 60, 140, 60, \"6\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 0, 140, 60, \"1\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 0, 140, 60, \"3\");\n    } // Fl_Button* o\n    { new Fl_Button(0, 120, 140, 60, \"7\");\n    } // Fl_Button* o\n    { new Fl_Button(280, 120, 140, 60, \"9\");\n    } // Fl_Button* o\n    o->end();\n  } // Fl_Double_Window* o\n  w->show(argc, argv);\n  return Fl::run();\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"executando-a-aplicação-01"},"children":[{"type":"text","value":"Executando a aplicação 01"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao ser executada a aplicação "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"./01"}]},{"type":"text","value":" notamos que o redimensionamento está desabilitado, pois\ntemos na janela principal somente os botões de "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"enrolar"}]},{"type":"text","value":", "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"minimizar"}]},{"type":"text","value":" e "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"fechar"}]},{"type":"text","value":"\nhabilitados."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-01-01.png\" alt=\"Aplicação 01 sem possibilidade de redimensionamento.\" %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"aplicação-02"},"children":[{"type":"text","value":"Aplicação 02"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A aplicação 02 é uma cópia da 01 com redimensionamento ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"resizable"}]},{"type":"text","value":") habilitado na janela principal."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-02-00.png\" alt=\"Ativando redimensionamento na aplicação 02.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Podemos ver pelo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"diff"}]},{"type":"text","value":" abaixo que apenas o flag "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"resizable"}]},{"type":"text","value":" foi adicionado e o título da janela foi alterado para "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"02"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"diff 01.fl 02.fl\n8,9c8,9\n<     label 01 open selected\n<     xywh {122 262 420 180} type Double visible\n---\n>     label 02 open selected\n>     xywh {122 262 420 180} type Double resizable visible\n","language":"diff"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8961cf"},"children":[{"type":"text","value":"diff 01.fl 02.fl"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8961cf"},"children":[{"type":"text","value":"8,9c8,9"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b7b07b"},"children":[{"type":"text","value":"<     label 01 open selected"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b7b07b"},"children":[{"type":"text","value":"<     xywh {122 262 420 180} type Double visible"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b6c040"},"children":[{"type":"text","value":"---"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-906877"},"children":[{"type":"text","value":">     label 02 open selected"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-906877"},"children":[{"type":"text","value":">     xywh {122 262 420 180} type Double resizable visible"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note que agora o botão de "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"maximizar"}]},{"type":"text","value":" é adicionado:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-02-01.png\" alt=\"Aplicação 02 em tamanho inicial.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"E podemos redimensionar a janela horizontalmente e verticalmente:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-02-02.png\" alt=\"Aplicação 02 redimensionada horizontalmente.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-02-03.png\" alt=\"Aplicação 02 redimensionada verticalmente.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note que todos os 9 botões são redimensionados da mesma forma."}]},{"type":"element","tag":"h2","props":{"id":"aplicação-03"},"children":[{"type":"text","value":"Aplicação 03"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A aplicação 03 é uma cópia da 02 com redimensionamento habilitado no botão 5."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-03-00.png\" alt=\"Ativando o redimensionamento para o botão 05 na aplicação 03.\" %"},"children":[]}]},{"type":"element","tag":"code","props":{"code":"8c8\n<     label 02 open selected\n---\n>     label 03 open selected\n13c13\n<       xywh {140 60 140 60}\n---\n>       xywh {140 60 140 60} resizable\n\n","language":"diff"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8961cf"},"children":[{"type":"text","value":"8c8"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b7b07b"},"children":[{"type":"text","value":"<     label 02 open selected"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b6c040"},"children":[{"type":"text","value":"---"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-906877"},"children":[{"type":"text","value":">     label 03 open selected"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8961cf"},"children":[{"type":"text","value":"13c13"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b7b07b"},"children":[{"type":"text","value":"<       xywh {140 60 140 60}"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-b6c040"},"children":[{"type":"text","value":"---"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-906877"},"children":[{"type":"text","value":">       xywh {140 60 140 60} resizable"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-03-01.png\" alt=\"Aplicação 03 em tamanho inicial.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao redimensionar a janela podemos notar alguns comportamentos:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"os botões 1, 3, 7 e 9 (diagonais de 5) permanecem com suas dimensões originais"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"os botões 2 e 8 (acima e abaixo de 5) são redimensionados horizontalmente acompanhando o tamanho 5."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"os botões 4 e 6 (à direita e à esquerda de 5) são redimensionados verticalmente acompanhando o tamanho 5."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"comportamento válido quando se tem somente um widget marcado como "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"resizable"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-03-02.png\" alt=\"Aplicação 03 redimensionada.\" %"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"aplicação-04"},"children":[{"type":"text","value":"Aplicação 04"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A aplicação 04 é uma cópia da 02 com redimensionamento habilitado no botão 9."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% img src=\"/img/fltk-04-01.png\" alt=\"Aplicação 04 redimensionada.\" %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Observe que o mesmo comportamento geral é aplicado:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"diagonais são mantidas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"acima (e abaixo se houvesse) redimensionados acompanhando a largura de 9"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"à esquerda (e à direita se houvesse) redimensionados acompanhando a altura de 9"}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.fltk.org/articles.php?L415","rel":["nofollow"]},"children":[{"type":"text","value":"Article #415: How does resizing work?"}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-906877{color:#A6E22E}.ct-b7b07b{color:#F92672}.ct-8961cf{color:#75715E}.ct-b6c040{color:#F8F8F2}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introdução","depth":2,"text":"Introdução"},{"id":"aplicação-inicial","depth":2,"text":"Aplicação inicial","children":[{"id":"arquivo-01fl","depth":3,"text":"Arquivo 01.fl"},{"id":"arquivo-makefile","depth":3,"text":"Arquivo Makefile"},{"id":"geração-de-código","depth":3,"text":"Geração de código"},{"id":"arquivo-gerado-01cxx","depth":3,"text":"Arquivo gerado 01.cxx"}]},{"id":"executando-a-aplicação-01","depth":2,"text":"Executando a aplicação 01"},{"id":"aplicação-02","depth":2,"text":"Aplicação 02"},{"id":"aplicação-03","depth":2,"text":"Aplicação 03"},{"id":"aplicação-04","depth":2,"text":"Aplicação 04"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-fltk-layout.md","_source":"content","_file":"til/cpp-fltk-layout.md","_extension":"md"},{"_path":"/til/cpp-array","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"C++ array","description":"Exemplos de uso de std::array","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exemplos de uso de std::array"}]},{"type":"element","tag":"h2","props":{"id":"características"},"children":[{"type":"text","value":"Características"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é um wrapper para o array do C"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"array oferece uma sintaxe mais amigável comparada com a array do C"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pode ser passado e retornado por valor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pode ser passado e retornado por referência"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uso mais conveniente de "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"size"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uso mais conveniente de iteradores STL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"possui exatamente a mesma performace da array do C"}]}]},{"type":"element","tag":"h2","props":{"id":"array-vs-vector"},"children":[{"type":"text","value":"Array vs Vector"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"array"}]},{"type":"text","value":" é estático e possui tamanho definido em tempo de compilação"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"vector"}]},{"type":"text","value":" é dinâmico e é alocado no "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"heap"}]}]}]},{"type":"element","tag":"h2","props":{"id":"exemplos"},"children":[{"type":"text","value":"Exemplos"}]},{"type":"element","tag":"code","props":{"code":"#include <algorithm>\n#include <array>\n#include <iostream>\n\nusing namespace std;\n\n// Multidimensionais\ntemplate <class T, size_t ROW, size_t COL>\nusing Matrix = std::array<std::array<T, COL>, ROW>;\n\ntemplate <class T, size_t I, size_t... J>\nstruct MultiDimArray {\n  using Nested = typename MultiDimArray<T, J...>::type;\n  using type   = std::array<Nested, I>;\n};\n\ntemplate <class T, size_t I>\nstruct MultiDimArray<T, I> {\n  using type = std::array<T, I>;\n};\n\nint main( int argc, char **argv )\n{\n  auto print = []( const auto &arr ) {\n    cout << \"{ \";\n    for( const auto &x : arr ) {\n      cout << x << \" \";\n    }\n    cout << \"}\" << endl;\n  };\n\n  array<int, 3> a    = {2, 1, 3};\n  int           c[3] = {2, 1, 3}; // old C style\n\n  sort( a.begin(), a.end() );\n  print( a ); // { 1, 2, 3 }\n\n  sort( begin( c ), end( c ) ); // c == { 1, 2, 3 }\n  print( c );\n\n  for( auto &x : a ) {\n    x *= 2;\n  }\n  print( a ); // { 2, 4, 6 }\n\n  for( auto &x : c ) {\n    x *= 2;\n  }\n  print( c ); // { 2, 4, 6 }\n\n  array<array<int, 3>, 3> arr = {{{5, 8, 2}, {8, 3, 1}, {5, 3, 9}}};\n  cout << arr[2][2] << endl; // 9\n\n  Matrix<float, 3, 4> mat;\n  mat[1][2] = 5;\n\n  MultiDimArray<int, 2, 3, 4, 5>::type multi;\n  multi[1][1][1][1] = 5;\n\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#include <algorithm>\n#include <array>\n#include <iostream>\n\nusing namespace std;\n\n// Multidimensionais\ntemplate <class T, size_t ROW, size_t COL>\nusing Matrix = std::array<std::array<T, COL>, ROW>;\n\ntemplate <class T, size_t I, size_t... J>\nstruct MultiDimArray {\n  using Nested = typename MultiDimArray<T, J...>::type;\n  using type   = std::array<Nested, I>;\n};\n\ntemplate <class T, size_t I>\nstruct MultiDimArray<T, I> {\n  using type = std::array<T, I>;\n};\n\nint main( int argc, char **argv )\n{\n  auto print = []( const auto &arr ) {\n    cout << \"{ \";\n    for( const auto &x : arr ) {\n      cout << x << \" \";\n    }\n    cout << \"}\" << endl;\n  };\n\n  array<int, 3> a    = {2, 1, 3};\n  int           c[3] = {2, 1, 3}; // old C style\n\n  sort( a.begin(), a.end() );\n  print( a ); // { 1, 2, 3 }\n\n  sort( begin( c ), end( c ) ); // c == { 1, 2, 3 }\n  print( c );\n\n  for( auto &x : a ) {\n    x *= 2;\n  }\n  print( a ); // { 2, 4, 6 }\n\n  for( auto &x : c ) {\n    x *= 2;\n  }\n  print( c ); // { 2, 4, 6 }\n\n  array<array<int, 3>, 3> arr = {{{5, 8, 2}, {8, 3, 1}, {5, 3, 9}}};\n  cout << arr[2][2] << endl; // 9\n\n  Matrix<float, 3, 4> mat;\n  mat[1][2] = 5;\n\n  MultiDimArray<int, 2, 3, 4, 5>::type multi;\n  multi[1][1][1][1] = 5;\n\n  return 0;\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://cpptruths.blogspot.com/2011/10/multi-dimensional-arrays-in-c11.html","rel":["nofollow"]},"children":[{"type":"text","value":"Multi-dimensional arrays in C++11"}]}]}]}]},"date":"2020-01-04T00:00:00.000Z","draft":false,"tags":["C++","cpp","std::array","Algorítimos"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exemplos de uso de std::array"}]},{"type":"element","tag":"h2","props":{"id":"características"},"children":[{"type":"text","value":"Características"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é um wrapper para o array do C"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"array oferece uma sintaxe mais amigável comparada com a array do C"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pode ser passado e retornado por valor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pode ser passado e retornado por referência"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uso mais conveniente de "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"size"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uso mais conveniente de iteradores STL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"possui exatamente a mesma performace da array do C"}]}]},{"type":"element","tag":"h2","props":{"id":"array-vs-vector"},"children":[{"type":"text","value":"Array vs Vector"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"array"}]},{"type":"text","value":" é estático e possui tamanho definido em tempo de compilação"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"vector"}]},{"type":"text","value":" é dinâmico e é alocado no "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"heap"}]}]}]},{"type":"element","tag":"h2","props":{"id":"exemplos"},"children":[{"type":"text","value":"Exemplos"}]},{"type":"element","tag":"code","props":{"code":"#include <algorithm>\n#include <array>\n#include <iostream>\n\nusing namespace std;\n\n// Multidimensionais\ntemplate <class T, size_t ROW, size_t COL>\nusing Matrix = std::array<std::array<T, COL>, ROW>;\n\ntemplate <class T, size_t I, size_t... J>\nstruct MultiDimArray {\n  using Nested = typename MultiDimArray<T, J...>::type;\n  using type   = std::array<Nested, I>;\n};\n\ntemplate <class T, size_t I>\nstruct MultiDimArray<T, I> {\n  using type = std::array<T, I>;\n};\n\nint main( int argc, char **argv )\n{\n  auto print = []( const auto &arr ) {\n    cout << \"{ \";\n    for( const auto &x : arr ) {\n      cout << x << \" \";\n    }\n    cout << \"}\" << endl;\n  };\n\n  array<int, 3> a    = {2, 1, 3};\n  int           c[3] = {2, 1, 3}; // old C style\n\n  sort( a.begin(), a.end() );\n  print( a ); // { 1, 2, 3 }\n\n  sort( begin( c ), end( c ) ); // c == { 1, 2, 3 }\n  print( c );\n\n  for( auto &x : a ) {\n    x *= 2;\n  }\n  print( a ); // { 2, 4, 6 }\n\n  for( auto &x : c ) {\n    x *= 2;\n  }\n  print( c ); // { 2, 4, 6 }\n\n  array<array<int, 3>, 3> arr = {{{5, 8, 2}, {8, 3, 1}, {5, 3, 9}}};\n  cout << arr[2][2] << endl; // 9\n\n  Matrix<float, 3, 4> mat;\n  mat[1][2] = 5;\n\n  MultiDimArray<int, 2, 3, 4, 5>::type multi;\n  multi[1][1][1][1] = 5;\n\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"#include <algorithm>\n#include <array>\n#include <iostream>\n\nusing namespace std;\n\n// Multidimensionais\ntemplate <class T, size_t ROW, size_t COL>\nusing Matrix = std::array<std::array<T, COL>, ROW>;\n\ntemplate <class T, size_t I, size_t... J>\nstruct MultiDimArray {\n  using Nested = typename MultiDimArray<T, J...>::type;\n  using type   = std::array<Nested, I>;\n};\n\ntemplate <class T, size_t I>\nstruct MultiDimArray<T, I> {\n  using type = std::array<T, I>;\n};\n\nint main( int argc, char **argv )\n{\n  auto print = []( const auto &arr ) {\n    cout << \"{ \";\n    for( const auto &x : arr ) {\n      cout << x << \" \";\n    }\n    cout << \"}\" << endl;\n  };\n\n  array<int, 3> a    = {2, 1, 3};\n  int           c[3] = {2, 1, 3}; // old C style\n\n  sort( a.begin(), a.end() );\n  print( a ); // { 1, 2, 3 }\n\n  sort( begin( c ), end( c ) ); // c == { 1, 2, 3 }\n  print( c );\n\n  for( auto &x : a ) {\n    x *= 2;\n  }\n  print( a ); // { 2, 4, 6 }\n\n  for( auto &x : c ) {\n    x *= 2;\n  }\n  print( c ); // { 2, 4, 6 }\n\n  array<array<int, 3>, 3> arr = {{{5, 8, 2}, {8, 3, 1}, {5, 3, 9}}};\n  cout << arr[2][2] << endl; // 9\n\n  Matrix<float, 3, 4> mat;\n  mat[1][2] = 5;\n\n  MultiDimArray<int, 2, 3, 4, 5>::type multi;\n  multi[1][1][1][1] = 5;\n\n  return 0;\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://cpptruths.blogspot.com/2011/10/multi-dimensional-arrays-in-c11.html","rel":["nofollow"]},"children":[{"type":"text","value":"Multi-dimensional arrays in C++11"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"características","depth":2,"text":"Características"},{"id":"array-vs-vector","depth":2,"text":"Array vs Vector"},{"id":"exemplos","depth":2,"text":"Exemplos"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-array.md","_source":"content","_file":"til/cpp-array.md","_extension":"md"},{"_path":"/til/corba","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"CORBA","description":"Computação distribuída com CORBA","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introdução"},"children":[{"type":"text","value":"Introdução"}]},{"type":"element","tag":"h3","props":{"id":"o-que-é-corba"},"children":[{"type":"text","value":"O que é CORBA?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é o acrônimo para "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Common Object Request Broker Architecture"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é um framework para construção de sistemas distribuídos orientados a objetos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é multiplataforma"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é independente de linguagem"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é um padrão aberto e extensível definido pela "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Object Management Group"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"clientes e servidores estão em diferentes máquinas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"programas clientes enviam mensagens para servidores remotos como se este estivesse locais ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"location transparency"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h3","props":{"id":"o-que-é-a-omg"},"children":[{"type":"text","value":"O que é a OMG?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.omg.org","rel":["nofollow"]},"children":[{"type":"text","value":"www.omg.org"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"fundada em 1989"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"somente provê especificações"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não provê implementações"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"todas as especificações são free"}]}]},{"type":"element","tag":"h3","props":{"id":"corba-vs-soapxml-rpc"},"children":[{"type":"text","value":"CORBA vs SOAP/XML-RPC"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"SOAP"}]},{"type":"text","value":" e "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"XML-RPC"}]},{"type":"text","value":" são protocolos wire"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"CORBA"}]},{"type":"text","value":" inclui:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"um protocolo wire"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"GIOP"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"object model"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IDL"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"mapeamento de linguagem"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"serviços"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"códigos de cliente e servidor portáveis  entre implementações CORBA"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"corba-é-pesado"},"children":[{"type":"text","value":"CORBA é pesado?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uma arquitetura mínima requer algumas dezenas de kB (segundo "},{"type":"element","tag":"a","props":{"href":"https://www.grisby.org/presentations/accu2003.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA? Isn’ t that Obsolete ?"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h2","props":{"id":"orb---object-request-broker"},"children":[{"type":"text","value":"ORB - Object Request Broker"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é o núcleo da "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Object Management Architecture"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"integra:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"diferentes linguagens"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"diferentes arquiteturas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"diferentes sistemas operacionais"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é responsável por:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"encontrar uma implementação para uma requisição"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"preparar implementações para receber requisições"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"comunicar dados das requisições"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"clientes"},"children":[{"type":"text","value":"Clientes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"possuem referências para objetos e invocam operações nestes objetos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"conhecem apenas a interface dos objetos do servidor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não conhecem a implementação dos objetos nem os adaptadores utilizados por estas implementações"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"invocam interfaces definidas por uma IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"invocam as implementações através de:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"proxies ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"IDL generated stubs"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DII ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Dynamic Invocation Interface"}]},{"type":"text","value":")"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"servidores"},"children":[{"type":"text","value":"Servidores"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"se registram no ORB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"se disponibilizam para aceitar requisições"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"implementam uma IDL"}]}]},{"type":"element","tag":"h2","props":{"id":"idl"},"children":[{"type":"text","value":"IDL"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"provê interfaces independente de linguagem e sistema operacional"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é puramente declarativa (não provê detalhes de implementação)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é fortemente tipada"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"especificações podem ser escritas e invocadas em qualquer linguagem"}]}]},{"type":"element","tag":"h3","props":{"id":"idl-features"},"children":[{"type":"text","value":"IDL Features"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"modules"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"interfaces"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"operations"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"attributes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"inheritance"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"basic types"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"arrays"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sequences"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"struct, enum, union"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"typedef"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"consts"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"exceptions"}]}]},{"type":"element","tag":"h3","props":{"id":"tipos-básicos"},"children":[{"type":"text","value":"Tipos básicos"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"float"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"long"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"short"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"unsigned long"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"unsigned short"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"char"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"octet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"any"}]}]},{"type":"element","tag":"h3","props":{"id":"direções-dos-parâmetros"},"children":[{"type":"text","value":"Direções dos parâmetros"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" - do cliente para o servidor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"out"}]},{"type":"text","value":" - do servidor para o cliente"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"inout"}]},{"type":"text","value":" - do cliente para o servidor e de volta para o cliente"}]}]},{"type":"element","tag":"h3","props":{"id":"exceções"},"children":[{"type":"text","value":"Exceções"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CORBA define dois tipos de exceções:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"system exceptions"}]},{"type":"text","value":": exceções padrões definidas pelo CORBA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"user defined exceptions"}]},{"type":"text","value":": exceções definidas pelo usuário através da IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Implicitamente, todas as operações definidas na IDL podem lançar qualquer uma das exceções padrão do sistema CORBA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Nenhuma referência para exceções padrão devem aparecer na especificação da IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"para especificar que uma operação "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"pode"}]},{"type":"text","value":" lançar uma exceção definida pelo usuário você deve:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"primeiro definir a estrutura da exceção"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"incluir "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"raises"}]},{"type":"text","value":" à definição da operação"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uma exceção da IDL pode conter membros"}]}]},{"type":"element","tag":"code","props":{"code":"Interface Bank {\n  exception Reject {\n    string reason; // membro da exceção\n  };\n  exception TooMany {}; // exceção sem membros\n\n  Account newAccount( in string name ) raises (Reject, TooMany);\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Interface Bank {\n  exception Reject {\n    string reason; // membro da exceção\n  };\n  exception TooMany {}; // exceção sem membros\n\n  Account newAccount( in string name ) raises (Reject, TooMany);\n};\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"operações-oneway"},"children":[{"type":"text","value":"Operações oneway"}]},{"type":"element","tag":"code","props":{"code":"Interface Account {\n  oneway void notice( in string notice );\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Interface Account {\n  oneway void notice( in string notice );\n};\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não bloqueantes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não aceitam parâmetros "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"out"}]},{"type":"text","value":" ou "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"inout"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não lançam exceções (não aceitam "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"raise"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The OMG CORBA specification defines the following exceptions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_CONTEXT"}]},{"type":"text","value":" - if a request does not contain a correct context this exception is raised."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_INV_ORDER"}]},{"type":"text","value":" - this exception indicates that operations has been invoked operations in the wrong order, which would cause, for example, a dead-lock."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_OPERATION"}]},{"type":"text","value":" - raised if the target object exists, but that the invoked operation is not supported."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_PARAM"}]},{"type":"text","value":" - is thrown if, for example, a parameter is out of range or otherwise considered illegal."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_TYPECODE"}]},{"type":"text","value":" - if illegal type code is passed, for example, encapsulated in an any data type the 'BAD_TYPECODE' exception will be raised."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_QOS"}]},{"type":"text","value":" - raised whenever an object cannot support the required quality of service."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"CODESET_INCOMPATIBLE"}]},{"type":"text","value":" - raised if two ORB's cannot communicate due to different representation of, for example, char and/or wchar."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"COMM_FAILURE"}]},{"type":"text","value":" - raised if an ORB is unable to setup communication or it is lost while an operation is in progress."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"DATA_CONVERSION"}]},{"type":"text","value":" - raised if an ORB cannot convert data received to the native representation. See also the 'CODESET_INCOMPATIBLE' exception."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"FREE_MEM"}]},{"type":"text","value":" - the ORB failed to free dynamic memory and failed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IMP_LIMIT"}]},{"type":"text","value":" - an implementation limit was exceeded in the ORB at run time. A object factory may, for example, limit the number of object clients are allowed to create."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INTERNAL"}]},{"type":"text","value":" - an internal failure occurred in an ORB, which is unrecognized. You may consider contacting the ORB providers support."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INTF_REPOS"}]},{"type":"text","value":" - the ORB was not able to reach the interface repository, or some other failure relating to the interface repository is detected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INITIALIZE"}]},{"type":"text","value":" - the ORB initialization failed due to, for example, network or configuration error."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INVALID_TRANSACTION"}]},{"type":"text","value":" - is raised if the request carried an invalid transaction context."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INV_FLAG"}]},{"type":"text","value":" - an invalid flag was passed to an operation, which caused, for example, a connection to be closed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INV_IDENT"}]},{"type":"text","value":" - this exception indicates that an IDL identifier is incorrect."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INV_OBJREF"}]},{"type":"text","value":" - this exception is raised if an objet reference is malformed or a nil reference (see also corba:create_nil_objref/0)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INV_POLICY"}]},{"type":"text","value":" - the invocation cannot be made due to an incompatibility between policy overrides that apply to the particular invocation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"MARSHAL"}]},{"type":"text","value":" - this exception may be raised by the client- or server-side when either ORB is unable to marshal/unmarshal requests or replies."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_IMPLEMENT"}]},{"type":"text","value":" - if the operation exists but no implementation exists, this exception is raised."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_MEMORY"}]},{"type":"text","value":" - the ORB has run out of memory."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_PERMISSION"}]},{"type":"text","value":" - the caller has insufficient privileges, such as, for example, bad SSL certificate."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_RESOURCES"}]},{"type":"text","value":" - a general platform resource limit exceeded."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_RESPONSE"}]},{"type":"text","value":" - no response available of a deferred synchronous request."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"OBJ_ADAPTER"}]},{"type":"text","value":" - indicates administrative mismatch; the object adapter is not able to associate an object with the implementation repository."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"OBJECT_NOT_EXIST"}]},{"type":"text","value":" - the object have been disposed or terminated; clients should remove all copies of the object reference and initiate desired recovery process."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"PERSIST_STORE"}]},{"type":"text","value":" - the ORB was not able to establish a connection to its persistent storage or data contained in the the storage is corrupted."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"REBIND"}]},{"type":"text","value":" - a request resulted in, for example, a 'LOCATION_FORWARD' message; if the policies are incompatible this exception is raised."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TIMEOUT"}]},{"type":"text","value":" - raised if a request fail to complete within the given time-limit."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSACTION_MODE"}]},{"type":"text","value":" - a transaction policy mismatch detected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSACTION_REQUIRED"}]},{"type":"text","value":" - a transaction is required for the invoked operation but the request contained no transaction context."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSACTION_ROLLEDBACK"}]},{"type":"text","value":" - the transaction associated with the request has already been rolled back or will be."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSACTION_UNAVAILABLE"}]},{"type":"text","value":" - no transaction context can be supplied since the ORB is unable to contact the Transaction Service."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSIENT"}]},{"type":"text","value":" - the ORB could not determine the current status of an object since it could not be reached. The error may be temporary."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"UNKNOWN"}]},{"type":"text","value":" - is thrown if an implementation throws a non-CORBA, or unrecognized, exception."}]}]},{"type":"element","tag":"h3","props":{"id":"estruturas"},"children":[{"type":"text","value":"Estruturas"}]},{"type":"element","tag":"code","props":{"code":"struct PersonalDetails {\n  string name;\n  short age;\n};\n\ninterface Bank {\n  PersonalDetails getPerDet(in string name);\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"struct PersonalDetails {\n  string name;\n  short age;\n};\n\ninterface Bank {\n  PersonalDetails getPerDet(in string name);\n};\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"arrays"},"children":[{"type":"text","value":"Arrays"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"podem ser multidimensionais"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"precisam ter tamanho fixo ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"conhecido em tempo de definição"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"code","props":{"code":"Account bankAccounts[100];\nshort matrix[10][20]; // 2D array\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Account bankAccounts[100];\nshort matrix[10][20]; // 2D array\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"constantes"},"children":[{"type":"text","value":"Constantes"}]},{"type":"element","tag":"code","props":{"code":"Interface Bank {\n  const long MaxAccounts = 10000;\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Interface Bank {\n  const long MaxAccounts = 10000;\n};\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Contantes dos tipos "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"long"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"float"}]},{"type":"text","value":" e "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"string"}]},{"type":"text","value":" podem ser declarada."}]},{"type":"element","tag":"h3","props":{"id":"typedef"},"children":[{"type":"text","value":"Typedef"}]},{"type":"element","tag":"code","props":{"code":"typedef short size;\nsize i;\n\ntypedef Account Accounts[100]; // acho que está invertido aqui\nAccounts bankAccounts;\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"typedef short size;\nsize i;\n\ntypedef Account Accounts[100]; // acho que está invertido aqui\nAccounts bankAccounts;\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"módulos"},"children":[{"type":"text","value":"Módulos"}]},{"type":"element","tag":"code","props":{"code":"Module Finance {\n  interface Bank { ... };\n  interface Account { ... };\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Module Finance {\n  interface Bank { ... };\n  interface Account { ... };\n};\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"são usados para agrupar interfaces em unidades lógicas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"utilize nomes completos (p.e. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Finance::Account *a;"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h3","props":{"id":"preprocessador"},"children":[{"type":"text","value":"Preprocessador"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"baseado no preprocessador do C++"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"substituição de macro"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"compilação condicional"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"inclusão de IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#include"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#define"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#if"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#ifdef"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#defined"}]}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-para-linguagem"},"children":[{"type":"text","value":"Mapeamento para linguagem"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"linguagens "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"OO"}]},{"type":"text","value":" e "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"non-OO"}]},{"type":"text","value":" acessam de modos diferentes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"tipos específicos da linguagem"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"estrutura do "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"stub"}]},{"type":"text","value":" cliente (somente para "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"non-OO"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"interface de invocação dinâmica"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"esqueleto de implementação"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"adaptadores de objeto"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"interface direta ao ORB"}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-de-identificadores"},"children":[{"type":"text","value":"Mapeamento de identificadores"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"usa o mesmo nome"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"se for uma palavra reservada do C++ receberá um "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"_"}]},{"type":"text","value":" como prefixo (p.e. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"_new"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-de-interface"},"children":[{"type":"text","value":"Mapeamento de interface"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"são mapeadas para classes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uma IDL mapeada para uma classe C++ não pode ser instanciada"}]}]},{"type":"element","tag":"code","props":{"code":"Interface Account { ... }\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Interface Account { ... }\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"será mapeado para:"}]},{"type":"element","tag":"code","props":{"code":"class Account : public virtual CORBA::Object { ... }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Account : public virtual CORBA::Object { ... }\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-de-escopo"},"children":[{"type":"text","value":"Mapeamento de escopo"}]},{"type":"element","tag":"h4","props":{"id":"interface-para-classe"},"children":[{"type":"text","value":"Interface para classe"}]},{"type":"element","tag":"code","props":{"code":"Interface Bank {\n  struct Details { ... };\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Interface Bank {\n  struct Details { ... };\n};\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"será mapeado para:"}]},{"type":"element","tag":"code","props":{"code":"class Bank {\n  public:\n    struct Details { ... };\n};\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Bank {\n  public:\n    struct Details { ... };\n};\n"}]}]}]},{"type":"element","tag":"h4","props":{"id":"module-para-namespace"},"children":[{"type":"text","value":"Module para namespace"}]},{"type":"element","tag":"code","props":{"code":"Module M {\n  Interface A { ... };\n  Interface B { ... };\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Module M {\n  Interface A { ... };\n  Interface B { ... };\n};\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"será mapeado para:"}]},{"type":"element","tag":"code","props":{"code":"namespace M {\n  class A { ... };\n  class B { ... };\n};\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"namespace M {\n  class A { ... };\n  class B { ... };\n};\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Acessíveis via "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"M::A"}]},{"type":"text","value":" e "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"M::B"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-do-módulo-padrão-do-corba"},"children":[{"type":"text","value":"Mapeamento do módulo padrão do CORBA"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Será mapeado para:"}]},{"type":"element","tag":"code","props":{"code":"namespace CORBA { ... }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"namespace CORBA { ... }\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Utilize os membros como:"}]},{"type":"element","tag":"code","props":{"code":"CORBA::ORB_init( ... );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"CORBA::ORB_init( ... );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-de-tipos"},"children":[{"type":"text","value":"Mapeamento de tipos"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"IDL"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"C++"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Tamanho e faixa"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"short"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Short"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"16 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"17.289ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 7641.8 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mo"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-1-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(778,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-1-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-1-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-1-TEX-N-35","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2234.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-1-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3629,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-1-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(4629.2,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-1-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-1-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-1-TEX-N-35","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6141.5,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-1-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7141.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-1-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"32 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"17.289ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 7641.8 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-33","d":"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mo"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-2-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(778,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-2-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-2-TEX-N-33"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-2-TEX-N-31","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2234.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-2-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3629,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-2-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(4629.2,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-2-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-2-TEX-N-33"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-2-TEX-N-31","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6141.5,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-2-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7141.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-2-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"long long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::LongLong"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"64 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"17.62ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 7788.2 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-33","d":"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mo"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-3-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(778,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-3-TEX-N-36"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-3-TEX-N-33","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2234.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-3-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3629,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(4629.2,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(533,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-3-TEX-N-36"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5565.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-3-TEX-N-33"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6288,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-3-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7288.2,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-3-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"unsigned short"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::UShort"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"16 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"11.353ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 5017.9 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-4-TEX-N-30"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(666.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-4-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(2005.3,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-4-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-4-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-4-TEX-N-36","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3517.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-4-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(4517.9,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-4-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"unsigned long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::ULong"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"32 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"11.353ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 5017.9 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-33","d":"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-5-TEX-N-30"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(666.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-5-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(2005.3,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-5-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-5-TEX-N-33"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-5-TEX-N-32","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3517.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-5-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(4517.9,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-5-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"unsigned long long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::ULongLong"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"64 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.05ex;","xmlns":"http://www.w3.org/2000/svg","width":"7.456ex","height":"1.954ex","role":"img","focusable":"false","viewBox":"0 -841.7 3295.4 863.7","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-34","d":"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-6-TEX-N-30"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(666.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-6-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(2005.3,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-6-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-6-TEX-N-36"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"34","xLinkHref":"#MJX-6-TEX-N-34","transform":"translate(500,0)"},"children":[]}]}]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"float"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Float"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"32 bit IEEE single precision floating point number"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Double"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"64 bit IEEE double precision floating point number"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"long double"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::LongDouble"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"--"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"char"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Char"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"8 bit"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"wchar"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::WChar"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"-- (Wide Char)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"string"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::char *"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"--"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"wstring"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::WChar *"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"--"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Boolean"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"true/false"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"octet"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Octet"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"(unsigned char)  8 bit raw. Sem conversão"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"any"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Any"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Arbitrary"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"repositório-de-interfaces"},"children":[{"type":"text","value":"Repositório de interfaces"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"provê armazenamento para informações da IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"um programa pode referenciar objetos cuja interface será conhecida em tempo de execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"estas informações podem ser usadas pelo ORB para realizar requisições"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pode armazenar outras informações sobre interfaces:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"debugging"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"info"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"browser routines"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"repositório-de-implementação"},"children":[{"type":"text","value":"Repositório de implementação"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"informações que o ORB utiliza para localizar e ativar implementações de um servidor de objetos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"armazena informações de ativação:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"máquina onde um servidor pode ser iniciado a partir de uma requisição do cliente"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"dynamic-invocation-interface"},"children":[{"type":"text","value":"Dynamic Invocation Interface"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Em vez de chamar um stub específico de uma operação, é possível especificar um objeto, operação e parâmetros para através de uma chamada ou sequência de chamadas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"o cliente precisa fornecer os tipos dos parâmetros passados"}]}]},{"type":"element","tag":"h2","props":{"id":"interoperabilidade"},"children":[{"type":"text","value":"Interoperabilidade"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"suporta rede de objetos distribuídos em múltiplos ORBs (heterogêneos)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"InterORBability"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"GIOP"}]},{"type":"text","value":": (General Inter-ORB Protocol) sintaxe padrão de transferência e conjunto de formato de mensagens"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ESIOP: (Environment Specific Inter-ORB Protocol) protocolo especializado"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IIOP"}]},{"type":"text","value":": mapeamento "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TCP/IP"}]},{"type":"text","value":" para "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"GIOP"}]}]}]},{"type":"element","tag":"h2","props":{"id":"coss---common-object-service-specification"},"children":[{"type":"text","value":"COSS - Common Object Service Specification"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"naming"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"events"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"life cycle"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"time"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"transactions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"concurrency"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"persistence"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"query"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"security"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"licensing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"relationships"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"properties"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"externalization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"collection"}]}]},{"type":"element","tag":"h2","props":{"id":"oa---object-adapter"},"children":[{"type":"text","value":"OA - Object Adapter"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Conectam implementações de objetos ao ORB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ativam os múltiplos objetos implementados por um servidor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Encaminhamento de requisições de serviço"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Geram "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"object references"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Para ter o status de "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CORBA Object"}]},{"type":"text","value":" o objeto deve ser registrado com o adaptador"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"boa---basic-object-adapter"},"children":[{"type":"text","value":"BOA - Basic Object Adapter"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Presente na especificação CORBA até a revisão 2.1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CORBA 2.2 substituiu o BOA pelo POA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ORB com BOA significa que os servidores não são portáveis"}]}]},{"type":"element","tag":"h2","props":{"id":"poa-portable-object-adapter"},"children":[{"type":"text","value":"POA Portable Object Adapter"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"O POA ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Portable Object Adapter"}]},{"type":"text","value":") auxilia o ORB ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Object Request Broker"}]},{"type":"text","value":") na\npassagem das requisições do clientes para a implementação do servidor\n(servant)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"O POA interpreta a requisição, empacota a passagem de parâmetros e então\nlocaliza o servant e os tratadores de recuperação erros e de segurança."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Isto habilita portabilidade, independência de fabricantes e extensibilidade\ncompatível com a especificação da OMG (Object Management Group)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"POA também habilita a persistência de objetos bem como dá suporte a ciclo de\nvida do serviço"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Identificadores de objetos automaticamente gerados ou especificados pelo usuário"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ativação explícita ou por demanda"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Relação: um servant <-> um ou mais objetos CORBA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Aplicação tem total controle sobre o comportamento e sobre a existência dos objetos CORBA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Servants"}]},{"type":"text","value":" podem usar esqueletos estáticos ou dinâmicos"}]}]},{"type":"element","tag":"h3","props":{"id":"identificador-de-objeto"},"children":[{"type":"text","value":"Identificador de Objeto"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Valor usado para identificar um objeto no contexto de um POA"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Não é um identificador globalmente único!"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pode ser determinado pela aplicação ou gerado pelo POA"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"typedef sequence<octet> ObjectID;"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"O POA coloca esse valor no campo "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"object id"}]},{"type":"text","value":" da IOR"}]}]},{"type":"element","tag":"h3","props":{"id":"o-campo-object-id-da-ior"},"children":[{"type":"text","value":"O Campo Object Id da IOR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"/img/corba-ior-object-id.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"instalação-do-omniorb-no-debian"},"children":[{"type":"text","value":"Instalação do omniORB no Debian"}]},{"type":"element","tag":"code","props":{"code":"apt install libomniorb4-dev omniidl omniorb omniorb-doc omniorb-nameserver omniidl-python python-omniorb\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"apt install libomniorb4-dev omniidl omniorb omniorb-doc omniorb-nameserver omniidl-python python-omniorb\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"iniciar-o-servidor-de-nomes"},"children":[{"type":"text","value":"Iniciar o servidor de nomes"}]},{"type":"element","tag":"h3","props":{"id":"omniorb"},"children":[{"type":"text","value":"OmniORB"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Incluir no arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/omniORB.cfg"}]},{"type":"text","value":" a seguinte linha:"}]},{"type":"element","tag":"code","props":{"code":"InitRef = OmniNameService=corbaname::localhost\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"InitRef = OmniNameService=corbaname::localhost\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% note %"},"children":[]},{"type":"text","value":"\nO nome "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"OmniNameService"}]},{"type":"text","value":" deve ser conhecido pelo "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"servidor"}]},{"type":"text","value":" e pelo "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"cliente"}]},{"type":"text","value":".\n"},{"type":"element","tag":"binding","props":{"value":"% /note %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para iniciar o servidor de nomes do "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"OmniORB"}]},{"type":"text","value":" use:"}]},{"type":"element","tag":"code","props":{"code":"omniNames -start\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"omniNames -start\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exemplo de saída do comando acima:"}]},{"type":"element","tag":"code","props":{"code":"omniNames: (0) 2019-12-30 15:36:29.516974: Data file: '/var/lib/omniorb/omninames-erebo.dat'.\nomniNames: (0) 2019-12-30 15:36:29.517058: Starting omniNames for the first time.\nomniNames: (0) 2019-12-30 15:36:29.517348: Wrote initial data file '/var/lib/omniorb/omninames-erebo.dat'.\nomniNames: (0) 2019-12-30 15:36:29.517444: Read data file '/var/lib/omniorb/omninames-erebo.dat' successfully.\nomniNames: (0) 2019-12-30 15:36:29.517529: Root context is IOR:010000002b00000049444c3a6f6d672e6f72672f436f734e616d696e672f4e616d696e67436f6e746578744578743a312e300000010000000000000070000000010102000d0000003139322e3136382e302e31330000f90a0b0000004e616d6553657276696365000300000000000000080000000100000000545441010000001c000000010000000100010001000000010001050901010001000000090101000354544108000000ad430a5e010075e0\nomniNames: (0) 2019-12-30 15:36:29.517600: Checkpointing Phase 1: Prepare.\nomniNames: (0) 2019-12-30 15:36:29.517703: Checkpointing Phase 2: Commit.\nomniNames: (0) 2019-12-30 15:36:29.517802: Checkpointing completed.\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"omniNames: (0) 2019-12-30 15:36:29.516974: Data file: '/var/lib/omniorb/omninames-erebo.dat'.\nomniNames: (0) 2019-12-30 15:36:29.517058: Starting omniNames for the first time.\nomniNames: (0) 2019-12-30 15:36:29.517348: Wrote initial data file '/var/lib/omniorb/omninames-erebo.dat'.\nomniNames: (0) 2019-12-30 15:36:29.517444: Read data file '/var/lib/omniorb/omninames-erebo.dat' successfully.\nomniNames: (0) 2019-12-30 15:36:29.517529: Root context is IOR:010000002b00000049444c3a6f6d672e6f72672f436f734e616d696e672f4e616d696e67436f6e746578744578743a312e300000010000000000000070000000010102000d0000003139322e3136382e302e31330000f90a0b0000004e616d6553657276696365000300000000000000080000000100000000545441010000001c000000010000000100010001000000010001050901010001000000090101000354544108000000ad430a5e010075e0\nomniNames: (0) 2019-12-30 15:36:29.517600: Checkpointing Phase 1: Prepare.\nomniNames: (0) 2019-12-30 15:36:29.517703: Checkpointing Phase 2: Commit.\nomniNames: (0) 2019-12-30 15:36:29.517802: Checkpointing completed.\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A porta padrão é a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"2809"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Os arquivos de controle serão criados por padrão no diretório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/omniorb/"}]},{"type":"text","value":":"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/omniorb/omninames-nome-da-maquina.dat"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/omniorb/omninames-nome-da-maquina.bak"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para especificar um diretório diferente use a opção "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"-logdir"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"omniNames -logdir /tmp -start\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"omniNames -logdir /tmp -start\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"mico"},"children":[{"type":"text","value":"MICO"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para iniciar o servidor de nomes do "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"MICO"}]},{"type":"text","value":" use:"}]},{"type":"element","tag":"code","props":{"code":"nsd -ORBIIOPAddr inet:localhost:2809\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"nsd -ORBIIOPAddr inet:localhost:2809\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Veja exemplo em "},{"type":"element","tag":"a","props":{"href":"http://www.mario-konrad.ch/blog/programming/connect_orbs.html","rel":["nofollow"]},"children":[{"type":"text","value":"Connecting 3 ORBs"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"exemplo"},"children":[{"type":"text","value":"Exemplo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Componentes do exemplo","src":"/til/corba-01.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"criando-a-idl"},"children":[{"type":"text","value":"Criando a IDL"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Arquivo de interface "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data.idl"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"#ifndef __DATADIST_IDL__\n#define __DATADIST_IDL__\nmodule Data\n{\n  interface ServiceA {\n    boolean CallServiceRoutineA (\n        in    long num1,\n        inout long num2,\n        out   long retNum );\n    boolean CallServiceRoutineB (\n        inout long num1,\n        inout long num2);\n  };\n};\n#endif\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#ifndef __DATADIST_IDL__\n#define __DATADIST_IDL__\nmodule Data\n{\n  interface ServiceA {\n    boolean CallServiceRoutineA (\n        in    long num1,\n        inout long num2,\n        out   long retNum );\n    boolean CallServiceRoutineB (\n        inout long num1,\n        inout long num2);\n  };\n};\n#endif\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"gerando-backend-a-partir-da-idl"},"children":[{"type":"text","value":"Gerando backend a partir da IDL"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Use a opção "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"-b"}]},{"type":"text","value":" para escolher o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" a ser gerado."}]},{"type":"element","tag":"code","props":{"code":"omniidl -bcxx    Data.idl\nomniidl -bpython Data.idl\nomniidl -bdump   Data.idl\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"omniidl -bcxx    Data.idl\nomniidl -bpython Data.idl\nomniidl -bdump   Data.idl\n"}]}]}]},{"type":"element","tag":"h4","props":{"id":"gerando-python"},"children":[{"type":"text","value":"Gerando Python"}]},{"type":"element","tag":"code","props":{"code":"omniidl -bpython Data.idl\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"omniidl -bpython Data.idl\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"os arquivos abaixo são criados:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data_idl.py"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data__POA/__init__.py"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data/__init__.py"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% FIXME %"},"children":[]},{"type":"text","value":"\nDescrever os arquivos "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"gerados"}]},{"type":"text","value":" em "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"python"}]},{"type":"text","value":".\n"},{"type":"element","tag":"binding","props":{"value":"% /FIXME %"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"gerando-c"},"children":[{"type":"text","value":"Gerando C++"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao executar o seguinte comando:"}]},{"type":"element","tag":"code","props":{"code":"omniidl -bcxx Data.idl\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"omniidl -bcxx Data.idl\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"os arquivos abaixo são criados:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data.hh"}]},{"type":"text","value":" - cabeçalho que será usado pelo cliente e pelo servidor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"DataSK.cc"}]},{"type":"text","value":" - deve ser compilado e lincado com o programa que proverá a infraestrutura de comunicação"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Contendo os seguintes items:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"classe "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ServiceA"}]},{"type":"text","value":" contendo funções estáticas e definições de tipos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ServiceA_ptr"}]},{"type":"text","value":" - um ponteiro para o tipo do objeto de referência"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ServiceA_var"}]},{"type":"text","value":" - um helper para gerenciamento de memória usado por "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ServiceA_ptr"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"classe "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"POA_Service!"}]},{"type":"text","value":" - a classe esqueleto para o servidor"}]}]},{"type":"element","tag":"h5","props":{"id":"datahh"},"children":[{"type":"text","value":"Data.hh"}]},{"type":"element","tag":"code","props":{"code":"  // interface ServiceA\n  class ServiceA {\n  public:\n    // Declarations for this interface type.\n    typedef ServiceA_ptr _ptr_type;\n    typedef ServiceA_var _var_type;\n    static _ptr_type _duplicate(_ptr_type);\n    static _ptr_type _narrow(::CORBA::Object_ptr);\n    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);\n    static _ptr_type _nil();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  // interface ServiceA\n  class ServiceA {\n  public:\n    // Declarations for this interface type.\n    typedef ServiceA_ptr _ptr_type;\n    typedef ServiceA_var _var_type;\n    static _ptr_type _duplicate(_ptr_type);\n    static _ptr_type _narrow(::CORBA::Object_ptr);\n    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);\n    static _ptr_type _nil();\n"}]}]}]},{"type":"element","tag":"h5","props":{"id":"dataskcc"},"children":[{"type":"text","value":"DataSK.cc"}]},{"type":"element","tag":"code","props":{"code":"// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.\n\n#include \"Data.hh\"\n#include <omniORB4/IOP_S.h>\n#include <omniORB4/IOP_C.h>\n#include <omniORB4/callDescriptor.h>\n#include <omniORB4/callHandle.h>\n#include <omniORB4/objTracker.h>\n\nOMNI_USING_NAMESPACE(omni)\n...\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.\n\n#include \"Data.hh\"\n#include <omniORB4/IOP_S.h>\n#include <omniORB4/IOP_C.h>\n#include <omniORB4/callDescriptor.h>\n#include <omniORB4/callHandle.h>\n#include <omniORB4/objTracker.h>\n\nOMNI_USING_NAMESPACE(omni)\n...\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"criando-o-servidor"},"children":[{"type":"text","value":"Criando o servidor"}]},{"type":"element","tag":"h3","props":{"id":"servercc"},"children":[{"type":"text","value":"Server.cc"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Código do servidor:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Iniciar o ORB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Obter a referência para o POA raiz para registra-se"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Vincular com o serviço de nomes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Iniciar o servidor de objetos"}]}]},{"type":"element","tag":"code","props":{"code":"// Server.cc\n\n#include <assert.h>\n#include <iostream>\n#include <signal.h>\n#include <stdlib.h>\n#include <string>\n#include <unistd.h>\n#include \"CServiceA_i.hh\"\n#include \"Data.hh\"\n\nusing namespace std;\n\nint main( int argc, char **argv )\n{\n  try {\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Server.cc\n\n#include <assert.h>\n#include <iostream>\n#include <signal.h>\n#include <stdlib.h>\n#include <string>\n#include <unistd.h>\n#include \"CServiceA_i.hh\"\n#include \"Data.hh\"\n\nusing namespace std;\n\nint main( int argc, char **argv )\n{\n  try {\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"    // (1) Iniciar o ORB\n    CORBA::ORB_var orb = CORBA::ORB_init( argc, argv );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    // (1) Iniciar o ORB\n    CORBA::ORB_var orb = CORBA::ORB_init( argc, argv );\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"    // (2) Obter a referência para o POA raiz para registra-se para ficar disponível para os clientes\n    CORBA::Object_var       obj  = orb->resolve_initial_references( \"RootPOA\" );\n    PortableServer::POA_var _poa = PortableServer::POA::_narrow( obj.in() );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    // (2) Obter a referência para o POA raiz para registra-se para ficar disponível para os clientes\n    CORBA::Object_var       obj  = orb->resolve_initial_references( \"RootPOA\" );\n    PortableServer::POA_var _poa = PortableServer::POA::_narrow( obj.in() );\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"    // As operações definidas na interface são invocadas pelo objeto de referência.\n    // Um instância de CRequestSocketStream_i é iniciada\n    PortableServer::Servant_var<CServiceA_i> myRequestServiceA = new CServiceA_i();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    // As operações definidas na interface são invocadas pelo objeto de referência.\n    // Um instância de CRequestSocketStream_i é iniciada\n    PortableServer::Servant_var<CServiceA_i> myRequestServiceA = new CServiceA_i();\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"    // o servidor e objetos é ativado no RootPOA\n    PortableServer::ObjectId_var myRequestServiceA_oid = _poa->activate_object( myRequestServiceA );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    // o servidor e objetos é ativado no RootPOA\n    PortableServer::ObjectId_var myRequestServiceA_oid = _poa->activate_object( myRequestServiceA );\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"    // Obtêm o objeto de referência do servidor e registra no servidor de nome\n    CORBA::Object_var SA_obj = myRequestServiceA->_this();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    // Obtêm o objeto de referência do servidor e registra no servidor de nome\n    CORBA::Object_var SA_obj = myRequestServiceA->_this();\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"    // Obtêm uma referência para o objeto e imprime seu IOR como string\n    CORBA::String_var sior( orb->object_to_string( SA_obj.in() ) );\n    cerr << \"'\" << (char *)sior << \"'\" << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    // Obtêm uma referência para o objeto e imprime seu IOR como string\n    CORBA::String_var sior( orb->object_to_string( SA_obj.in() ) );\n    cerr << \"'\" << (char *)sior << \"'\" << endl;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% note %"},"children":[]},{"type":"text","value":"\nAqui você deve utilizar o mesmo nome do servidor de nomes definido no arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/omniORB.cfg"}]},{"type":"text","value":".\n"},{"type":"element","tag":"binding","props":{"value":"% /note %"},"children":[]}]},{"type":"element","tag":"code","props":{"code":"    // (3) Vincular com o serviço de nomes\n    // o serviço é definido pela diretiva InitRef e pelo identificador\n    // \"OmniNameService\" no arquivo omniORB.cfg\n    CORBA::Object_var obj1 = orb->resolve_initial_references( \"OmniNameService\" );\n    assert( !CORBA::is_nil( obj1.in() ) );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    // (3) Vincular com o serviço de nomes\n    // o serviço é definido pela diretiva InitRef e pelo identificador\n    // \"OmniNameService\" no arquivo omniORB.cfg\n    CORBA::Object_var obj1 = orb->resolve_initial_references( \"OmniNameService\" );\n    assert( !CORBA::is_nil( obj1.in() ) );\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"    CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj1.in() );\n    assert( !CORBA::is_nil( nc.in() ) );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj1.in() );\n    assert( !CORBA::is_nil( nc.in() ) );\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"    CosNaming::Name name;\n    name.length( 1 );\n    name[0].id = CORBA::string_dup( \"DataServiceName1\" );\n    nc->rebind( name, SA_obj.in() );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    CosNaming::Name name;\n    name.length( 1 );\n    name[0].id = CORBA::string_dup( \"DataServiceName1\" );\n    nc->rebind( name, SA_obj.in() );\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"    //========================================================================\n    myRequestServiceA->_remove_ref();\n    //\n    PortableServer::POAManager_var pmgr = _poa->the_POAManager();\n    pmgr->activate();\n    // (4) Iniciar o servidor de objetos para aceitar requisições dos clientes\n    orb->run();\n    //\n    // Se o ORB deixar o loop de tratamento de eventos\n    // Atualmente está configurado para nunca dar timeout\n    orb->destroy();\n    //\n    free( name[0].id ); // str_dup realiza um malloc internamente\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"    //========================================================================\n    myRequestServiceA->_remove_ref();\n    //\n    PortableServer::POAManager_var pmgr = _poa->the_POAManager();\n    pmgr->activate();\n    // (4) Iniciar o servidor de objetos para aceitar requisições dos clientes\n    orb->run();\n    //\n    // Se o ORB deixar o loop de tratamento de eventos\n    // Atualmente está configurado para nunca dar timeout\n    orb->destroy();\n    //\n    free( name[0].id ); // str_dup realiza um malloc internamente\n  }\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tratar as exceções:"}]},{"type":"element","tag":"code","props":{"code":"  catch( CORBA::TRANSIENT & ) {\n    cerr << \"Caught system exception TRANSIENT -- unable to contact the server.\" << endl;\n  }\n  catch( CORBA::OBJECT_NOT_EXIST & ) {\n    cerr << \"Caught system exception OBJECT_NOT_EXIST\" << endl;\n  }\n  catch( CORBA::SystemException & ) {\n    cerr << \"Caught CORBA::SystemException.\" << endl;\n  }\n  catch( CORBA::Exception & ) {\n    cerr << \"Caught CORBA::Exception.\" << endl;\n  }\n  catch( omniORB::fatalException &fe ) {\n    cerr << \"Caught omniORB::fatalException:\" << endl;\n    cerr << \"  file: \" << fe.file() << endl;\n    cerr << \"  line: \" << fe.line() << endl;\n    cerr << \"  mesg: \" << fe.errmsg() << endl;\n  }\n  catch( ... ) {\n    cerr << \"Caught unknown exception.\" << endl;\n  }\n\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  catch( CORBA::TRANSIENT & ) {\n    cerr << \"Caught system exception TRANSIENT -- unable to contact the server.\" << endl;\n  }\n  catch( CORBA::OBJECT_NOT_EXIST & ) {\n    cerr << \"Caught system exception OBJECT_NOT_EXIST\" << endl;\n  }\n  catch( CORBA::SystemException & ) {\n    cerr << \"Caught CORBA::SystemException.\" << endl;\n  }\n  catch( CORBA::Exception & ) {\n    cerr << \"Caught CORBA::Exception.\" << endl;\n  }\n  catch( omniORB::fatalException &fe ) {\n    cerr << \"Caught omniORB::fatalException:\" << endl;\n    cerr << \"  file: \" << fe.file() << endl;\n    cerr << \"  line: \" << fe.line() << endl;\n    cerr << \"  mesg: \" << fe.errmsg() << endl;\n  }\n  catch( ... ) {\n    cerr << \"Caught unknown exception.\" << endl;\n  }\n\n  return 0;\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"implementação-do-servant"},"children":[{"type":"text","value":"Implementação do Servant"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"São denotados pelo sufixo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"_i"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"cservicea_ihh"},"children":[{"type":"text","value":"CServiceA_i.hh"}]},{"type":"element","tag":"code","props":{"code":"// CServiceA_i.hh\n#include \"Data.hh\"\n\nclass CServiceA_i : public POA_Data::ServiceA, public PortableServer::RefCountServantBase {\npublic:\n  CServiceA_i();\n  virtual ~CServiceA_i();\n  virtual CORBA::Boolean CallServiceARoutineA(\n    /*in*/    CORBA::Long num1,\n    /*inout*/ CORBA::Long &num2,\n    /*out*/   CORBA::Long &retNum );\n  virtual CORBA::Boolean CallServiceARoutineB(\n    /*inout*/ CORBA::Long &num1,\n    /*inout*/ CORBA::Long &num2 );\n};\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// CServiceA_i.hh\n#include \"Data.hh\"\n\nclass CServiceA_i : public POA_Data::ServiceA, public PortableServer::RefCountServantBase {\npublic:\n  CServiceA_i();\n  virtual ~CServiceA_i();\n  virtual CORBA::Boolean CallServiceARoutineA(\n    /*in*/    CORBA::Long num1,\n    /*inout*/ CORBA::Long &num2,\n    /*out*/   CORBA::Long &retNum );\n  virtual CORBA::Boolean CallServiceARoutineB(\n    /*inout*/ CORBA::Long &num1,\n    /*inout*/ CORBA::Long &num2 );\n};\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"cservicea_icc"},"children":[{"type":"text","value":"CServiceA_i.cc"}]},{"type":"element","tag":"code","props":{"code":"// CServiceA.cc\n\n#include <fstream>\n#include <iostream>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <sys/types.h>\n#include <unistd.h>\n#include <vector>\n\n#include \"CServiceA_i.hh\"\n\nusing namespace Data;\n\n#include <sys/wait.h>\n\nCServiceA_i::CServiceA_i() { }\n\nCServiceA_i::~CServiceA_i( void ) { }\n\nCORBA::Boolean CallServiceARoutineA(\n    /*in*/    CORBA::Long num1,\n    /*inout*/ CORBA::Long &num2,\n    /*out*/   CORBA::Long &retNum )\n{\n  num2   = num2 + num1;\n  retNum = 10;\n  return true;\n}\n\nCORBA::Boolean CallServiceARoutineB(\n    /*inout*/ CORBA::Long &num1,\n    /*inout*/ CORBA::Long &num2 )\n{\n  num1++;\n  num2++;\n  return true;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// CServiceA.cc\n\n#include <fstream>\n#include <iostream>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <sys/types.h>\n#include <unistd.h>\n#include <vector>\n\n#include \"CServiceA_i.hh\"\n\nusing namespace Data;\n\n#include <sys/wait.h>\n\nCServiceA_i::CServiceA_i() { }\n\nCServiceA_i::~CServiceA_i( void ) { }\n\nCORBA::Boolean CallServiceARoutineA(\n    /*in*/    CORBA::Long num1,\n    /*inout*/ CORBA::Long &num2,\n    /*out*/   CORBA::Long &retNum )\n{\n  num2   = num2 + num1;\n  retNum = 10;\n  return true;\n}\n\nCORBA::Boolean CallServiceARoutineB(\n    /*inout*/ CORBA::Long &num1,\n    /*inout*/ CORBA::Long &num2 )\n{\n  num1++;\n  num2++;\n  return true;\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"cliente-corba"},"children":[{"type":"text","value":"Cliente CORBA"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"< img src=\"/img/corba-client.png\" alt=\"Cliente CORBA\">"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"clientcc"},"children":[{"type":"text","value":"Client.cc"}]},{"type":"element","tag":"code","props":{"code":"// Client.cc\n#include \"CRequestServiceA.hh\"\n\nint main( int argc, char **argv )\n{\n  // O construtor estabelece o link como o servidor CORBA.\n  CRequestServiceA requestServiceA;\n\n  if( requestServiceA.RequestServiceARoutineA() ) {\n    cout << \"ServiceA RoutineA: True\" << endl;\n  }\n  if( requestServiceA.RequestServiceARoutineB() ) {\n    cout << \"ServiceA RoutineB: True\" << endl;\n  }\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Client.cc\n#include \"CRequestServiceA.hh\"\n\nint main( int argc, char **argv )\n{\n  // O construtor estabelece o link como o servidor CORBA.\n  CRequestServiceA requestServiceA;\n\n  if( requestServiceA.RequestServiceARoutineA() ) {\n    cout << \"ServiceA RoutineA: True\" << endl;\n  }\n  if( requestServiceA.RequestServiceARoutineB() ) {\n    cout << \"ServiceA RoutineB: True\" << endl;\n  }\n  return 0;\n}\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"crrquestserviceahh"},"children":[{"type":"text","value":"CRrquestServiceA.hh"}]},{"type":"element","tag":"code","props":{"code":"// CRrquestServiceA.hh\n#include \"Data.hh\"\n#include <cassert>\n#include <fstream>\n#include <iostream>\n\nusing namespace std;\n\nclass CRequestServiceA {\npublic:\n  CRequestServiceA();\n  ~CRequestServiceA();\n  bool RequestServiceARoutineA();\n  bool RequestServiceARoutineB();\n\n  CosNaming::Name m_corbaCosName;\n\n  // CORBA ORB\n  CORBA::ORB_var m_orb;\n\n  CORBA::Object_var m_obj;  // ORB Object\n  CORBA::Object_var m_obj1; // Resolved id to object reference\n\n  // Resolved and narrowed CORBA object for proxy calls\n  Data::ServiceA_var m_Data;\n};\n\nclass DS_ServerConnectionException {\npublic:\n  DS_ServerConnectionException()\n  {\n    cerr << \"CORBA COMM_FAILURE\" << endl;\n  };\n};\n\nclass DS_SystemException {\npublic:\n  DS_SystemException()\n  {\n    cerr << \"CORBA Exception\" << endl;\n  };\n};\n\nclass DS_FatalException {\npublic:\n  DS_FatalException()\n  {\n    cerr << \"CORBA Fatal Exception\" << endl;\n  };\n};\n\nclass DS_Exception {\npublic:\n  DS_Exception()\n  {\n    cerr << \"Exception\" << endl;\n  };\n};\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// CRrquestServiceA.hh\n#include \"Data.hh\"\n#include <cassert>\n#include <fstream>\n#include <iostream>\n\nusing namespace std;\n\nclass CRequestServiceA {\npublic:\n  CRequestServiceA();\n  ~CRequestServiceA();\n  bool RequestServiceARoutineA();\n  bool RequestServiceARoutineB();\n\n  CosNaming::Name m_corbaCosName;\n\n  // CORBA ORB\n  CORBA::ORB_var m_orb;\n\n  CORBA::Object_var m_obj;  // ORB Object\n  CORBA::Object_var m_obj1; // Resolved id to object reference\n\n  // Resolved and narrowed CORBA object for proxy calls\n  Data::ServiceA_var m_Data;\n};\n\nclass DS_ServerConnectionException {\npublic:\n  DS_ServerConnectionException()\n  {\n    cerr << \"CORBA COMM_FAILURE\" << endl;\n  };\n};\n\nclass DS_SystemException {\npublic:\n  DS_SystemException()\n  {\n    cerr << \"CORBA Exception\" << endl;\n  };\n};\n\nclass DS_FatalException {\npublic:\n  DS_FatalException()\n  {\n    cerr << \"CORBA Fatal Exception\" << endl;\n  };\n};\n\nclass DS_Exception {\npublic:\n  DS_Exception()\n  {\n    cerr << \"Exception\" << endl;\n  };\n};\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"crequestserviceacc"},"children":[{"type":"text","value":"CRequestServiceA.cc"}]},{"type":"element","tag":"code","props":{"code":"// CRequestServiceA.cc\n\n#include \"CRequestServiceA.hh\"\nusing namespace Data;\n\nCRequestServiceA::CRequestServiceA()\n{\n  try {\n    // Inicia o objeto ORB\n    int            argc = 0; // Variáveis dummy.\n    char **        argv = 0;\n    CORBA::ORB_var orb  = CORBA::ORB_init( argc, argv );\n\n    // Vincula o objeto ORB ao servidor de nome\n    // Deve ser o mesmo nome definido em /etc/omniORB.cfg\n    CORBA::Object_var obj = orb->resolve_initial_references( \"OmniNameService\" );\n    assert( !CORBA::is_nil( obj.in() ) );\n\n    CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj.in() );\n    assert( !CORBA::is_nil( nc.in() ) );\n\n    CosNaming::Name _corbaCosName;\n    _corbaCosName.length( 1 );\n    _corbaCosName[0].id = CORBA::string_dup( \"DataServiceName1\" );\n\n    CORBA::Object_var obj1 = nc->resolve( _corbaCosName );\n    assert( !CORBA::is_nil( obj1.in() ) );\n\n    m_Data = ServiceA::_narrow( obj1.in() );\n    if( CORBA::is_nil( m_Data.in() ) ) {\n      cerr << \"IOR is not an SA object reference.\" << endl;\n    }\n  }\n  catch( CORBA::COMM_FAILURE &ex ) {\n    cerr << \"Caught system exception COMM_FAILURE -- unable to contact the \"\n         << \"object.\" << endl;\n    throw DS_ServerConnectionException();\n    return;\n  }\n  catch( CORBA::SystemException & ) {\n    cerr << \"Caught a CORBA::SystemException.\" << endl;\n    throw DS_SystemException();\n    return;\n  }\n  catch( CORBA::Exception & ) {\n    cerr << \"Caught CORBA::Exception.\" << endl;\n    throw DS_Exception();\n    return;\n  }\n  catch( omniORB::fatalException &fe ) {\n    cerr << \"Caught omniORB::fatalException:\" << endl;\n    cerr << \"  file: \" << fe.file() << endl;\n    cerr << \"  line: \" << fe.line() << endl;\n    cerr << \"  mesg: \" << fe.errmsg() << endl;\n    throw DS_FatalException();\n    return;\n  }\n  catch( ... ) {\n    cerr << \"Caught unknown exception.\" << endl;\n    throw DS_Exception();\n    return;\n  }\n  return;\n}\n\nCRequestServiceA::~CRequestServiceA()\n{\n  // ...\n}\n\nbool CRequestServiceA::RequestServiceARoutineA()\n{\n  CORBA::Long num1 = 4;\n  CORBA::Long num2 = 5;\n  CORBA::Long retNum;\n\n  cout << \"Valores de entrada para a rotina A do serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;\n\n  // Esta chamada CORBA será executada remotamente\n  if( m_Data->CallServiceRoutineA( num1, num2, retNum ) ) {\n    cout << \"Valores retornados pelo serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;\n    return true;\n  }\n  return false;\n}\n\nbool CRequestServiceA::RequestServiceARoutineB()\n{\n  CORBA::Long num1 = 0;\n  CORBA::Long num2 = 50;\n\n  cout << \"Valores de entrada para a rotina B do serviço A: \" << num1 << \" \" << num2 << endl;\n\n  // Esta chamada CORBA será executada remotamente\n  if( m_Data->CallServiceRoutineB( num1, num2 ) ) {\n    cout << \"Valores retornados pelo serviço B: \" << num1 << \" \" << num2 << endl;\n    return true;\n  }\n  return false;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// CRequestServiceA.cc\n\n#include \"CRequestServiceA.hh\"\nusing namespace Data;\n\nCRequestServiceA::CRequestServiceA()\n{\n  try {\n    // Inicia o objeto ORB\n    int            argc = 0; // Variáveis dummy.\n    char **        argv = 0;\n    CORBA::ORB_var orb  = CORBA::ORB_init( argc, argv );\n\n    // Vincula o objeto ORB ao servidor de nome\n    // Deve ser o mesmo nome definido em /etc/omniORB.cfg\n    CORBA::Object_var obj = orb->resolve_initial_references( \"OmniNameService\" );\n    assert( !CORBA::is_nil( obj.in() ) );\n\n    CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj.in() );\n    assert( !CORBA::is_nil( nc.in() ) );\n\n    CosNaming::Name _corbaCosName;\n    _corbaCosName.length( 1 );\n    _corbaCosName[0].id = CORBA::string_dup( \"DataServiceName1\" );\n\n    CORBA::Object_var obj1 = nc->resolve( _corbaCosName );\n    assert( !CORBA::is_nil( obj1.in() ) );\n\n    m_Data = ServiceA::_narrow( obj1.in() );\n    if( CORBA::is_nil( m_Data.in() ) ) {\n      cerr << \"IOR is not an SA object reference.\" << endl;\n    }\n  }\n  catch( CORBA::COMM_FAILURE &ex ) {\n    cerr << \"Caught system exception COMM_FAILURE -- unable to contact the \"\n         << \"object.\" << endl;\n    throw DS_ServerConnectionException();\n    return;\n  }\n  catch( CORBA::SystemException & ) {\n    cerr << \"Caught a CORBA::SystemException.\" << endl;\n    throw DS_SystemException();\n    return;\n  }\n  catch( CORBA::Exception & ) {\n    cerr << \"Caught CORBA::Exception.\" << endl;\n    throw DS_Exception();\n    return;\n  }\n  catch( omniORB::fatalException &fe ) {\n    cerr << \"Caught omniORB::fatalException:\" << endl;\n    cerr << \"  file: \" << fe.file() << endl;\n    cerr << \"  line: \" << fe.line() << endl;\n    cerr << \"  mesg: \" << fe.errmsg() << endl;\n    throw DS_FatalException();\n    return;\n  }\n  catch( ... ) {\n    cerr << \"Caught unknown exception.\" << endl;\n    throw DS_Exception();\n    return;\n  }\n  return;\n}\n\nCRequestServiceA::~CRequestServiceA()\n{\n  // ...\n}\n\nbool CRequestServiceA::RequestServiceARoutineA()\n{\n  CORBA::Long num1 = 4;\n  CORBA::Long num2 = 5;\n  CORBA::Long retNum;\n\n  cout << \"Valores de entrada para a rotina A do serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;\n\n  // Esta chamada CORBA será executada remotamente\n  if( m_Data->CallServiceRoutineA( num1, num2, retNum ) ) {\n    cout << \"Valores retornados pelo serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;\n    return true;\n  }\n  return false;\n}\n\nbool CRequestServiceA::RequestServiceARoutineB()\n{\n  CORBA::Long num1 = 0;\n  CORBA::Long num2 = 50;\n\n  cout << \"Valores de entrada para a rotina B do serviço A: \" << num1 << \" \" << num2 << endl;\n\n  // Esta chamada CORBA será executada remotamente\n  if( m_Data->CallServiceRoutineB( num1, num2 ) ) {\n    cout << \"Valores retornados pelo serviço B: \" << num1 << \" \" << num2 << endl;\n    return true;\n  }\n  return false;\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"makefile"},"children":[{"type":"text","value":"Makefile"}]},{"type":"element","tag":"code","props":{"code":"# Makefile\nLDFLAGS+=-lomniORB4 -lomnithread -lomniDynamic4\nCXXFLAGS+=-Wall\n\nall: server client\n\nserver: DataSK.o CServiceA_i.o Server.o\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nclient: DataSK.o Client.o CRequestServiceA.o\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nclean:\n    rm -f *.o\n    rm -f server\n    rm -f client\n","language":"makefile"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# Makefile\nLDFLAGS+=-lomniORB4 -lomnithread -lomniDynamic4\nCXXFLAGS+=-Wall\n\nall: server client\n\nserver: DataSK.o CServiceA_i.o Server.o\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nclient: DataSK.o Client.o CRequestServiceA.o\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nclean:\n    rm -f *.o\n    rm -f server\n    rm -f client\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is the value of CORBA. This is why we use CORBA. Look at how simple the program looks. The constructor establishes the link with the CORBA server. The subsequent calls to Routine A and B are processed remotely on the CORBA server but called like any other local function call."}]},{"type":"element","tag":"h2","props":{"id":"todo"},"children":[{"type":"text","value":"Todo"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.grisby.org/presentations/py10tut.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.grisby.org/presentations/py10tut.pdf"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.grisby.org/presentations/CORBAControls2002.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.grisby.org/presentations/CORBAControls2002.pdf"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://xennis.org/wiki/CORBA","rel":["nofollow"]},"children":[{"type":"text","value":"https://xennis.org/wiki/CORBA"}]},{"type":"text","value":" <- tutorial que parece muito interessante"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.mario-konrad.ch/blog/programming/connect_orbs.html","rel":["nofollow"]},"children":[{"type":"text","value":"http://www.mario-konrad.ch/blog/programming/connect_orbs.html"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/cd/E13203_01/tuxedo/tux100/pdf/naming.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://docs.oracle.com/cd/E13203_01/tuxedo/tux100/pdf/naming.pdf"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.cse.iitb.ac.in/~rkj/talks/corba-tutorial.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"Introduction to Distributed Computing using CORBA"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.yolinux.com/TUTORIALS/CORBA.html","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA, C++ and Linux"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.cin.ufpe.br/~cagf/sdgrad/aulas/POA+GIOP.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"O Adaptador de Objetos e Interoperabilidade CORBA"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.mario-konrad.ch/blog/programming/connect_orbs.html","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA Tutorial: Connecting 3 ORBs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.grisby.org/presentations/accu2003.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA? Isn’ t that Obsolete ?"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/omniidl.html"},"children":[{"type":"text","value":"The omniORB IDL Compiler"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/omniNames.html"},"children":[{"type":"text","value":"The omniNames CORBA Naming Service"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/omnithread.html"},"children":[{"type":"text","value":"The OMNI Thread Abstraction"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/utilities.html"},"children":[{"type":"text","value":"The omniORB utilities"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/omniORB/index.html"},"children":[{"type":"text","value":"The omniORB version 4.2 Users’ Guide"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/cd/E13211_01/wle/cref/member.htm","rel":["nofollow"]},"children":[{"type":"text","value":"Mapping of OMG IDL Statements to C++"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.cs.rpi.edu/~musser/dsc/idl/idl-overview_5.html","rel":["nofollow"]},"children":[{"type":"text","value":"Raising Exceptions in IDL Operations"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.ime.usp.br/~reverbel/SMW-07/Slides/POA.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"O Portable Object Adapter"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://erlang.org/documentation/doc-5.7/lib/orber-3.6.11/doc/html/ch_exceptions.html","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA System and User Defined Exceptions"}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"\nmjx-container[jax=\"SVG\"] {\n  direction: ltr;\n}\n\nmjx-container[jax=\"SVG\"] > svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=\"SVG\"] > svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"][width=\"full\"] {\n  display: flex;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"left\"] {\n  text-align: left;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"right\"] {\n  text-align: right;\n}\n\ng[data-mml-node=\"merror\"] > g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=\"merror\"] > rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=\"mtable\"] > g > svg {\n  overflow: visible;\n}\n\n[jax=\"SVG\"] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=\"SVG\"] mjx-tool > mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool > mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=\"maction\"][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=\"SVG\"] path[data-c], mjx-container[jax=\"SVG\"] use[data-c] {\n  stroke-width: 3;\n}\n"}]}]},"date":"2019-12-27T00:00:00.000Z","lastmod":"2019-12-29T00:00:00.000Z","draft":false,"tags":["corba","IDL","C++","Python"],"math":true,"Thumbnail":"img/headers/corba.webp","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introdução"},"children":[{"type":"text","value":"Introdução"}]},{"type":"element","tag":"h3","props":{"id":"o-que-é-corba"},"children":[{"type":"text","value":"O que é CORBA?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é o acrônimo para "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Common Object Request Broker Architecture"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é um framework para construção de sistemas distribuídos orientados a objetos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é multiplataforma"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é independente de linguagem"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é um padrão aberto e extensível definido pela "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Object Management Group"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"clientes e servidores estão em diferentes máquinas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"programas clientes enviam mensagens para servidores remotos como se este estivesse locais ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"location transparency"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h3","props":{"id":"o-que-é-a-omg"},"children":[{"type":"text","value":"O que é a OMG?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.omg.org","rel":["nofollow"]},"children":[{"type":"text","value":"www.omg.org"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"fundada em 1989"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"somente provê especificações"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não provê implementações"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"todas as especificações são free"}]}]},{"type":"element","tag":"h3","props":{"id":"corba-vs-soapxml-rpc"},"children":[{"type":"text","value":"CORBA vs SOAP/XML-RPC"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"SOAP"}]},{"type":"text","value":" e "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"XML-RPC"}]},{"type":"text","value":" são protocolos wire"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"CORBA"}]},{"type":"text","value":" inclui:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"um protocolo wire"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"GIOP"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"object model"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IDL"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"mapeamento de linguagem"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"serviços"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"códigos de cliente e servidor portáveis  entre implementações CORBA"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"corba-é-pesado"},"children":[{"type":"text","value":"CORBA é pesado?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uma arquitetura mínima requer algumas dezenas de kB (segundo "},{"type":"element","tag":"a","props":{"href":"https://www.grisby.org/presentations/accu2003.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA? Isn’ t that Obsolete ?"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h2","props":{"id":"orb---object-request-broker"},"children":[{"type":"text","value":"ORB - Object Request Broker"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é o núcleo da "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Object Management Architecture"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"integra:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"diferentes linguagens"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"diferentes arquiteturas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"diferentes sistemas operacionais"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é responsável por:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"encontrar uma implementação para uma requisição"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"preparar implementações para receber requisições"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"comunicar dados das requisições"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"clientes"},"children":[{"type":"text","value":"Clientes"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"possuem referências para objetos e invocam operações nestes objetos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"conhecem apenas a interface dos objetos do servidor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não conhecem a implementação dos objetos nem os adaptadores utilizados por estas implementações"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"invocam interfaces definidas por uma IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"invocam as implementações através de:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"proxies ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"IDL generated stubs"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DII ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Dynamic Invocation Interface"}]},{"type":"text","value":")"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"servidores"},"children":[{"type":"text","value":"Servidores"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"se registram no ORB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"se disponibilizam para aceitar requisições"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"implementam uma IDL"}]}]},{"type":"element","tag":"h2","props":{"id":"idl"},"children":[{"type":"text","value":"IDL"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"provê interfaces independente de linguagem e sistema operacional"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é puramente declarativa (não provê detalhes de implementação)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"é fortemente tipada"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"especificações podem ser escritas e invocadas em qualquer linguagem"}]}]},{"type":"element","tag":"h3","props":{"id":"idl-features"},"children":[{"type":"text","value":"IDL Features"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"modules"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"interfaces"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"operations"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"attributes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"inheritance"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"basic types"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"arrays"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sequences"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"struct, enum, union"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"typedef"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"consts"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"exceptions"}]}]},{"type":"element","tag":"h3","props":{"id":"tipos-básicos"},"children":[{"type":"text","value":"Tipos básicos"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"float"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"long"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"short"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"unsigned long"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"unsigned short"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"char"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"octet"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"any"}]}]},{"type":"element","tag":"h3","props":{"id":"direções-dos-parâmetros"},"children":[{"type":"text","value":"Direções dos parâmetros"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" - do cliente para o servidor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"out"}]},{"type":"text","value":" - do servidor para o cliente"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"inout"}]},{"type":"text","value":" - do cliente para o servidor e de volta para o cliente"}]}]},{"type":"element","tag":"h3","props":{"id":"exceções"},"children":[{"type":"text","value":"Exceções"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CORBA define dois tipos de exceções:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"system exceptions"}]},{"type":"text","value":": exceções padrões definidas pelo CORBA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"user defined exceptions"}]},{"type":"text","value":": exceções definidas pelo usuário através da IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Implicitamente, todas as operações definidas na IDL podem lançar qualquer uma das exceções padrão do sistema CORBA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Nenhuma referência para exceções padrão devem aparecer na especificação da IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"para especificar que uma operação "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"pode"}]},{"type":"text","value":" lançar uma exceção definida pelo usuário você deve:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"primeiro definir a estrutura da exceção"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"incluir "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"raises"}]},{"type":"text","value":" à definição da operação"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uma exceção da IDL pode conter membros"}]}]},{"type":"element","tag":"code","props":{"code":"Interface Bank {\n  exception Reject {\n    string reason; // membro da exceção\n  };\n  exception TooMany {}; // exceção sem membros\n\n  Account newAccount( in string name ) raises (Reject, TooMany);\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Interface Bank {\n  exception Reject {\n    string reason; // membro da exceção\n  };\n  exception TooMany {}; // exceção sem membros\n\n  Account newAccount( in string name ) raises (Reject, TooMany);\n};"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"operações-oneway"},"children":[{"type":"text","value":"Operações oneway"}]},{"type":"element","tag":"code","props":{"code":"Interface Account {\n  oneway void notice( in string notice );\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Interface Account {\n  oneway void notice( in string notice );\n};"}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não bloqueantes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não aceitam parâmetros "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"out"}]},{"type":"text","value":" ou "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"inout"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"não lançam exceções (não aceitam "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"raise"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The OMG CORBA specification defines the following exceptions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_CONTEXT"}]},{"type":"text","value":" - if a request does not contain a correct context this exception is raised."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_INV_ORDER"}]},{"type":"text","value":" - this exception indicates that operations has been invoked operations in the wrong order, which would cause, for example, a dead-lock."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_OPERATION"}]},{"type":"text","value":" - raised if the target object exists, but that the invoked operation is not supported."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_PARAM"}]},{"type":"text","value":" - is thrown if, for example, a parameter is out of range or otherwise considered illegal."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_TYPECODE"}]},{"type":"text","value":" - if illegal type code is passed, for example, encapsulated in an any data type the 'BAD_TYPECODE' exception will be raised."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BAD_QOS"}]},{"type":"text","value":" - raised whenever an object cannot support the required quality of service."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"CODESET_INCOMPATIBLE"}]},{"type":"text","value":" - raised if two ORB's cannot communicate due to different representation of, for example, char and/or wchar."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"COMM_FAILURE"}]},{"type":"text","value":" - raised if an ORB is unable to setup communication or it is lost while an operation is in progress."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"DATA_CONVERSION"}]},{"type":"text","value":" - raised if an ORB cannot convert data received to the native representation. See also the 'CODESET_INCOMPATIBLE' exception."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"FREE_MEM"}]},{"type":"text","value":" - the ORB failed to free dynamic memory and failed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IMP_LIMIT"}]},{"type":"text","value":" - an implementation limit was exceeded in the ORB at run time. A object factory may, for example, limit the number of object clients are allowed to create."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INTERNAL"}]},{"type":"text","value":" - an internal failure occurred in an ORB, which is unrecognized. You may consider contacting the ORB providers support."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INTF_REPOS"}]},{"type":"text","value":" - the ORB was not able to reach the interface repository, or some other failure relating to the interface repository is detected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INITIALIZE"}]},{"type":"text","value":" - the ORB initialization failed due to, for example, network or configuration error."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INVALID_TRANSACTION"}]},{"type":"text","value":" - is raised if the request carried an invalid transaction context."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INV_FLAG"}]},{"type":"text","value":" - an invalid flag was passed to an operation, which caused, for example, a connection to be closed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INV_IDENT"}]},{"type":"text","value":" - this exception indicates that an IDL identifier is incorrect."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INV_OBJREF"}]},{"type":"text","value":" - this exception is raised if an objet reference is malformed or a nil reference (see also corba:create_nil_objref/0)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"INV_POLICY"}]},{"type":"text","value":" - the invocation cannot be made due to an incompatibility between policy overrides that apply to the particular invocation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"MARSHAL"}]},{"type":"text","value":" - this exception may be raised by the client- or server-side when either ORB is unable to marshal/unmarshal requests or replies."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_IMPLEMENT"}]},{"type":"text","value":" - if the operation exists but no implementation exists, this exception is raised."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_MEMORY"}]},{"type":"text","value":" - the ORB has run out of memory."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_PERMISSION"}]},{"type":"text","value":" - the caller has insufficient privileges, such as, for example, bad SSL certificate."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_RESOURCES"}]},{"type":"text","value":" - a general platform resource limit exceeded."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NO_RESPONSE"}]},{"type":"text","value":" - no response available of a deferred synchronous request."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"OBJ_ADAPTER"}]},{"type":"text","value":" - indicates administrative mismatch; the object adapter is not able to associate an object with the implementation repository."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"OBJECT_NOT_EXIST"}]},{"type":"text","value":" - the object have been disposed or terminated; clients should remove all copies of the object reference and initiate desired recovery process."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"PERSIST_STORE"}]},{"type":"text","value":" - the ORB was not able to establish a connection to its persistent storage or data contained in the the storage is corrupted."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"REBIND"}]},{"type":"text","value":" - a request resulted in, for example, a 'LOCATION_FORWARD' message; if the policies are incompatible this exception is raised."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TIMEOUT"}]},{"type":"text","value":" - raised if a request fail to complete within the given time-limit."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSACTION_MODE"}]},{"type":"text","value":" - a transaction policy mismatch detected."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSACTION_REQUIRED"}]},{"type":"text","value":" - a transaction is required for the invoked operation but the request contained no transaction context."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSACTION_ROLLEDBACK"}]},{"type":"text","value":" - the transaction associated with the request has already been rolled back or will be."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSACTION_UNAVAILABLE"}]},{"type":"text","value":" - no transaction context can be supplied since the ORB is unable to contact the Transaction Service."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TRANSIENT"}]},{"type":"text","value":" - the ORB could not determine the current status of an object since it could not be reached. The error may be temporary."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"UNKNOWN"}]},{"type":"text","value":" - is thrown if an implementation throws a non-CORBA, or unrecognized, exception."}]}]},{"type":"element","tag":"h3","props":{"id":"estruturas"},"children":[{"type":"text","value":"Estruturas"}]},{"type":"element","tag":"code","props":{"code":"struct PersonalDetails {\n  string name;\n  short age;\n};\n\ninterface Bank {\n  PersonalDetails getPerDet(in string name);\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"struct PersonalDetails {\n  string name;\n  short age;\n};\n\ninterface Bank {\n  PersonalDetails getPerDet(in string name);\n};"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"arrays"},"children":[{"type":"text","value":"Arrays"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"podem ser multidimensionais"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"precisam ter tamanho fixo ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"conhecido em tempo de definição"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"code","props":{"code":"Account bankAccounts[100];\nshort matrix[10][20]; // 2D array\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Account bankAccounts[100];\nshort matrix[10][20]; // 2D array"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"constantes"},"children":[{"type":"text","value":"Constantes"}]},{"type":"element","tag":"code","props":{"code":"Interface Bank {\n  const long MaxAccounts = 10000;\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Interface Bank {\n  const long MaxAccounts = 10000;\n};"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Contantes dos tipos "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"long"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"float"}]},{"type":"text","value":" e "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"string"}]},{"type":"text","value":" podem ser declarada."}]},{"type":"element","tag":"h3","props":{"id":"typedef"},"children":[{"type":"text","value":"Typedef"}]},{"type":"element","tag":"code","props":{"code":"typedef short size;\nsize i;\n\ntypedef Account Accounts[100]; // acho que está invertido aqui\nAccounts bankAccounts;\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"typedef short size;\nsize i;\n\ntypedef Account Accounts[100]; // acho que está invertido aqui\nAccounts bankAccounts;"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"módulos"},"children":[{"type":"text","value":"Módulos"}]},{"type":"element","tag":"code","props":{"code":"Module Finance {\n  interface Bank { ... };\n  interface Account { ... };\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Module Finance {\n  interface Bank { ... };\n  interface Account { ... };\n};"}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"são usados para agrupar interfaces em unidades lógicas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"utilize nomes completos (p.e. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Finance::Account *a;"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h3","props":{"id":"preprocessador"},"children":[{"type":"text","value":"Preprocessador"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"baseado no preprocessador do C++"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"substituição de macro"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"compilação condicional"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"inclusão de IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#include"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#define"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#if"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#ifdef"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#defined"}]}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-para-linguagem"},"children":[{"type":"text","value":"Mapeamento para linguagem"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"linguagens "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"OO"}]},{"type":"text","value":" e "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"non-OO"}]},{"type":"text","value":" acessam de modos diferentes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"tipos específicos da linguagem"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"estrutura do "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"stub"}]},{"type":"text","value":" cliente (somente para "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"non-OO"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"interface de invocação dinâmica"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"esqueleto de implementação"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"adaptadores de objeto"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"interface direta ao ORB"}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-de-identificadores"},"children":[{"type":"text","value":"Mapeamento de identificadores"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"usa o mesmo nome"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"se for uma palavra reservada do C++ receberá um "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"_"}]},{"type":"text","value":" como prefixo (p.e. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"_new"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-de-interface"},"children":[{"type":"text","value":"Mapeamento de interface"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"são mapeadas para classes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"uma IDL mapeada para uma classe C++ não pode ser instanciada"}]}]},{"type":"element","tag":"code","props":{"code":"Interface Account { ... }\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Interface Account { ... }"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"será mapeado para:"}]},{"type":"element","tag":"code","props":{"code":"class Account : public virtual CORBA::Object { ... }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"class Account : public virtual CORBA::Object { ... }"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-de-escopo"},"children":[{"type":"text","value":"Mapeamento de escopo"}]},{"type":"element","tag":"h4","props":{"id":"interface-para-classe"},"children":[{"type":"text","value":"Interface para classe"}]},{"type":"element","tag":"code","props":{"code":"Interface Bank {\n  struct Details { ... };\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Interface Bank {\n  struct Details { ... };\n};"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"será mapeado para:"}]},{"type":"element","tag":"code","props":{"code":"class Bank {\n  public:\n    struct Details { ... };\n};\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"class Bank {\n  public:\n    struct Details { ... };\n};"}]}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"module-para-namespace"},"children":[{"type":"text","value":"Module para namespace"}]},{"type":"element","tag":"code","props":{"code":"Module M {\n  Interface A { ... };\n  Interface B { ... };\n};\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Module M {\n  Interface A { ... };\n  Interface B { ... };\n};"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"será mapeado para:"}]},{"type":"element","tag":"code","props":{"code":"namespace M {\n  class A { ... };\n  class B { ... };\n};\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"namespace M {\n  class A { ... };\n  class B { ... };\n};"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Acessíveis via "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"M::A"}]},{"type":"text","value":" e "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"M::B"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-do-módulo-padrão-do-corba"},"children":[{"type":"text","value":"Mapeamento do módulo padrão do CORBA"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Será mapeado para:"}]},{"type":"element","tag":"code","props":{"code":"namespace CORBA { ... }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"namespace CORBA { ... }"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Utilize os membros como:"}]},{"type":"element","tag":"code","props":{"code":"CORBA::ORB_init( ... );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"CORBA::ORB_init( ... );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"mapeamento-de-tipos"},"children":[{"type":"text","value":"Mapeamento de tipos"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"IDL"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"C++"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Tamanho e faixa"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"short"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Short"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"16 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"17.289ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 7641.8 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-35","d":"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-1-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mo"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-1-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(778,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-1-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-1-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-1-TEX-N-35","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2234.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-1-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3629,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-1-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(4629.2,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-1-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-1-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"35","xLinkHref":"#MJX-1-TEX-N-35","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6141.5,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-1-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7141.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-1-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"32 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"17.289ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 7641.8 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-33","d":"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-2-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mo"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-2-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(778,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-2-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-2-TEX-N-33"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-2-TEX-N-31","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2234.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-2-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3629,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-2-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(4629.2,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-2-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-2-TEX-N-33"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-2-TEX-N-31","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6141.5,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-2-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7141.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-2-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"long long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::LongLong"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"64 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"17.62ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 7788.2 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-33","d":"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-2B","d":"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-3-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mo"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-3-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(778,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-3-TEX-N-36"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-3-TEX-N-33","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(2234.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-3-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3629,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2B","xLinkHref":"#MJX-3-TEX-N-2B"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(4629.2,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-3-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(533,363) scale(0.707)"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-3-TEX-N-36"},"children":[]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(5565.8,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-3-TEX-N-33"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(6288,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-3-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(7288.2,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-3-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"unsigned short"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::UShort"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"16 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"11.353ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 5017.9 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-4-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-4-TEX-N-30"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(666.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-4-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(2005.3,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-4-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-4-TEX-N-31"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-4-TEX-N-36","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3517.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-4-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(4517.9,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-4-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"unsigned long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::ULong"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"32 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.186ex;","xmlns":"http://www.w3.org/2000/svg","width":"11.353ex","height":"2.072ex","role":"img","focusable":"false","viewBox":"0 -833.9 5017.9 915.9","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-33","d":"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-2212","d":"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-5-TEX-N-31","d":"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-5-TEX-N-30"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(666.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-5-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(2005.3,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-5-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"33","xLinkHref":"#MJX-5-TEX-N-33"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-5-TEX-N-32","transform":"translate(500,0)"},"children":[]}]}]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(3517.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2212","xLinkHref":"#MJX-5-TEX-N-2212"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mn","transform":"translate(4517.9,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"31","xLinkHref":"#MJX-5-TEX-N-31"},"children":[]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"unsigned long long"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::ULongLong"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"64 bit: "},{"type":"element","tag":"span","props":{"className":["math","math-inline"]},"children":[{"type":"element","tag":"mjx-container","props":{"className":["MathJax"],"jax":"SVG"},"children":[{"type":"element","tag":"svg","props":{"style":"vertical-align: -0.05ex;","xmlns":"http://www.w3.org/2000/svg","width":"7.456ex","height":"1.954ex","role":"img","focusable":"false","viewBox":"0 -841.7 3295.4 863.7","xmlnsXLink":"http://www.w3.org/1999/xlink"},"children":[{"type":"element","tag":"defs","props":{},"children":[{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-30","d":"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-2026","d":"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-32","d":"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-36","d":"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"},"children":[]},{"type":"element","tag":"path","props":{"id":"MJX-6-TEX-N-34","d":"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"},"children":[]}]},{"type":"element","tag":"g","props":{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","transform":"scale(1,-1)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"math"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"30","xLinkHref":"#MJX-6-TEX-N-30"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"mo","transform":"translate(666.7,0)"},"children":[{"type":"element","tag":"use","props":{"dataC":"2026","xLinkHref":"#MJX-6-TEX-N-2026"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"msup","transform":"translate(2005.3,0)"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"32","xLinkHref":"#MJX-6-TEX-N-32"},"children":[]}]},{"type":"element","tag":"g","props":{"dataMmlNode":"TeXAtom","transform":"translate(533,363) scale(0.707)","dataMjxTexclass":"ORD"},"children":[{"type":"element","tag":"g","props":{"dataMmlNode":"mn"},"children":[{"type":"element","tag":"use","props":{"dataC":"36","xLinkHref":"#MJX-6-TEX-N-36"},"children":[]},{"type":"element","tag":"use","props":{"dataC":"34","xLinkHref":"#MJX-6-TEX-N-34","transform":"translate(500,0)"},"children":[]}]}]}]}]}]}]}]}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"float"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Float"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"32 bit IEEE single precision floating point number"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"double"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Double"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"64 bit IEEE double precision floating point number"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"long double"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::LongDouble"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"--"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"char"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Char"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"8 bit"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"wchar"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::WChar"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"-- (Wide Char)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"string"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::char *"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"--"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"wstring"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::WChar *"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"--"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Boolean"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"true/false"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"octet"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Octet"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"(unsigned char)  8 bit raw. Sem conversão"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"any"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"CORBA::Any"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Arbitrary"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"repositório-de-interfaces"},"children":[{"type":"text","value":"Repositório de interfaces"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"provê armazenamento para informações da IDL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"um programa pode referenciar objetos cuja interface será conhecida em tempo de execução"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"estas informações podem ser usadas pelo ORB para realizar requisições"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pode armazenar outras informações sobre interfaces:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"debugging"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"info"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"browser routines"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"repositório-de-implementação"},"children":[{"type":"text","value":"Repositório de implementação"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"informações que o ORB utiliza para localizar e ativar implementações de um servidor de objetos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"armazena informações de ativação:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"máquina onde um servidor pode ser iniciado a partir de uma requisição do cliente"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"dynamic-invocation-interface"},"children":[{"type":"text","value":"Dynamic Invocation Interface"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Em vez de chamar um stub específico de uma operação, é possível especificar um objeto, operação e parâmetros para através de uma chamada ou sequência de chamadas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"o cliente precisa fornecer os tipos dos parâmetros passados"}]}]},{"type":"element","tag":"h2","props":{"id":"interoperabilidade"},"children":[{"type":"text","value":"Interoperabilidade"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"suporta rede de objetos distribuídos em múltiplos ORBs (heterogêneos)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"InterORBability"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"GIOP"}]},{"type":"text","value":": (General Inter-ORB Protocol) sintaxe padrão de transferência e conjunto de formato de mensagens"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ESIOP: (Environment Specific Inter-ORB Protocol) protocolo especializado"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"IIOP"}]},{"type":"text","value":": mapeamento "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"TCP/IP"}]},{"type":"text","value":" para "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"GIOP"}]}]}]},{"type":"element","tag":"h2","props":{"id":"coss---common-object-service-specification"},"children":[{"type":"text","value":"COSS - Common Object Service Specification"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"naming"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"events"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"life cycle"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"time"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"transactions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"concurrency"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"persistence"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"query"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"security"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"licensing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"relationships"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"properties"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"externalization"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"collection"}]}]},{"type":"element","tag":"h2","props":{"id":"oa---object-adapter"},"children":[{"type":"text","value":"OA - Object Adapter"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Conectam implementações de objetos ao ORB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ativam os múltiplos objetos implementados por um servidor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Encaminhamento de requisições de serviço"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Geram "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"object references"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Para ter o status de "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"CORBA Object"}]},{"type":"text","value":" o objeto deve ser registrado com o adaptador"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"boa---basic-object-adapter"},"children":[{"type":"text","value":"BOA - Basic Object Adapter"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Presente na especificação CORBA até a revisão 2.1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CORBA 2.2 substituiu o BOA pelo POA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ORB com BOA significa que os servidores não são portáveis"}]}]},{"type":"element","tag":"h2","props":{"id":"poa-portable-object-adapter"},"children":[{"type":"text","value":"POA Portable Object Adapter"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"O POA ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Portable Object Adapter"}]},{"type":"text","value":") auxilia o ORB ("},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Object Request Broker"}]},{"type":"text","value":") na\npassagem das requisições do clientes para a implementação do servidor\n(servant)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"O POA interpreta a requisição, empacota a passagem de parâmetros e então\nlocaliza o servant e os tratadores de recuperação erros e de segurança."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Isto habilita portabilidade, independência de fabricantes e extensibilidade\ncompatível com a especificação da OMG (Object Management Group)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"POA também habilita a persistência de objetos bem como dá suporte a ciclo de\nvida do serviço"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Identificadores de objetos automaticamente gerados ou especificados pelo usuário"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ativação explícita ou por demanda"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Relação: um servant <-> um ou mais objetos CORBA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Aplicação tem total controle sobre o comportamento e sobre a existência dos objetos CORBA"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Servants"}]},{"type":"text","value":" podem usar esqueletos estáticos ou dinâmicos"}]}]},{"type":"element","tag":"h3","props":{"id":"identificador-de-objeto"},"children":[{"type":"text","value":"Identificador de Objeto"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Valor usado para identificar um objeto no contexto de um POA"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Não é um identificador globalmente único!"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pode ser determinado pela aplicação ou gerado pelo POA"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"typedef sequence<octet> ObjectID;"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"O POA coloca esse valor no campo "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"object id"}]},{"type":"text","value":" da IOR"}]}]},{"type":"element","tag":"h3","props":{"id":"o-campo-object-id-da-ior"},"children":[{"type":"text","value":"O Campo Object Id da IOR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"/img/corba-ior-object-id.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"instalação-do-omniorb-no-debian"},"children":[{"type":"text","value":"Instalação do omniORB no Debian"}]},{"type":"element","tag":"code","props":{"code":"apt install libomniorb4-dev omniidl omniorb omniorb-doc omniorb-nameserver omniidl-python python-omniorb\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb5b15"},"children":[{"type":"text","value":"apt install libomniorb4-dev omniidl omniorb omniorb-doc omniorb-nameserver omniidl-python python-omniorb"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"iniciar-o-servidor-de-nomes"},"children":[{"type":"text","value":"Iniciar o servidor de nomes"}]},{"type":"element","tag":"h3","props":{"id":"omniorb"},"children":[{"type":"text","value":"OmniORB"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Incluir no arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/omniORB.cfg"}]},{"type":"text","value":" a seguinte linha:"}]},{"type":"element","tag":"code","props":{"code":"InitRef = OmniNameService=corbaname::localhost\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"InitRef = OmniNameService=corbaname::localhost"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% note %"},"children":[]},{"type":"text","value":"\nO nome "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"OmniNameService"}]},{"type":"text","value":" deve ser conhecido pelo "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"servidor"}]},{"type":"text","value":" e pelo "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"cliente"}]},{"type":"text","value":".\n"},{"type":"element","tag":"binding","props":{"value":"% /note %"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para iniciar o servidor de nomes do "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"OmniORB"}]},{"type":"text","value":" use:"}]},{"type":"element","tag":"code","props":{"code":"omniNames -start\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb5b15"},"children":[{"type":"text","value":"omniNames -start"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Exemplo de saída do comando acima:"}]},{"type":"element","tag":"code","props":{"code":"omniNames: (0) 2019-12-30 15:36:29.516974: Data file: '/var/lib/omniorb/omninames-erebo.dat'.\nomniNames: (0) 2019-12-30 15:36:29.517058: Starting omniNames for the first time.\nomniNames: (0) 2019-12-30 15:36:29.517348: Wrote initial data file '/var/lib/omniorb/omninames-erebo.dat'.\nomniNames: (0) 2019-12-30 15:36:29.517444: Read data file '/var/lib/omniorb/omninames-erebo.dat' successfully.\nomniNames: (0) 2019-12-30 15:36:29.517529: Root context is IOR:010000002b00000049444c3a6f6d672e6f72672f436f734e616d696e672f4e616d696e67436f6e746578744578743a312e300000010000000000000070000000010102000d0000003139322e3136382e302e31330000f90a0b0000004e616d6553657276696365000300000000000000080000000100000000545441010000001c000000010000000100010001000000010001050901010001000000090101000354544108000000ad430a5e010075e0\nomniNames: (0) 2019-12-30 15:36:29.517600: Checkpointing Phase 1: Prepare.\nomniNames: (0) 2019-12-30 15:36:29.517703: Checkpointing Phase 2: Commit.\nomniNames: (0) 2019-12-30 15:36:29.517802: Checkpointing completed.\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"omniNames: (0) 2019-12-30 15:36:29.516974: Data file: '/var/lib/omniorb/omninames-erebo.dat'.\nomniNames: (0) 2019-12-30 15:36:29.517058: Starting omniNames for the first time.\nomniNames: (0) 2019-12-30 15:36:29.517348: Wrote initial data file '/var/lib/omniorb/omninames-erebo.dat'.\nomniNames: (0) 2019-12-30 15:36:29.517444: Read data file '/var/lib/omniorb/omninames-erebo.dat' successfully.\nomniNames: (0) 2019-12-30 15:36:29.517529: Root context is IOR:010000002b00000049444c3a6f6d672e6f72672f436f734e616d696e672f4e616d696e67436f6e746578744578743a312e300000010000000000000070000000010102000d0000003139322e3136382e302e31330000f90a0b0000004e616d6553657276696365000300000000000000080000000100000000545441010000001c000000010000000100010001000000010001050901010001000000090101000354544108000000ad430a5e010075e0\nomniNames: (0) 2019-12-30 15:36:29.517600: Checkpointing Phase 1: Prepare.\nomniNames: (0) 2019-12-30 15:36:29.517703: Checkpointing Phase 2: Commit.\nomniNames: (0) 2019-12-30 15:36:29.517802: Checkpointing completed."}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A porta padrão é a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"2809"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Os arquivos de controle serão criados por padrão no diretório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/omniorb/"}]},{"type":"text","value":":"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/omniorb/omninames-nome-da-maquina.dat"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/omniorb/omninames-nome-da-maquina.bak"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para especificar um diretório diferente use a opção "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"-logdir"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"omniNames -logdir /tmp -start\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb5b15"},"children":[{"type":"text","value":"omniNames -logdir /tmp -start"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"mico"},"children":[{"type":"text","value":"MICO"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para iniciar o servidor de nomes do "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"MICO"}]},{"type":"text","value":" use:"}]},{"type":"element","tag":"code","props":{"code":"nsd -ORBIIOPAddr inet:localhost:2809\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb5b15"},"children":[{"type":"text","value":"nsd -ORBIIOPAddr inet:localhost:2809"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Veja exemplo em "},{"type":"element","tag":"a","props":{"href":"http://www.mario-konrad.ch/blog/programming/connect_orbs.html","rel":["nofollow"]},"children":[{"type":"text","value":"Connecting 3 ORBs"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"exemplo"},"children":[{"type":"text","value":"Exemplo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Componentes do exemplo","src":"/til/corba-01.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"criando-a-idl"},"children":[{"type":"text","value":"Criando a IDL"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Arquivo de interface "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data.idl"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"#ifndef __DATADIST_IDL__\n#define __DATADIST_IDL__\nmodule Data\n{\n  interface ServiceA {\n    boolean CallServiceRoutineA (\n        in    long num1,\n        inout long num2,\n        out   long retNum );\n    boolean CallServiceRoutineB (\n        inout long num1,\n        inout long num2);\n  };\n};\n#endif\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"#ifndef __DATADIST_IDL__\n#define __DATADIST_IDL__\nmodule Data\n{\n  interface ServiceA {\n    boolean CallServiceRoutineA (\n        in    long num1,\n        inout long num2,\n        out   long retNum );\n    boolean CallServiceRoutineB (\n        inout long num1,\n        inout long num2);\n  };\n};\n#endif"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"gerando-backend-a-partir-da-idl"},"children":[{"type":"text","value":"Gerando backend a partir da IDL"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Use a opção "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"-b"}]},{"type":"text","value":" para escolher o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" a ser gerado."}]},{"type":"element","tag":"code","props":{"code":"omniidl -bcxx    Data.idl\nomniidl -bpython Data.idl\nomniidl -bdump   Data.idl\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb5b15"},"children":[{"type":"text","value":"omniidl -bcxx    Data.idl"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb5b15"},"children":[{"type":"text","value":"omniidl -bpython Data.idl"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb5b15"},"children":[{"type":"text","value":"omniidl -bdump   Data.idl"}]}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"gerando-python"},"children":[{"type":"text","value":"Gerando Python"}]},{"type":"element","tag":"code","props":{"code":"omniidl -bpython Data.idl\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb5b15"},"children":[{"type":"text","value":"omniidl -bpython Data.idl"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"os arquivos abaixo são criados:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data_idl.py"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data__POA/__init__.py"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data/__init__.py"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% FIXME %"},"children":[]},{"type":"text","value":"\nDescrever os arquivos "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"gerados"}]},{"type":"text","value":" em "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"python"}]},{"type":"text","value":".\n"},{"type":"element","tag":"binding","props":{"value":"% /FIXME %"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"gerando-c"},"children":[{"type":"text","value":"Gerando C++"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao executar o seguinte comando:"}]},{"type":"element","tag":"code","props":{"code":"omniidl -bcxx Data.idl\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb5b15"},"children":[{"type":"text","value":"omniidl -bcxx Data.idl"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"os arquivos abaixo são criados:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Data.hh"}]},{"type":"text","value":" - cabeçalho que será usado pelo cliente e pelo servidor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"DataSK.cc"}]},{"type":"text","value":" - deve ser compilado e lincado com o programa que proverá a infraestrutura de comunicação"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Contendo os seguintes items:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"classe "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ServiceA"}]},{"type":"text","value":" contendo funções estáticas e definições de tipos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ServiceA_ptr"}]},{"type":"text","value":" - um ponteiro para o tipo do objeto de referência"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ServiceA_var"}]},{"type":"text","value":" - um helper para gerenciamento de memória usado por "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ServiceA_ptr"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"classe "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"POA_Service!"}]},{"type":"text","value":" - a classe esqueleto para o servidor"}]}]},{"type":"element","tag":"h5","props":{"id":"datahh"},"children":[{"type":"text","value":"Data.hh"}]},{"type":"element","tag":"code","props":{"code":"  // interface ServiceA\n  class ServiceA {\n  public:\n    // Declarations for this interface type.\n    typedef ServiceA_ptr _ptr_type;\n    typedef ServiceA_var _var_type;\n    static _ptr_type _duplicate(_ptr_type);\n    static _ptr_type _narrow(::CORBA::Object_ptr);\n    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);\n    static _ptr_type _nil();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  // interface ServiceA\n  class ServiceA {\n  public:\n    // Declarations for this interface type.\n    typedef ServiceA_ptr _ptr_type;\n    typedef ServiceA_var _var_type;\n    static _ptr_type _duplicate(_ptr_type);\n    static _ptr_type _narrow(::CORBA::Object_ptr);\n    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);\n    static _ptr_type _nil();"}]}]}]}]}]},{"type":"element","tag":"h5","props":{"id":"dataskcc"},"children":[{"type":"text","value":"DataSK.cc"}]},{"type":"element","tag":"code","props":{"code":"// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.\n\n#include \"Data.hh\"\n#include <omniORB4/IOP_S.h>\n#include <omniORB4/IOP_C.h>\n#include <omniORB4/callDescriptor.h>\n#include <omniORB4/callHandle.h>\n#include <omniORB4/objTracker.h>\n\nOMNI_USING_NAMESPACE(omni)\n...\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.\n\n#include \"Data.hh\"\n#include <omniORB4/IOP_S.h>\n#include <omniORB4/IOP_C.h>\n#include <omniORB4/callDescriptor.h>\n#include <omniORB4/callHandle.h>\n#include <omniORB4/objTracker.h>\n\nOMNI_USING_NAMESPACE(omni)\n..."}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"criando-o-servidor"},"children":[{"type":"text","value":"Criando o servidor"}]},{"type":"element","tag":"h3","props":{"id":"servercc"},"children":[{"type":"text","value":"Server.cc"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Código do servidor:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Iniciar o ORB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Obter a referência para o POA raiz para registra-se"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Vincular com o serviço de nomes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Iniciar o servidor de objetos"}]}]},{"type":"element","tag":"code","props":{"code":"// Server.cc\n\n#include <assert.h>\n#include <iostream>\n#include <signal.h>\n#include <stdlib.h>\n#include <string>\n#include <unistd.h>\n#include \"CServiceA_i.hh\"\n#include \"Data.hh\"\n\nusing namespace std;\n\nint main( int argc, char **argv )\n{\n  try {\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// Server.cc\n\n#include <assert.h>\n#include <iostream>\n#include <signal.h>\n#include <stdlib.h>\n#include <string>\n#include <unistd.h>\n#include \"CServiceA_i.hh\"\n#include \"Data.hh\"\n\nusing namespace std;\n\nint main( int argc, char **argv )\n{\n  try {"}]}]}]}]}]},{"type":"element","tag":"code","props":{"code":"    // (1) Iniciar o ORB\n    CORBA::ORB_var orb = CORBA::ORB_init( argc, argv );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    // (1) Iniciar o ORB\n    CORBA::ORB_var orb = CORBA::ORB_init( argc, argv );"}]}]}]}]}]},{"type":"element","tag":"code","props":{"code":"    // (2) Obter a referência para o POA raiz para registra-se para ficar disponível para os clientes\n    CORBA::Object_var       obj  = orb->resolve_initial_references( \"RootPOA\" );\n    PortableServer::POA_var _poa = PortableServer::POA::_narrow( obj.in() );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    // (2) Obter a referência para o POA raiz para registra-se para ficar disponível para os clientes\n    CORBA::Object_var       obj  = orb->resolve_initial_references( \"RootPOA\" );\n    PortableServer::POA_var _poa = PortableServer::POA::_narrow( obj.in() );"}]}]}]}]}]},{"type":"element","tag":"code","props":{"code":"    // As operações definidas na interface são invocadas pelo objeto de referência.\n    // Um instância de CRequestSocketStream_i é iniciada\n    PortableServer::Servant_var<CServiceA_i> myRequestServiceA = new CServiceA_i();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    // As operações definidas na interface são invocadas pelo objeto de referência.\n    // Um instância de CRequestSocketStream_i é iniciada\n    PortableServer::Servant_var<CServiceA_i> myRequestServiceA = new CServiceA_i();"}]}]}]}]}]},{"type":"element","tag":"code","props":{"code":"    // o servidor e objetos é ativado no RootPOA\n    PortableServer::ObjectId_var myRequestServiceA_oid = _poa->activate_object( myRequestServiceA );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    // o servidor e objetos é ativado no RootPOA\n    PortableServer::ObjectId_var myRequestServiceA_oid = _poa->activate_object( myRequestServiceA );"}]}]}]}]}]},{"type":"element","tag":"code","props":{"code":"    // Obtêm o objeto de referência do servidor e registra no servidor de nome\n    CORBA::Object_var SA_obj = myRequestServiceA->_this();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    // Obtêm o objeto de referência do servidor e registra no servidor de nome\n    CORBA::Object_var SA_obj = myRequestServiceA->_this();"}]}]}]}]}]},{"type":"element","tag":"code","props":{"code":"    // Obtêm uma referência para o objeto e imprime seu IOR como string\n    CORBA::String_var sior( orb->object_to_string( SA_obj.in() ) );\n    cerr << \"'\" << (char *)sior << \"'\" << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    // Obtêm uma referência para o objeto e imprime seu IOR como string\n    CORBA::String_var sior( orb->object_to_string( SA_obj.in() ) );\n    cerr << \"'\" << (char *)sior << \"'\" << endl;"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"% note %"},"children":[]},{"type":"text","value":"\nAqui você deve utilizar o mesmo nome do servidor de nomes definido no arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/omniORB.cfg"}]},{"type":"text","value":".\n"},{"type":"element","tag":"binding","props":{"value":"% /note %"},"children":[]}]},{"type":"element","tag":"code","props":{"code":"    // (3) Vincular com o serviço de nomes\n    // o serviço é definido pela diretiva InitRef e pelo identificador\n    // \"OmniNameService\" no arquivo omniORB.cfg\n    CORBA::Object_var obj1 = orb->resolve_initial_references( \"OmniNameService\" );\n    assert( !CORBA::is_nil( obj1.in() ) );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    // (3) Vincular com o serviço de nomes\n    // o serviço é definido pela diretiva InitRef e pelo identificador\n    // \"OmniNameService\" no arquivo omniORB.cfg\n    CORBA::Object_var obj1 = orb->resolve_initial_references( \"OmniNameService\" );\n    assert( !CORBA::is_nil( obj1.in() ) );"}]}]}]}]}]},{"type":"element","tag":"code","props":{"code":"    CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj1.in() );\n    assert( !CORBA::is_nil( nc.in() ) );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj1.in() );\n    assert( !CORBA::is_nil( nc.in() ) );"}]}]}]}]}]},{"type":"element","tag":"code","props":{"code":"    CosNaming::Name name;\n    name.length( 1 );\n    name[0].id = CORBA::string_dup( \"DataServiceName1\" );\n    nc->rebind( name, SA_obj.in() );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    CosNaming::Name name;\n    name.length( 1 );\n    name[0].id = CORBA::string_dup( \"DataServiceName1\" );\n    nc->rebind( name, SA_obj.in() );"}]}]}]}]}]},{"type":"element","tag":"code","props":{"code":"    //========================================================================\n    myRequestServiceA->_remove_ref();\n    //\n    PortableServer::POAManager_var pmgr = _poa->the_POAManager();\n    pmgr->activate();\n    // (4) Iniciar o servidor de objetos para aceitar requisições dos clientes\n    orb->run();\n    //\n    // Se o ORB deixar o loop de tratamento de eventos\n    // Atualmente está configurado para nunca dar timeout\n    orb->destroy();\n    //\n    free( name[0].id ); // str_dup realiza um malloc internamente\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    //========================================================================\n    myRequestServiceA->_remove_ref();\n    //\n    PortableServer::POAManager_var pmgr = _poa->the_POAManager();\n    pmgr->activate();\n    // (4) Iniciar o servidor de objetos para aceitar requisições dos clientes\n    orb->run();\n    //\n    // Se o ORB deixar o loop de tratamento de eventos\n    // Atualmente está configurado para nunca dar timeout\n    orb->destroy();\n    //\n    free( name[0].id ); // str_dup realiza um malloc internamente\n  }"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tratar as exceções:"}]},{"type":"element","tag":"code","props":{"code":"  catch( CORBA::TRANSIENT & ) {\n    cerr << \"Caught system exception TRANSIENT -- unable to contact the server.\" << endl;\n  }\n  catch( CORBA::OBJECT_NOT_EXIST & ) {\n    cerr << \"Caught system exception OBJECT_NOT_EXIST\" << endl;\n  }\n  catch( CORBA::SystemException & ) {\n    cerr << \"Caught CORBA::SystemException.\" << endl;\n  }\n  catch( CORBA::Exception & ) {\n    cerr << \"Caught CORBA::Exception.\" << endl;\n  }\n  catch( omniORB::fatalException &fe ) {\n    cerr << \"Caught omniORB::fatalException:\" << endl;\n    cerr << \"  file: \" << fe.file() << endl;\n    cerr << \"  line: \" << fe.line() << endl;\n    cerr << \"  mesg: \" << fe.errmsg() << endl;\n  }\n  catch( ... ) {\n    cerr << \"Caught unknown exception.\" << endl;\n  }\n\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  catch( CORBA::TRANSIENT & ) {\n    cerr << \"Caught system exception TRANSIENT -- unable to contact the server.\" << endl;\n  }\n  catch( CORBA::OBJECT_NOT_EXIST & ) {\n    cerr << \"Caught system exception OBJECT_NOT_EXIST\" << endl;\n  }\n  catch( CORBA::SystemException & ) {\n    cerr << \"Caught CORBA::SystemException.\" << endl;\n  }\n  catch( CORBA::Exception & ) {\n    cerr << \"Caught CORBA::Exception.\" << endl;\n  }\n  catch( omniORB::fatalException &fe ) {\n    cerr << \"Caught omniORB::fatalException:\" << endl;\n    cerr << \"  file: \" << fe.file() << endl;\n    cerr << \"  line: \" << fe.line() << endl;\n    cerr << \"  mesg: \" << fe.errmsg() << endl;\n  }\n  catch( ... ) {\n    cerr << \"Caught unknown exception.\" << endl;\n  }\n\n  return 0;\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"implementação-do-servant"},"children":[{"type":"text","value":"Implementação do Servant"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"São denotados pelo sufixo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"_i"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"cservicea_ihh"},"children":[{"type":"text","value":"CServiceA_i.hh"}]},{"type":"element","tag":"code","props":{"code":"// CServiceA_i.hh\n#include \"Data.hh\"\n\nclass CServiceA_i : public POA_Data::ServiceA, public PortableServer::RefCountServantBase {\npublic:\n  CServiceA_i();\n  virtual ~CServiceA_i();\n  virtual CORBA::Boolean CallServiceARoutineA(\n    /*in*/    CORBA::Long num1,\n    /*inout*/ CORBA::Long &num2,\n    /*out*/   CORBA::Long &retNum );\n  virtual CORBA::Boolean CallServiceARoutineB(\n    /*inout*/ CORBA::Long &num1,\n    /*inout*/ CORBA::Long &num2 );\n};\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// CServiceA_i.hh\n#include \"Data.hh\"\n\nclass CServiceA_i : public POA_Data::ServiceA, public PortableServer::RefCountServantBase {\npublic:\n  CServiceA_i();\n  virtual ~CServiceA_i();\n  virtual CORBA::Boolean CallServiceARoutineA(\n    /*in*/    CORBA::Long num1,\n    /*inout*/ CORBA::Long &num2,\n    /*out*/   CORBA::Long &retNum );\n  virtual CORBA::Boolean CallServiceARoutineB(\n    /*inout*/ CORBA::Long &num1,\n    /*inout*/ CORBA::Long &num2 );\n};"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"cservicea_icc"},"children":[{"type":"text","value":"CServiceA_i.cc"}]},{"type":"element","tag":"code","props":{"code":"// CServiceA.cc\n\n#include <fstream>\n#include <iostream>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <sys/types.h>\n#include <unistd.h>\n#include <vector>\n\n#include \"CServiceA_i.hh\"\n\nusing namespace Data;\n\n#include <sys/wait.h>\n\nCServiceA_i::CServiceA_i() { }\n\nCServiceA_i::~CServiceA_i( void ) { }\n\nCORBA::Boolean CallServiceARoutineA(\n    /*in*/    CORBA::Long num1,\n    /*inout*/ CORBA::Long &num2,\n    /*out*/   CORBA::Long &retNum )\n{\n  num2   = num2 + num1;\n  retNum = 10;\n  return true;\n}\n\nCORBA::Boolean CallServiceARoutineB(\n    /*inout*/ CORBA::Long &num1,\n    /*inout*/ CORBA::Long &num2 )\n{\n  num1++;\n  num2++;\n  return true;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// CServiceA.cc\n\n#include <fstream>\n#include <iostream>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <sys/types.h>\n#include <unistd.h>\n#include <vector>\n\n#include \"CServiceA_i.hh\"\n\nusing namespace Data;\n\n#include <sys/wait.h>\n\nCServiceA_i::CServiceA_i() { }\n\nCServiceA_i::~CServiceA_i( void ) { }\n\nCORBA::Boolean CallServiceARoutineA(\n    /*in*/    CORBA::Long num1,\n    /*inout*/ CORBA::Long &num2,\n    /*out*/   CORBA::Long &retNum )\n{\n  num2   = num2 + num1;\n  retNum = 10;\n  return true;\n}\n\nCORBA::Boolean CallServiceARoutineB(\n    /*inout*/ CORBA::Long &num1,\n    /*inout*/ CORBA::Long &num2 )\n{\n  num1++;\n  num2++;\n  return true;\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"cliente-corba"},"children":[{"type":"text","value":"Cliente CORBA"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"binding","props":{"value":"< img src=\"/img/corba-client.png\" alt=\"Cliente CORBA\">"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"clientcc"},"children":[{"type":"text","value":"Client.cc"}]},{"type":"element","tag":"code","props":{"code":"// Client.cc\n#include \"CRequestServiceA.hh\"\n\nint main( int argc, char **argv )\n{\n  // O construtor estabelece o link como o servidor CORBA.\n  CRequestServiceA requestServiceA;\n\n  if( requestServiceA.RequestServiceARoutineA() ) {\n    cout << \"ServiceA RoutineA: True\" << endl;\n  }\n  if( requestServiceA.RequestServiceARoutineB() ) {\n    cout << \"ServiceA RoutineB: True\" << endl;\n  }\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// Client.cc\n#include \"CRequestServiceA.hh\"\n\nint main( int argc, char **argv )\n{\n  // O construtor estabelece o link como o servidor CORBA.\n  CRequestServiceA requestServiceA;\n\n  if( requestServiceA.RequestServiceARoutineA() ) {\n    cout << \"ServiceA RoutineA: True\" << endl;\n  }\n  if( requestServiceA.RequestServiceARoutineB() ) {\n    cout << \"ServiceA RoutineB: True\" << endl;\n  }\n  return 0;\n}"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"crrquestserviceahh"},"children":[{"type":"text","value":"CRrquestServiceA.hh"}]},{"type":"element","tag":"code","props":{"code":"// CRrquestServiceA.hh\n#include \"Data.hh\"\n#include <cassert>\n#include <fstream>\n#include <iostream>\n\nusing namespace std;\n\nclass CRequestServiceA {\npublic:\n  CRequestServiceA();\n  ~CRequestServiceA();\n  bool RequestServiceARoutineA();\n  bool RequestServiceARoutineB();\n\n  CosNaming::Name m_corbaCosName;\n\n  // CORBA ORB\n  CORBA::ORB_var m_orb;\n\n  CORBA::Object_var m_obj;  // ORB Object\n  CORBA::Object_var m_obj1; // Resolved id to object reference\n\n  // Resolved and narrowed CORBA object for proxy calls\n  Data::ServiceA_var m_Data;\n};\n\nclass DS_ServerConnectionException {\npublic:\n  DS_ServerConnectionException()\n  {\n    cerr << \"CORBA COMM_FAILURE\" << endl;\n  };\n};\n\nclass DS_SystemException {\npublic:\n  DS_SystemException()\n  {\n    cerr << \"CORBA Exception\" << endl;\n  };\n};\n\nclass DS_FatalException {\npublic:\n  DS_FatalException()\n  {\n    cerr << \"CORBA Fatal Exception\" << endl;\n  };\n};\n\nclass DS_Exception {\npublic:\n  DS_Exception()\n  {\n    cerr << \"Exception\" << endl;\n  };\n};\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// CRrquestServiceA.hh\n#include \"Data.hh\"\n#include <cassert>\n#include <fstream>\n#include <iostream>\n\nusing namespace std;\n\nclass CRequestServiceA {\npublic:\n  CRequestServiceA();\n  ~CRequestServiceA();\n  bool RequestServiceARoutineA();\n  bool RequestServiceARoutineB();\n\n  CosNaming::Name m_corbaCosName;\n\n  // CORBA ORB\n  CORBA::ORB_var m_orb;\n\n  CORBA::Object_var m_obj;  // ORB Object\n  CORBA::Object_var m_obj1; // Resolved id to object reference\n\n  // Resolved and narrowed CORBA object for proxy calls\n  Data::ServiceA_var m_Data;\n};\n\nclass DS_ServerConnectionException {\npublic:\n  DS_ServerConnectionException()\n  {\n    cerr << \"CORBA COMM_FAILURE\" << endl;\n  };\n};\n\nclass DS_SystemException {\npublic:\n  DS_SystemException()\n  {\n    cerr << \"CORBA Exception\" << endl;\n  };\n};\n\nclass DS_FatalException {\npublic:\n  DS_FatalException()\n  {\n    cerr << \"CORBA Fatal Exception\" << endl;\n  };\n};\n\nclass DS_Exception {\npublic:\n  DS_Exception()\n  {\n    cerr << \"Exception\" << endl;\n  };\n};"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"crequestserviceacc"},"children":[{"type":"text","value":"CRequestServiceA.cc"}]},{"type":"element","tag":"code","props":{"code":"// CRequestServiceA.cc\n\n#include \"CRequestServiceA.hh\"\nusing namespace Data;\n\nCRequestServiceA::CRequestServiceA()\n{\n  try {\n    // Inicia o objeto ORB\n    int            argc = 0; // Variáveis dummy.\n    char **        argv = 0;\n    CORBA::ORB_var orb  = CORBA::ORB_init( argc, argv );\n\n    // Vincula o objeto ORB ao servidor de nome\n    // Deve ser o mesmo nome definido em /etc/omniORB.cfg\n    CORBA::Object_var obj = orb->resolve_initial_references( \"OmniNameService\" );\n    assert( !CORBA::is_nil( obj.in() ) );\n\n    CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj.in() );\n    assert( !CORBA::is_nil( nc.in() ) );\n\n    CosNaming::Name _corbaCosName;\n    _corbaCosName.length( 1 );\n    _corbaCosName[0].id = CORBA::string_dup( \"DataServiceName1\" );\n\n    CORBA::Object_var obj1 = nc->resolve( _corbaCosName );\n    assert( !CORBA::is_nil( obj1.in() ) );\n\n    m_Data = ServiceA::_narrow( obj1.in() );\n    if( CORBA::is_nil( m_Data.in() ) ) {\n      cerr << \"IOR is not an SA object reference.\" << endl;\n    }\n  }\n  catch( CORBA::COMM_FAILURE &ex ) {\n    cerr << \"Caught system exception COMM_FAILURE -- unable to contact the \"\n         << \"object.\" << endl;\n    throw DS_ServerConnectionException();\n    return;\n  }\n  catch( CORBA::SystemException & ) {\n    cerr << \"Caught a CORBA::SystemException.\" << endl;\n    throw DS_SystemException();\n    return;\n  }\n  catch( CORBA::Exception & ) {\n    cerr << \"Caught CORBA::Exception.\" << endl;\n    throw DS_Exception();\n    return;\n  }\n  catch( omniORB::fatalException &fe ) {\n    cerr << \"Caught omniORB::fatalException:\" << endl;\n    cerr << \"  file: \" << fe.file() << endl;\n    cerr << \"  line: \" << fe.line() << endl;\n    cerr << \"  mesg: \" << fe.errmsg() << endl;\n    throw DS_FatalException();\n    return;\n  }\n  catch( ... ) {\n    cerr << \"Caught unknown exception.\" << endl;\n    throw DS_Exception();\n    return;\n  }\n  return;\n}\n\nCRequestServiceA::~CRequestServiceA()\n{\n  // ...\n}\n\nbool CRequestServiceA::RequestServiceARoutineA()\n{\n  CORBA::Long num1 = 4;\n  CORBA::Long num2 = 5;\n  CORBA::Long retNum;\n\n  cout << \"Valores de entrada para a rotina A do serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;\n\n  // Esta chamada CORBA será executada remotamente\n  if( m_Data->CallServiceRoutineA( num1, num2, retNum ) ) {\n    cout << \"Valores retornados pelo serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;\n    return true;\n  }\n  return false;\n}\n\nbool CRequestServiceA::RequestServiceARoutineB()\n{\n  CORBA::Long num1 = 0;\n  CORBA::Long num2 = 50;\n\n  cout << \"Valores de entrada para a rotina B do serviço A: \" << num1 << \" \" << num2 << endl;\n\n  // Esta chamada CORBA será executada remotamente\n  if( m_Data->CallServiceRoutineB( num1, num2 ) ) {\n    cout << \"Valores retornados pelo serviço B: \" << num1 << \" \" << num2 << endl;\n    return true;\n  }\n  return false;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"// CRequestServiceA.cc\n\n#include \"CRequestServiceA.hh\"\nusing namespace Data;\n\nCRequestServiceA::CRequestServiceA()\n{\n  try {\n    // Inicia o objeto ORB\n    int            argc = 0; // Variáveis dummy.\n    char **        argv = 0;\n    CORBA::ORB_var orb  = CORBA::ORB_init( argc, argv );\n\n    // Vincula o objeto ORB ao servidor de nome\n    // Deve ser o mesmo nome definido em /etc/omniORB.cfg\n    CORBA::Object_var obj = orb->resolve_initial_references( \"OmniNameService\" );\n    assert( !CORBA::is_nil( obj.in() ) );\n\n    CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj.in() );\n    assert( !CORBA::is_nil( nc.in() ) );\n\n    CosNaming::Name _corbaCosName;\n    _corbaCosName.length( 1 );\n    _corbaCosName[0].id = CORBA::string_dup( \"DataServiceName1\" );\n\n    CORBA::Object_var obj1 = nc->resolve( _corbaCosName );\n    assert( !CORBA::is_nil( obj1.in() ) );\n\n    m_Data = ServiceA::_narrow( obj1.in() );\n    if( CORBA::is_nil( m_Data.in() ) ) {\n      cerr << \"IOR is not an SA object reference.\" << endl;\n    }\n  }\n  catch( CORBA::COMM_FAILURE &ex ) {\n    cerr << \"Caught system exception COMM_FAILURE -- unable to contact the \"\n         << \"object.\" << endl;\n    throw DS_ServerConnectionException();\n    return;\n  }\n  catch( CORBA::SystemException & ) {\n    cerr << \"Caught a CORBA::SystemException.\" << endl;\n    throw DS_SystemException();\n    return;\n  }\n  catch( CORBA::Exception & ) {\n    cerr << \"Caught CORBA::Exception.\" << endl;\n    throw DS_Exception();\n    return;\n  }\n  catch( omniORB::fatalException &fe ) {\n    cerr << \"Caught omniORB::fatalException:\" << endl;\n    cerr << \"  file: \" << fe.file() << endl;\n    cerr << \"  line: \" << fe.line() << endl;\n    cerr << \"  mesg: \" << fe.errmsg() << endl;\n    throw DS_FatalException();\n    return;\n  }\n  catch( ... ) {\n    cerr << \"Caught unknown exception.\" << endl;\n    throw DS_Exception();\n    return;\n  }\n  return;\n}\n\nCRequestServiceA::~CRequestServiceA()\n{\n  // ...\n}\n\nbool CRequestServiceA::RequestServiceARoutineA()\n{\n  CORBA::Long num1 = 4;\n  CORBA::Long num2 = 5;\n  CORBA::Long retNum;\n\n  cout << \"Valores de entrada para a rotina A do serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;\n\n  // Esta chamada CORBA será executada remotamente\n  if( m_Data->CallServiceRoutineA( num1, num2, retNum ) ) {\n    cout << \"Valores retornados pelo serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;\n    return true;\n  }\n  return false;\n}\n\nbool CRequestServiceA::RequestServiceARoutineB()\n{\n  CORBA::Long num1 = 0;\n  CORBA::Long num2 = 50;\n\n  cout << \"Valores de entrada para a rotina B do serviço A: \" << num1 << \" \" << num2 << endl;\n\n  // Esta chamada CORBA será executada remotamente\n  if( m_Data->CallServiceRoutineB( num1, num2 ) ) {\n    cout << \"Valores retornados pelo serviço B: \" << num1 << \" \" << num2 << endl;\n    return true;\n  }\n  return false;\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"makefile"},"children":[{"type":"text","value":"Makefile"}]},{"type":"element","tag":"code","props":{"code":"# Makefile\nLDFLAGS+=-lomniORB4 -lomnithread -lomniDynamic4\nCXXFLAGS+=-Wall\n\nall: server client\n\nserver: DataSK.o CServiceA_i.o Server.o\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nclient: DataSK.o Client.o CRequestServiceA.o\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nclean:\n    rm -f *.o\n    rm -f server\n    rm -f client\n","language":"makefile"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# Makefile\nLDFLAGS+=-lomniORB4 -lomnithread -lomniDynamic4\nCXXFLAGS+=-Wall\n\nall: server client\n\nserver: DataSK.o CServiceA_i.o Server.o\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nclient: DataSK.o Client.o CRequestServiceA.o\n    $(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)\n\nclean:\n    rm -f *.o\n    rm -f server\n    rm -f client"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is the value of CORBA. This is why we use CORBA. Look at how simple the program looks. The constructor establishes the link with the CORBA server. The subsequent calls to Routine A and B are processed remotely on the CORBA server but called like any other local function call."}]},{"type":"element","tag":"h2","props":{"id":"todo"},"children":[{"type":"text","value":"Todo"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.grisby.org/presentations/py10tut.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.grisby.org/presentations/py10tut.pdf"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.grisby.org/presentations/CORBAControls2002.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.grisby.org/presentations/CORBAControls2002.pdf"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://xennis.org/wiki/CORBA","rel":["nofollow"]},"children":[{"type":"text","value":"https://xennis.org/wiki/CORBA"}]},{"type":"text","value":" <- tutorial que parece muito interessante"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.mario-konrad.ch/blog/programming/connect_orbs.html","rel":["nofollow"]},"children":[{"type":"text","value":"http://www.mario-konrad.ch/blog/programming/connect_orbs.html"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/cd/E13203_01/tuxedo/tux100/pdf/naming.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"https://docs.oracle.com/cd/E13203_01/tuxedo/tux100/pdf/naming.pdf"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.cse.iitb.ac.in/~rkj/talks/corba-tutorial.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"Introduction to Distributed Computing using CORBA"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.yolinux.com/TUTORIALS/CORBA.html","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA, C++ and Linux"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.cin.ufpe.br/~cagf/sdgrad/aulas/POA+GIOP.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"O Adaptador de Objetos e Interoperabilidade CORBA"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.mario-konrad.ch/blog/programming/connect_orbs.html","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA Tutorial: Connecting 3 ORBs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.grisby.org/presentations/accu2003.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA? Isn’ t that Obsolete ?"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/omniidl.html"},"children":[{"type":"text","value":"The omniORB IDL Compiler"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/omniNames.html"},"children":[{"type":"text","value":"The omniNames CORBA Naming Service"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/omnithread.html"},"children":[{"type":"text","value":"The OMNI Thread Abstraction"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/utilities.html"},"children":[{"type":"text","value":"The omniORB utilities"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(local) "},{"type":"element","tag":"a","props":{"href":"file:///usr/share/doc/omniorb-doc/omniORB/index.html"},"children":[{"type":"text","value":"The omniORB version 4.2 Users’ Guide"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/cd/E13211_01/wle/cref/member.htm","rel":["nofollow"]},"children":[{"type":"text","value":"Mapping of OMG IDL Statements to C++"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.cs.rpi.edu/~musser/dsc/idl/idl-overview_5.html","rel":["nofollow"]},"children":[{"type":"text","value":"Raising Exceptions in IDL Operations"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.ime.usp.br/~reverbel/SMW-07/Slides/POA.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"O Portable Object Adapter"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://erlang.org/documentation/doc-5.7/lib/orber-3.6.11/doc/html/ch_exceptions.html","rel":["nofollow"]},"children":[{"type":"text","value":"CORBA System and User Defined Exceptions"}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"\nmjx-container[jax=\"SVG\"] {\n  direction: ltr;\n}\n\nmjx-container[jax=\"SVG\"] > svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=\"SVG\"] > svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"][width=\"full\"] {\n  display: flex;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"left\"] {\n  text-align: left;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"right\"] {\n  text-align: right;\n}\n\ng[data-mml-node=\"merror\"] > g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=\"merror\"] > rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=\"mtable\"] > g > svg {\n  overflow: visible;\n}\n\n[jax=\"SVG\"] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=\"SVG\"] mjx-tool > mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool > mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=\"maction\"][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=\"SVG\"] path[data-c], mjx-container[jax=\"SVG\"] use[data-c] {\n  stroke-width: 3;\n}\n"}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-bb5b15{color:#F8F8F2}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introdução","depth":2,"text":"Introdução","children":[{"id":"o-que-é-corba","depth":3,"text":"O que é CORBA?"},{"id":"o-que-é-a-omg","depth":3,"text":"O que é a OMG?"},{"id":"corba-vs-soapxml-rpc","depth":3,"text":"CORBA vs SOAP/XML-RPC"},{"id":"corba-é-pesado","depth":3,"text":"CORBA é pesado?"}]},{"id":"orb---object-request-broker","depth":2,"text":"ORB - Object Request Broker"},{"id":"clientes","depth":2,"text":"Clientes"},{"id":"servidores","depth":2,"text":"Servidores"},{"id":"idl","depth":2,"text":"IDL","children":[{"id":"idl-features","depth":3,"text":"IDL Features"},{"id":"tipos-básicos","depth":3,"text":"Tipos básicos"},{"id":"direções-dos-parâmetros","depth":3,"text":"Direções dos parâmetros"},{"id":"exceções","depth":3,"text":"Exceções"},{"id":"operações-oneway","depth":3,"text":"Operações oneway"},{"id":"estruturas","depth":3,"text":"Estruturas"},{"id":"arrays","depth":3,"text":"Arrays"},{"id":"constantes","depth":3,"text":"Constantes"},{"id":"typedef","depth":3,"text":"Typedef"},{"id":"módulos","depth":3,"text":"Módulos"},{"id":"preprocessador","depth":3,"text":"Preprocessador"},{"id":"mapeamento-para-linguagem","depth":3,"text":"Mapeamento para linguagem"},{"id":"mapeamento-de-identificadores","depth":3,"text":"Mapeamento de identificadores"},{"id":"mapeamento-de-interface","depth":3,"text":"Mapeamento de interface"},{"id":"mapeamento-de-escopo","depth":3,"text":"Mapeamento de escopo"},{"id":"mapeamento-do-módulo-padrão-do-corba","depth":3,"text":"Mapeamento do módulo padrão do CORBA"},{"id":"mapeamento-de-tipos","depth":3,"text":"Mapeamento de tipos"}]},{"id":"repositório-de-interfaces","depth":2,"text":"Repositório de interfaces"},{"id":"repositório-de-implementação","depth":2,"text":"Repositório de implementação"},{"id":"dynamic-invocation-interface","depth":2,"text":"Dynamic Invocation Interface"},{"id":"interoperabilidade","depth":2,"text":"Interoperabilidade"},{"id":"coss---common-object-service-specification","depth":2,"text":"COSS - Common Object Service Specification"},{"id":"oa---object-adapter","depth":2,"text":"OA - Object Adapter"},{"id":"boa---basic-object-adapter","depth":2,"text":"BOA - Basic Object Adapter"},{"id":"poa-portable-object-adapter","depth":2,"text":"POA Portable Object Adapter","children":[{"id":"identificador-de-objeto","depth":3,"text":"Identificador de Objeto"},{"id":"o-campo-object-id-da-ior","depth":3,"text":"O Campo Object Id da IOR"}]},{"id":"instalação-do-omniorb-no-debian","depth":2,"text":"Instalação do omniORB no Debian"},{"id":"iniciar-o-servidor-de-nomes","depth":2,"text":"Iniciar o servidor de nomes","children":[{"id":"omniorb","depth":3,"text":"OmniORB"},{"id":"mico","depth":3,"text":"MICO"}]},{"id":"exemplo","depth":2,"text":"Exemplo","children":[{"id":"criando-a-idl","depth":3,"text":"Criando a IDL"},{"id":"gerando-backend-a-partir-da-idl","depth":3,"text":"Gerando backend a partir da IDL"}]},{"id":"criando-o-servidor","depth":2,"text":"Criando o servidor","children":[{"id":"servercc","depth":3,"text":"Server.cc"}]},{"id":"implementação-do-servant","depth":2,"text":"Implementação do Servant","children":[{"id":"cservicea_ihh","depth":3,"text":"CServiceA_i.hh"},{"id":"cservicea_icc","depth":3,"text":"CServiceA_i.cc"}]},{"id":"cliente-corba","depth":2,"text":"Cliente CORBA","children":[{"id":"clientcc","depth":3,"text":"Client.cc"},{"id":"crrquestserviceahh","depth":3,"text":"CRrquestServiceA.hh"},{"id":"crequestserviceacc","depth":3,"text":"CRequestServiceA.cc"}]},{"id":"makefile","depth":2,"text":"Makefile"},{"id":"todo","depth":2,"text":"Todo"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:corba.md","_source":"content","_file":"til/corba.md","_extension":"md"},{"_path":"/til/cpp-armadillo","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Álgebra linear com Armadillo","description":"Algebra linear com a biblioteca armadillo.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Algebra linear com a biblioteca "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"armadillo"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n$$\nA_{m,n} =\n\\begin{pmatrix}\na_{1,1} & a_{1,2} & \\cdots & a_{1,n} \\\\\na_{2,1} & a_{2,2} & \\cdots & a_{2,n} \\\\\n\\vdots  & \\vdots  & \\ddots & \\vdots  \\\\\na_{m,1} & a_{m,2} & \\cdots & a_{m,n} \n\\end{pmatrix}\n$$\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Armadillo"}]},{"type":"text","value":" é uma biblioteca de álgebra linear para C++ rápida e fácil de usar, com sintaxe parecida com a do "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Matlab"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Provê suporte para:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"vetores (tensores de primeira ordem)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"matrizes (tensores de segunda ordem)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"cubos (tensores de terceira ordem)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"matrizes densas e esparsas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"números inteiros, de ponto flutuante e complexos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"decomposição (via LAPACK)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"multi-thread (Intel MKL ou OpenBLAS)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"avaliador de expressão baseado em meta-programação"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"paralelização (via OpenMP)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Principais usos:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"machine learning"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reconhecimento de padrões"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"visão computacional"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"processamento de sinais"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"bioinformática"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"estatística"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"finanças"}]}]},{"type":"element","tag":"h2","props":{"id":"instalação-no-debian"},"children":[{"type":"text","value":"Instalação no Debian"}]},{"type":"element","tag":"code","props":{"code":"apt install libarmadillo-dev\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"apt install libarmadillo-dev\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"instalação-no-macos"},"children":[{"type":"text","value":"Instalação no MacOS"}]},{"type":"element","tag":"code","props":{"code":"brew install armadillo\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"brew install armadillo\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"exemplos-de-uso"},"children":[{"type":"text","value":"Exemplos de uso"}]},{"type":"element","tag":"code","props":{"code":"#include <armadillo>\n#include <iostream>\n\nusing namespace std;\nusing namespace arma;\n\nint main()\n{\n  // inicia o gerador de números aleatórios\n  arma_rng::set_seed_random();\n\n  // Cria uma matriz com dados aleatório com dimensão 2x3\n  auto A = randu( 2, 3 );\n  cout << A << endl;\n  //    0.7038   0.6819   0.9555\n  //    0.3804   0.9666   0.9270\n\n  // Transposta\n  cout << A.t() << endl;\n  //    0.7526   0.5681\n  //    0.5874   0.9469\n  //    0.3562   0.9346\n\n  // Multiplicação de matrizes\n  cout << A.t() * A << endl;\n  //    0.0536   0.2644   0.2534\n  //    0.4731   0.3874   0.9599\n  //    0.1739   0.3313   0.4768\n\n  mat B( 3, 3, fill::randu );\n  cout << B << endl;\n  //    0.9563   0.8955   0.0919\n  //    0.3291   0.3086   0.3452\n  //    0.1894   0.9898   0.8642\n\n  cout << \"Determinante: \" << det( B ) << endl;\n  // Determinante: -0.243228\n\n  auto C = randu( 3, 3 );\n  cout << C << endl;\n  //    0.5561   0.6219   0.2147\n  //    0.3105   0.2813   0.9172\n  //    0.3408   0.1925   0.4703\n  cout << \"Determinante: \" << det( C ) << endl;\n  // Determinante: -0.254525\n\n  mat D = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n  cout << D << endl;\n  //    1.0000   2.0000   3.0000\n  //    4.0000   5.0000   6.0000\n  //    7.0000   8.0000   9.0000\n  cout << \"Determinante: \" << det( D ) << endl;\n  // Determinante: 6.66134e-16\n\n  D.row( 0 ) = D.row( 1 ) + D.row( 2 );\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  //  4.0000    5.0000    6.0000\n  //  7.0000    8.0000    9.0000\n\n  D.row( 1 ) = D.row( 1 ) * 5;\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  // 20.0000   25.0000   30.0000\n  //  7.0000    8.0000    9.0000\n  //\n\n  D.row( 2 ).zeros();\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  // 20.0000   25.0000   30.0000\n  //       0         0         0\n\n  D.col( 2 ) = D.col( 2 ) + 10;\n  cout << D << endl;\n  // 11.0000   13.0000   25.0000\n  // 20.0000   25.0000   40.0000\n  //       0         0   10.0000\n\n  D = diagmat( D );\n  cout << D << endl;\n  // 11.0000         0         0\n  //       0   25.0000         0\n  //       0         0   10.0000\n\n  D.save( \"D.bin\" );\n\n  D.save( \"D.txt\", arma_ascii );\n  // ARMA_MAT_TXT_FN008\n  // 3 3\n  //    1.10000000000000e+01   0.00000000000000e+00   0.00000000000000e+00\n  //    0.00000000000000e+00   2.50000000000000e+01   0.00000000000000e+00\n  //    0.00000000000000e+00   0.00000000000000e+00   1.00000000000000e+01\n\n  auto O = ones( 2, 2 );\n  cout << O << endl;\n  // 1.0000   1.0000\n  // 1.0000   1.0000\n\n  auto Z = zeros( 3, 5 );\n  cout << Z << endl;\n  // 0        0        0        0        0\n  // 0        0        0        0        0\n  // 0        0        0        0        0\n\n  mat F1, F2;\n  F1.load( \"D.bin\" );\n  F2.load( \"D.txt\" );\n  cout << F1 << endl;\n  // 11.0000         0         0\n  //       0   25.0000         0\n  //       0         0   10.000\n\n  cout << F1 - F2 << endl;\n  // 0        0        0\n  // 0        0        0\n  // 0        0        0\n\n  mat F( 2, 3 );\n  F.fill( 3.14 );\n  cout << F << endl;\n  // 3.1400   3.1400   3.1400\n  // 3.1400   3.1400   3.1400\n\n  F = F.ones();\n  F.col( 0 ) *= datum::pi;\n  F.col( 1 ) *= datum::inf;\n  F.col( 2 ) *= datum::nan;\n  cout << F << endl;\n  // 3.1416      inf      nan\n  // 3.1416      inf      nan\n\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#include <armadillo>\n#include <iostream>\n\nusing namespace std;\nusing namespace arma;\n\nint main()\n{\n  // inicia o gerador de números aleatórios\n  arma_rng::set_seed_random();\n\n  // Cria uma matriz com dados aleatório com dimensão 2x3\n  auto A = randu( 2, 3 );\n  cout << A << endl;\n  //    0.7038   0.6819   0.9555\n  //    0.3804   0.9666   0.9270\n\n  // Transposta\n  cout << A.t() << endl;\n  //    0.7526   0.5681\n  //    0.5874   0.9469\n  //    0.3562   0.9346\n\n  // Multiplicação de matrizes\n  cout << A.t() * A << endl;\n  //    0.0536   0.2644   0.2534\n  //    0.4731   0.3874   0.9599\n  //    0.1739   0.3313   0.4768\n\n  mat B( 3, 3, fill::randu );\n  cout << B << endl;\n  //    0.9563   0.8955   0.0919\n  //    0.3291   0.3086   0.3452\n  //    0.1894   0.9898   0.8642\n\n  cout << \"Determinante: \" << det( B ) << endl;\n  // Determinante: -0.243228\n\n  auto C = randu( 3, 3 );\n  cout << C << endl;\n  //    0.5561   0.6219   0.2147\n  //    0.3105   0.2813   0.9172\n  //    0.3408   0.1925   0.4703\n  cout << \"Determinante: \" << det( C ) << endl;\n  // Determinante: -0.254525\n\n  mat D = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n  cout << D << endl;\n  //    1.0000   2.0000   3.0000\n  //    4.0000   5.0000   6.0000\n  //    7.0000   8.0000   9.0000\n  cout << \"Determinante: \" << det( D ) << endl;\n  // Determinante: 6.66134e-16\n\n  D.row( 0 ) = D.row( 1 ) + D.row( 2 );\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  //  4.0000    5.0000    6.0000\n  //  7.0000    8.0000    9.0000\n\n  D.row( 1 ) = D.row( 1 ) * 5;\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  // 20.0000   25.0000   30.0000\n  //  7.0000    8.0000    9.0000\n  //\n\n  D.row( 2 ).zeros();\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  // 20.0000   25.0000   30.0000\n  //       0         0         0\n\n  D.col( 2 ) = D.col( 2 ) + 10;\n  cout << D << endl;\n  // 11.0000   13.0000   25.0000\n  // 20.0000   25.0000   40.0000\n  //       0         0   10.0000\n\n  D = diagmat( D );\n  cout << D << endl;\n  // 11.0000         0         0\n  //       0   25.0000         0\n  //       0         0   10.0000\n\n  D.save( \"D.bin\" );\n\n  D.save( \"D.txt\", arma_ascii );\n  // ARMA_MAT_TXT_FN008\n  // 3 3\n  //    1.10000000000000e+01   0.00000000000000e+00   0.00000000000000e+00\n  //    0.00000000000000e+00   2.50000000000000e+01   0.00000000000000e+00\n  //    0.00000000000000e+00   0.00000000000000e+00   1.00000000000000e+01\n\n  auto O = ones( 2, 2 );\n  cout << O << endl;\n  // 1.0000   1.0000\n  // 1.0000   1.0000\n\n  auto Z = zeros( 3, 5 );\n  cout << Z << endl;\n  // 0        0        0        0        0\n  // 0        0        0        0        0\n  // 0        0        0        0        0\n\n  mat F1, F2;\n  F1.load( \"D.bin\" );\n  F2.load( \"D.txt\" );\n  cout << F1 << endl;\n  // 11.0000         0         0\n  //       0   25.0000         0\n  //       0         0   10.000\n\n  cout << F1 - F2 << endl;\n  // 0        0        0\n  // 0        0        0\n  // 0        0        0\n\n  mat F( 2, 3 );\n  F.fill( 3.14 );\n  cout << F << endl;\n  // 3.1400   3.1400   3.1400\n  // 3.1400   3.1400   3.1400\n\n  F = F.ones();\n  F.col( 0 ) *= datum::pi;\n  F.col( 1 ) *= datum::inf;\n  F.col( 2 ) *= datum::nan;\n  cout << F << endl;\n  // 3.1416      inf      nan\n  // 3.1416      inf      nan\n\n  return 0;\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://arma.sourceforge.net/","rel":["nofollow"]},"children":[{"type":"text","value":"Armadillo C++ library for linear algebra & scientific computing"}]}]}]}]},"date":"2019-12-17T00:00:00.000Z","draft":false,"tags":["armadillo","C++","cpp","álgebra linear"],"Thumbnail":"img/headers/armadillo.jpg","math":true,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Algebra linear com a biblioteca "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"armadillo"}]},{"type":"text","value":"."}]},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n$$\nA_{m,n} =\n\\begin{pmatrix}\na_{1,1} & a_{1,2} & \\cdots & a_{1,n} \\\\\na_{2,1} & a_{2,2} & \\cdots & a_{2,n} \\\\\n\\vdots  & \\vdots  & \\ddots & \\vdots  \\\\\na_{m,1} & a_{m,2} & \\cdots & a_{m,n} \n\\end{pmatrix}\n$$\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Armadillo"}]},{"type":"text","value":" é uma biblioteca de álgebra linear para C++ rápida e fácil de usar, com sintaxe parecida com a do "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Matlab"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Provê suporte para:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"vetores (tensores de primeira ordem)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"matrizes (tensores de segunda ordem)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"cubos (tensores de terceira ordem)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"matrizes densas e esparsas"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"números inteiros, de ponto flutuante e complexos"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"decomposição (via LAPACK)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"multi-thread (Intel MKL ou OpenBLAS)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"avaliador de expressão baseado em meta-programação"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"paralelização (via OpenMP)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Principais usos:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"machine learning"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"reconhecimento de padrões"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"visão computacional"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"processamento de sinais"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"bioinformática"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"estatística"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"finanças"}]}]},{"type":"element","tag":"h2","props":{"id":"instalação-no-debian"},"children":[{"type":"text","value":"Instalação no Debian"}]},{"type":"element","tag":"code","props":{"code":"apt install libarmadillo-dev\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-37a362"},"children":[{"type":"text","value":"apt install libarmadillo-dev"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"instalação-no-macos"},"children":[{"type":"text","value":"Instalação no MacOS"}]},{"type":"element","tag":"code","props":{"code":"brew install armadillo\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-37a362"},"children":[{"type":"text","value":"brew install armadillo"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"exemplos-de-uso"},"children":[{"type":"text","value":"Exemplos de uso"}]},{"type":"element","tag":"code","props":{"code":"#include <armadillo>\n#include <iostream>\n\nusing namespace std;\nusing namespace arma;\n\nint main()\n{\n  // inicia o gerador de números aleatórios\n  arma_rng::set_seed_random();\n\n  // Cria uma matriz com dados aleatório com dimensão 2x3\n  auto A = randu( 2, 3 );\n  cout << A << endl;\n  //    0.7038   0.6819   0.9555\n  //    0.3804   0.9666   0.9270\n\n  // Transposta\n  cout << A.t() << endl;\n  //    0.7526   0.5681\n  //    0.5874   0.9469\n  //    0.3562   0.9346\n\n  // Multiplicação de matrizes\n  cout << A.t() * A << endl;\n  //    0.0536   0.2644   0.2534\n  //    0.4731   0.3874   0.9599\n  //    0.1739   0.3313   0.4768\n\n  mat B( 3, 3, fill::randu );\n  cout << B << endl;\n  //    0.9563   0.8955   0.0919\n  //    0.3291   0.3086   0.3452\n  //    0.1894   0.9898   0.8642\n\n  cout << \"Determinante: \" << det( B ) << endl;\n  // Determinante: -0.243228\n\n  auto C = randu( 3, 3 );\n  cout << C << endl;\n  //    0.5561   0.6219   0.2147\n  //    0.3105   0.2813   0.9172\n  //    0.3408   0.1925   0.4703\n  cout << \"Determinante: \" << det( C ) << endl;\n  // Determinante: -0.254525\n\n  mat D = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n  cout << D << endl;\n  //    1.0000   2.0000   3.0000\n  //    4.0000   5.0000   6.0000\n  //    7.0000   8.0000   9.0000\n  cout << \"Determinante: \" << det( D ) << endl;\n  // Determinante: 6.66134e-16\n\n  D.row( 0 ) = D.row( 1 ) + D.row( 2 );\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  //  4.0000    5.0000    6.0000\n  //  7.0000    8.0000    9.0000\n\n  D.row( 1 ) = D.row( 1 ) * 5;\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  // 20.0000   25.0000   30.0000\n  //  7.0000    8.0000    9.0000\n  //\n\n  D.row( 2 ).zeros();\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  // 20.0000   25.0000   30.0000\n  //       0         0         0\n\n  D.col( 2 ) = D.col( 2 ) + 10;\n  cout << D << endl;\n  // 11.0000   13.0000   25.0000\n  // 20.0000   25.0000   40.0000\n  //       0         0   10.0000\n\n  D = diagmat( D );\n  cout << D << endl;\n  // 11.0000         0         0\n  //       0   25.0000         0\n  //       0         0   10.0000\n\n  D.save( \"D.bin\" );\n\n  D.save( \"D.txt\", arma_ascii );\n  // ARMA_MAT_TXT_FN008\n  // 3 3\n  //    1.10000000000000e+01   0.00000000000000e+00   0.00000000000000e+00\n  //    0.00000000000000e+00   2.50000000000000e+01   0.00000000000000e+00\n  //    0.00000000000000e+00   0.00000000000000e+00   1.00000000000000e+01\n\n  auto O = ones( 2, 2 );\n  cout << O << endl;\n  // 1.0000   1.0000\n  // 1.0000   1.0000\n\n  auto Z = zeros( 3, 5 );\n  cout << Z << endl;\n  // 0        0        0        0        0\n  // 0        0        0        0        0\n  // 0        0        0        0        0\n\n  mat F1, F2;\n  F1.load( \"D.bin\" );\n  F2.load( \"D.txt\" );\n  cout << F1 << endl;\n  // 11.0000         0         0\n  //       0   25.0000         0\n  //       0         0   10.000\n\n  cout << F1 - F2 << endl;\n  // 0        0        0\n  // 0        0        0\n  // 0        0        0\n\n  mat F( 2, 3 );\n  F.fill( 3.14 );\n  cout << F << endl;\n  // 3.1400   3.1400   3.1400\n  // 3.1400   3.1400   3.1400\n\n  F = F.ones();\n  F.col( 0 ) *= datum::pi;\n  F.col( 1 ) *= datum::inf;\n  F.col( 2 ) *= datum::nan;\n  cout << F << endl;\n  // 3.1416      inf      nan\n  // 3.1416      inf      nan\n\n  return 0;\n}\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"#include <armadillo>\n#include <iostream>\n\nusing namespace std;\nusing namespace arma;\n\nint main()\n{\n  // inicia o gerador de números aleatórios\n  arma_rng::set_seed_random();\n\n  // Cria uma matriz com dados aleatório com dimensão 2x3\n  auto A = randu( 2, 3 );\n  cout << A << endl;\n  //    0.7038   0.6819   0.9555\n  //    0.3804   0.9666   0.9270\n\n  // Transposta\n  cout << A.t() << endl;\n  //    0.7526   0.5681\n  //    0.5874   0.9469\n  //    0.3562   0.9346\n\n  // Multiplicação de matrizes\n  cout << A.t() * A << endl;\n  //    0.0536   0.2644   0.2534\n  //    0.4731   0.3874   0.9599\n  //    0.1739   0.3313   0.4768\n\n  mat B( 3, 3, fill::randu );\n  cout << B << endl;\n  //    0.9563   0.8955   0.0919\n  //    0.3291   0.3086   0.3452\n  //    0.1894   0.9898   0.8642\n\n  cout << \"Determinante: \" << det( B ) << endl;\n  // Determinante: -0.243228\n\n  auto C = randu( 3, 3 );\n  cout << C << endl;\n  //    0.5561   0.6219   0.2147\n  //    0.3105   0.2813   0.9172\n  //    0.3408   0.1925   0.4703\n  cout << \"Determinante: \" << det( C ) << endl;\n  // Determinante: -0.254525\n\n  mat D = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n  cout << D << endl;\n  //    1.0000   2.0000   3.0000\n  //    4.0000   5.0000   6.0000\n  //    7.0000   8.0000   9.0000\n  cout << \"Determinante: \" << det( D ) << endl;\n  // Determinante: 6.66134e-16\n\n  D.row( 0 ) = D.row( 1 ) + D.row( 2 );\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  //  4.0000    5.0000    6.0000\n  //  7.0000    8.0000    9.0000\n\n  D.row( 1 ) = D.row( 1 ) * 5;\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  // 20.0000   25.0000   30.0000\n  //  7.0000    8.0000    9.0000\n  //\n\n  D.row( 2 ).zeros();\n  cout << D << endl;\n  // 11.0000   13.0000   15.0000\n  // 20.0000   25.0000   30.0000\n  //       0         0         0\n\n  D.col( 2 ) = D.col( 2 ) + 10;\n  cout << D << endl;\n  // 11.0000   13.0000   25.0000\n  // 20.0000   25.0000   40.0000\n  //       0         0   10.0000\n\n  D = diagmat( D );\n  cout << D << endl;\n  // 11.0000         0         0\n  //       0   25.0000         0\n  //       0         0   10.0000\n\n  D.save( \"D.bin\" );\n\n  D.save( \"D.txt\", arma_ascii );\n  // ARMA_MAT_TXT_FN008\n  // 3 3\n  //    1.10000000000000e+01   0.00000000000000e+00   0.00000000000000e+00\n  //    0.00000000000000e+00   2.50000000000000e+01   0.00000000000000e+00\n  //    0.00000000000000e+00   0.00000000000000e+00   1.00000000000000e+01\n\n  auto O = ones( 2, 2 );\n  cout << O << endl;\n  // 1.0000   1.0000\n  // 1.0000   1.0000\n\n  auto Z = zeros( 3, 5 );\n  cout << Z << endl;\n  // 0        0        0        0        0\n  // 0        0        0        0        0\n  // 0        0        0        0        0\n\n  mat F1, F2;\n  F1.load( \"D.bin\" );\n  F2.load( \"D.txt\" );\n  cout << F1 << endl;\n  // 11.0000         0         0\n  //       0   25.0000         0\n  //       0         0   10.000\n\n  cout << F1 - F2 << endl;\n  // 0        0        0\n  // 0        0        0\n  // 0        0        0\n\n  mat F( 2, 3 );\n  F.fill( 3.14 );\n  cout << F << endl;\n  // 3.1400   3.1400   3.1400\n  // 3.1400   3.1400   3.1400\n\n  F = F.ones();\n  F.col( 0 ) *= datum::pi;\n  F.col( 1 ) *= datum::inf;\n  F.col( 2 ) *= datum::nan;\n  cout << F << endl;\n  // 3.1416      inf      nan\n  // 3.1416      inf      nan\n\n  return 0;\n}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://arma.sourceforge.net/","rel":["nofollow"]},"children":[{"type":"text","value":"Armadillo C++ library for linear algebra & scientific computing"}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-37a362{color:#F8F8F2}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"instalação-no-debian","depth":2,"text":"Instalação no Debian"},{"id":"instalação-no-macos","depth":2,"text":"Instalação no MacOS"},{"id":"exemplos-de-uso","depth":2,"text":"Exemplos de uso"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-armadillo.md","_source":"content","_file":"til/cpp-armadillo.md","_extension":"md"},{"_path":"/til/cpp-lambda","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"C++ Lambda","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"funções-de-primeira-classe"},"children":[{"type":"text","value":"Funções de primeira classe"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Em programação funcional funções são "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"cidadães de primeira classe"}]},{"type":"text","value":", o que\nsignifica que elas se comportam com dados e suportam quaisquer operações que\na linguagem permita."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Algumas características das funções de primeira classe são:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"atribuir uma função a uma variável"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"passar uma função como parâmetro para outra função"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retornar a função como valor de outra função"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"armazenar a função em uma estrutura de dados"}]}]},{"type":"element","tag":"h2","props":{"id":"lambdas"},"children":[{"type":"text","value":"Lambdas"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lambdas são funções anônimas (sem um nome) definidas "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"in-place"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"//  1   2                           3                               4\n   [ ] ( ) { std::cout << \"Hello from C++ Lambda!\" << std::endl; } ( );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"//  1   2                           3                               4\n   [ ] ( ) { std::cout << \"Hello from C++ Lambda!\" << std::endl; } ( );\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vamos ver o que cada grupo significa:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"[]"}]},{"type":"text","value":" "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"lambda introducer"}]},{"type":"text","value":" ou "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"lambda closure"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"2 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"()"}]},{"type":"text","value":" lista de parâmetros (você pode omitir estes parêntes se a função não receber parâmetros)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"3 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"{}"}]},{"type":"text","value":" corpo da função lambda"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"4 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"()"}]},{"type":"text","value":" executa a função"}]}]},{"type":"element","tag":"h2","props":{"id":"programação-funcional-com-lambdas"},"children":[{"type":"text","value":"Programação funcional com lambdas"}]},{"type":"element","tag":"code","props":{"code":"// f(x,y) = x² + y² + 2xy;\nstd::function<int(int,int)> fxsquare = [](int x, int y) -> int {\n  int xsquare = [](int x) -> int { return x * x; }(x);\n  int ysquare = [](int y) -> int { return y * y; }(y);\n  int twoxy   = [](int x, int y) -> int { return 2 * x * y; }(x,y);\n  return xsquare + ysquare + twoxy;\n}\n\ncout << fxsquare(5,3) << endl; // 64\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// f(x,y) = x² + y² + 2xy;\nstd::function<int(int,int)> fxsquare = [](int x, int y) -> int {\n  int xsquare = [](int x) -> int { return x * x; }(x);\n  int ysquare = [](int y) -> int { return y * y; }(y);\n  int twoxy   = [](int x, int y) -> int { return 2 * x * y; }(x,y);\n  return xsquare + ysquare + twoxy;\n}\n\ncout << fxsquare(5,3) << endl; // 64\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"[std::array]("},{"type":"element","tag":"binding","props":{"value":"< ref \"cpp-array.md\" >"},"children":[]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.codeproject.com/Articles/1267996/Functional-Programming-in-Cplusplus","rel":["nofollow"]},"children":[{"type":"text","value":"Functional Programming in C++"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://medium.com/@angelorubin/javascript-first-class-function-fun%C3%A7%C3%B5es-de-primeira-classe-7ebf63d2c83a","rel":["nofollow"]},"children":[{"type":"text","value":"Programação Funcional em Javascript — First-Class Function (Funções de Primeira Classe)"}]}]}]}]},"date":"2019-07-07T00:00:00.000Z","draft":false,"tags":["C++","cpp","lambda"],"Thumbnail":"img/headers/cpp.png","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"funções-de-primeira-classe"},"children":[{"type":"text","value":"Funções de primeira classe"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Em programação funcional funções são "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"cidadães de primeira classe"}]},{"type":"text","value":", o que\nsignifica que elas se comportam com dados e suportam quaisquer operações que\na linguagem permita."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Algumas características das funções de primeira classe são:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"atribuir uma função a uma variável"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"passar uma função como parâmetro para outra função"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"retornar a função como valor de outra função"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"armazenar a função em uma estrutura de dados"}]}]},{"type":"element","tag":"h2","props":{"id":"lambdas"},"children":[{"type":"text","value":"Lambdas"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lambdas são funções anônimas (sem um nome) definidas "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"in-place"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"//  1   2                           3                               4\n   [ ] ( ) { std::cout << \"Hello from C++ Lambda!\" << std::endl; } ( );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"//  1   2                           3                               4\n   [ ] ( ) { std::cout << \"Hello from C++ Lambda!\" << std::endl; } ( );"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vamos ver o que cada grupo significa:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"[]"}]},{"type":"text","value":" "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"lambda introducer"}]},{"type":"text","value":" ou "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"lambda closure"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"2 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"()"}]},{"type":"text","value":" lista de parâmetros (você pode omitir estes parêntes se a função não receber parâmetros)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"3 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"{}"}]},{"type":"text","value":" corpo da função lambda"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"4 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"()"}]},{"type":"text","value":" executa a função"}]}]},{"type":"element","tag":"h2","props":{"id":"programação-funcional-com-lambdas"},"children":[{"type":"text","value":"Programação funcional com lambdas"}]},{"type":"element","tag":"code","props":{"code":"// f(x,y) = x² + y² + 2xy;\nstd::function<int(int,int)> fxsquare = [](int x, int y) -> int {\n  int xsquare = [](int x) -> int { return x * x; }(x);\n  int ysquare = [](int y) -> int { return y * y; }(y);\n  int twoxy   = [](int x, int y) -> int { return 2 * x * y; }(x,y);\n  return xsquare + ysquare + twoxy;\n}\n\ncout << fxsquare(5,3) << endl; // 64\n","language":"cpp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-afa447"},"children":[{"type":"text","value":"// f(x,y) = x² + y² + 2xy;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-ec9783"},"children":[{"type":"text","value":"std"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"::function"}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":")"}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" fxsquare "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" []("}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ddbedc"},"children":[{"type":"text","value":"x"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ddbedc"},"children":[{"type":"text","value":"y"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":") ->"}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":" int "}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"{"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" xsquare "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" []("}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ddbedc"},"children":[{"type":"text","value":"x"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":") ->"}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":" int "}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"{ "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" x; }(x);"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" ysquare "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" []("}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ddbedc"},"children":[{"type":"text","value":"y"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":") ->"}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":" int "}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"{ "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" y "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" y; }(y);"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" twoxy   "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" []("}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ddbedc"},"children":[{"type":"text","value":"x"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ddbedc"},"children":[{"type":"text","value":"y"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":") ->"}]},{"type":"element","tag":"span","props":{"class":"ct-2711df"},"children":[{"type":"text","value":" int "}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"{ "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-a95df8"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" x "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" y; }(x,y);"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" xsquare "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" ysquare "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" twoxy;"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"cout "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-ec9783"},"children":[{"type":"text","value":"fxsquare"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-a95df8"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-a95df8"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":") "}]},{"type":"element","tag":"span","props":{"class":"ct-edd3fe"},"children":[{"type":"text","value":"<<"}]},{"type":"element","tag":"span","props":{"class":"ct-39bb64"},"children":[{"type":"text","value":" endl;"}]},{"type":"element","tag":"span","props":{"class":"ct-afa447"},"children":[{"type":"text","value":" // 64"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"[std::array]("},{"type":"element","tag":"binding","props":{"value":"< ref \"cpp-array.md\" >"},"children":[]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.codeproject.com/Articles/1267996/Functional-Programming-in-Cplusplus","rel":["nofollow"]},"children":[{"type":"text","value":"Functional Programming in C++"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://medium.com/@angelorubin/javascript-first-class-function-fun%C3%A7%C3%B5es-de-primeira-classe-7ebf63d2c83a","rel":["nofollow"]},"children":[{"type":"text","value":"Programação Funcional em Javascript — First-Class Function (Funções de Primeira Classe)"}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-a95df8{color:#AE81FF}.ct-ddbedc{color:#FD971F}.ct-2711df{color:#66D9EF}.ct-edd3fe{color:#F92672}.ct-39bb64{color:#F8F8F2}.ct-ec9783{color:#A6E22E}.ct-afa447{color:#88846F}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"funções-de-primeira-classe","depth":2,"text":"Funções de primeira classe"},{"id":"lambdas","depth":2,"text":"Lambdas"},{"id":"programação-funcional-com-lambdas","depth":2,"text":"Programação funcional com lambdas"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-lambda.md","_source":"content","_file":"til/cpp-lambda.md","_extension":"md"},{"_path":"/til/cpp-mlpack-feed-forward-neural-network-no-debian","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Feed Forward Neural Network no debian com mlpack","description":"Como criar usando C++ uma rede neural do tipo feed forward no Debian stable","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Este artigo mostra como criar uma rede neural simples no\n"},{"type":"element","tag":"a","props":{"href":"https://www.debian.org/releases/stable/","rel":["nofollow"]},"children":[{"type":"text","value":"Debian stable"}]},{"type":"text","value":" utilizando a\n"},{"type":"element","tag":"a","props":{"href":"http://www.mlpack.org","rel":["nofollow"]},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":". A "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":" é uma biblioteca popular e de alta\nperformance para aprendizado de máquina em C++."}]},{"type":"element","tag":"h2","props":{"id":"versões-do-mlpack-disponíveis-do-debian"},"children":[{"type":"text","value":"Versões do mlpack disponíveis do Debian"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As versões disponíveis no momento da escrita deste artigo são:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"center"},"children":[{"type":"text","value":"Versão do Debian"}]},{"type":"element","tag":"th","props":{"align":"center"},"children":[{"type":"text","value":"Versão do mlpack"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Arquiteturas"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"jessie (oldstable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"1.0.10-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 armel armhf i386"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"stretch (stable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"2.1.1-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"buster (testing)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"3.0.4-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"sid (unstable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"3.0.4-1+b1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"kfreebsd-amd64 kfreebsd-i386"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As versões do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"libmlpack-dev"}]},{"type":"text","value":" disponíveis para o "},{"type":"element","tag":"a","props":{"href":"http://debian.org","rel":["nofollow"]},"children":[{"type":"text","value":"Debian"}]},{"type":"text","value":" podem ser consultadas neste\n"},{"type":"element","tag":"a","props":{"href":"https://packages.debian.org/search?keywords=libmlpack-dev&searchon=names&suite=all&section=all","rel":["nofollow"]},"children":[{"type":"text","value":"link"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Neste artigo usaremos a versão "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"3.0.4"}]},{"type":"text","value":" presente no "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"utilizando-pacotes-testing-junto-com-stable"},"children":[{"type":"text","value":"Utilizando pacotes testing junto com stable"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Eu prefiro utilizar somente os pacotes "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":" nos servidores por serem\nversões muito bem testadas. Normalmente as últimas versões não estão\ndisponíveis no repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":", mas sim nos repositórios "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":"\ne "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"unstable"}]},{"type":"text","value":". O repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":" contém próximo candidato a se tornar\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":" de cada pacote. O repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"unstable"}]},{"type":"text","value":" contém a última versão\ndisponível de cada pacote."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Misturar repositórios diferente pode ser algo tranquilo de manter se feito com cuidado.\nÉ só indicar "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"precisamente"}]},{"type":"text","value":" qual pacote deve ser pego de cada repositório.\nO Debian tem um mecanismo bem fácil de usar para realizar esta tarefa.\nNo meu caso eu tenho uma regra geral: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"pegar sempre do stable"}]},{"type":"text","value":" e algumas\npoucas exceções para pacotes específicos."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para mesclar diferentes repositórios basta "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"pinar"}]},{"type":"text","value":" os pacotes para indicar quais versões serão usadas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para marcar o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":" e o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"armadillo"}]},{"type":"text","value":" para serem instalados a partir do\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":" crie um arquivo chamado "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/apt/preferences.d/mlpack"}]},{"type":"text","value":" com\no seguinte conteúdo:"}]},{"type":"element","tag":"code","props":{"code":"Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/apt/preferences.d/mlpack"}]},{"type":"text","value":" poderia ter qualquer nome, mas é conveniente usar algo descritivo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"E para desfazer a pinagem basta remover o arquivo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então é só proceder a instalação normal com o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"apt"}]},{"type":"text","value":" como de costume:"}]},{"type":"element","tag":"code","props":{"code":"apt install libmlpack-dev\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"apt install libmlpack-dev\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"dados-de-treinamento"},"children":[{"type":"text","value":"Dados de treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vamos utilizar dois grupos de dados, cada um com duas variáveis (x e y)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Olhando nosso conjunto de dados de cima podemos ver claramente duas curvas, uma para cada conjunto."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Grupo de dados de treinamento","src":"/til/mlpack-foo-1.gif#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para facilitar a visualização, o primeiro grupo está em "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"z=0"}]},{"type":"text","value":" e o segundo em "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"z=1"}]},{"type":"text","value":", conforme pode ser visto na\nanimação abaixo. É mais ou menos isso que a rede deverá "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"aprender"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Grupo de dados de treinamento","src":"/til/mlpack-foo-2.gif#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"foo.csv"}]},{"type":"text","value":" contém as duas curvas com os pontos distribuídos do modo\naleatório para não favorecer ou influenciar o treinamento. São ao todo 400\nlinhas e 3 colunas. As duas primeiras colunas são as "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"entradas"}]},{"type":"text","value":" e a terceira\né o "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"grupo"}]},{"type":"text","value":" a qual pertencem."}]},{"type":"element","tag":"code","props":{"code":"-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n...\n","language":"csv"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n...\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"implementação"},"children":[{"type":"text","value":"Implementação"}]},{"type":"element","tag":"h3","props":{"id":"carregando-as-dependências"},"children":[{"type":"text","value":"Carregando as dependências"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Incluindo os cabeçalhos específicos para rede neural artificial (ANN)."}]},{"type":"element","tag":"code","props":{"code":"#include <mlpack/core.hpp>\n#include <mlpack/methods/ann/ffn.hpp>\n#include <mlpack/methods/ann/layer/layer.hpp>\n#include <mlpack/methods/ann/loss_functions/mean_squared_error.hpp>\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#include <mlpack/core.hpp>\n#include <mlpack/methods/ann/ffn.hpp>\n#include <mlpack/methods/ann/layer/layer.hpp>\n#include <mlpack/methods/ann/loss_functions/mean_squared_error.hpp>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para deixar o código bem mais legível alguns namespaces serão usados por padrão."}]},{"type":"element","tag":"code","props":{"code":"using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"carregar-e-transpor-os-dados-do-arquivo-csv"},"children":[{"type":"text","value":"Carregar e transpor os dados do arquivo CSV"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As matrizes do "},{"type":"element","tag":"a","props":{"href":"http://arma.sourceforge.net/","rel":["nofollow"]},"children":[{"type":"text","value":"Armadillo"}]},{"type":"text","value":" (pacote de álgebra linear do mlpack) são armazenada no\nformato "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"column-major"}]},{"type":"text","value":"; isto significa que no disco cada coluna é localizada\nnuma região contígua de memória. Veja\n"},{"type":"element","tag":"a","props":{"href":"https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/matrices.html","rel":["nofollow"]},"children":[{"type":"text","value":"detalhes"}]},{"type":"text","value":" na\ndocumentação do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Esta é uma conveniência bem interessante, pois para escrever os arquivos os\nregistros são entrados por linha e para processamento são tratados em colunas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então além de carregar é preciso transpor a matriz de dados."}]},{"type":"element","tag":"code","props":{"code":"  // lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  // transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout << \"Linhas:  \" << data.n_rows << endl; // 3\n  cout << \"Colunas: \" << data.n_cols << endl; // 400\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  // lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  // transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout << \"Linhas:  \" << data.n_rows << endl; // 3\n  cout << \"Colunas: \" << data.n_cols << endl; // 400\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A matriz de dados foi carregada e precisa ser dividida entre dados de treinamento e dados de teste."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Dados depois de carregados","src":"/til/mlpack-data.svg#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É muito importante que o modelo nunca veja os dados de teste para que se tenha\numa boa generalização."}]},{"type":"element","tag":"h3","props":{"id":"constantes-para-os-índices"},"children":[{"type":"text","value":"Constantes para os índices"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para facilitar a leitura do fonte e evitar "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"números mágicos"}]},{"type":"text","value":" no código defini algumas constantes convenientes:"}]},{"type":"element","tag":"code","props":{"code":"  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note que neste caso serão usadas 10 amostras para teste."}]},{"type":"element","tag":"h3","props":{"id":"dados-de-entrada-para-treinamento"},"children":[{"type":"text","value":"Dados de entrada para treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de entrada para treinamento."}]},{"type":"element","tag":"code","props":{"code":"  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-saída-para-treinamento"},"children":[{"type":"text","value":"Dados de saída para treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de saída para treinamento."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-entrada-para-teste"},"children":[{"type":"text","value":"Dados de entrada para teste"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de entrada para teste."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-saída-para-teste"},"children":[{"type":"text","value":"Dados de saída para teste"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de saída para teste."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"visualizando-os-dados-de-teste"},"children":[{"type":"text","value":"Visualizando os dados de teste"}]},{"type":"element","tag":"code","props":{"code":"  cout << \"Dados de entrada para teste: \\n\" << testdata << endl;\n  cout << \"Dados de saída para teste: \\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  cout << \"Dados de entrada para teste: \\n\" << testdata << endl;\n  cout << \"Dados de saída para teste: \\n\" << testlabels << endl;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É importante notar que os dados de teste contém amostras de ambos os grupos\ne estão distribuídos em todo o espaço de amostra."}]},{"type":"element","tag":"code","props":{"code":"Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"construindo-a-rede-neural"},"children":[{"type":"text","value":"Construindo a rede neural"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"img","src":"/til/mlpack-ffn.svg#center"},"children":[]}]},{"type":"element","tag":"code","props":{"code":"  // Feed Forward Network\n  // FFN<tipo-de-saída-das-camadas, regra-de-inicialização> model;\n  FFN<MeanSquaredError<>, RandomInitialization> model;\n  // Adiciona camada com 2 entradas e 8 saídas\n  model.Add<Linear<>>( traindata.n_rows, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 8 saídas\n  model.Add<Linear<>>( 8, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 1 saída\n  model.Add<Linear<>>( 8, 1 );\n  model.Add<SigmoidLayer<>>();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  // Feed Forward Network\n  // FFN<tipo-de-saída-das-camadas, regra-de-inicialização> model;\n  FFN<MeanSquaredError<>, RandomInitialization> model;\n  // Adiciona camada com 2 entradas e 8 saídas\n  model.Add<Linear<>>( traindata.n_rows, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 8 saídas\n  model.Add<Linear<>>( 8, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 1 saída\n  model.Add<Linear<>>( 8, 1 );\n  model.Add<SigmoidLayer<>>();\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"treinamento"},"children":[{"type":"text","value":"Treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A partir da inicialização aleatória dos pesos da conexões inicia-se o treinamento."}]},{"type":"element","tag":"code","props":{"code":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    // Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    // Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout << \"Erro: \" << diff * diff.t();\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    // Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    // Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout << \"Erro: \" << diff * diff.t();\n  }\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note o erro sendo reduzido a cada treinamento."}]},{"type":"element","tag":"code","props":{"code":"Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"testando-o-modelo-ajustado"},"children":[{"type":"text","value":"Testando o modelo ajustado"}]},{"type":"element","tag":"code","props":{"code":"  mat assignments;\n  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  mat assignments;\n  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Saída:"}]},{"type":"element","tag":"code","props":{"code":"Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"salvando-modelo-para-continuar-depois"},"children":[{"type":"text","value":"Salvando modelo para continuar depois"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O modelo pode ser salvo a qualquer momento e recarregado para continuar o treinamento.\nUm arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"XML"}]},{"type":"text","value":" serializado pelo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":" é salvo."}]},{"type":"element","tag":"code","props":{"code":"  Save( \"model.xml\", \"model\", model, false );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  Save( \"model.xml\", \"model\", model, false );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"carregando-o-modelo-salvo-na-sessão-anterior"},"children":[{"type":"text","value":"Carregando o modelo salvo na sessão anterior"}]},{"type":"element","tag":"code","props":{"code":"  Load( \"model.xml\", \"model\", model );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  Load( \"model.xml\", \"model\", model );\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"nova-sessão-de-treinamento-para-refinar"},"children":[{"type":"text","value":"Nova sessão de treinamento para refinar"}]},{"type":"element","tag":"code","props":{"code":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"novos-testes"},"children":[{"type":"text","value":"Novos testes"}]},{"type":"element","tag":"code","props":{"code":"  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Saída:"}]},{"type":"element","tag":"code","props":{"code":"Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"salvando-o-modelo-atualizado"},"children":[{"type":"text","value":"Salvando o modelo atualizado"}]},{"type":"element","tag":"code","props":{"code":"  Save( \"model2.xml\", \"model\", model, false );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"  Save( \"model2.xml\", \"model\", model, false );\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"código-fonte-completo"},"children":[{"type":"text","value":"Código fonte completo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O código fonte completo pode ser encontrado no\n"},{"type":"element","tag":"a","props":{"href":"https://github.com/geraldolsribeiro/mlpack-tutorials/tree/master/ffn","rel":["nofollow"]},"children":[{"type":"text","value":"github"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para baixar e compilar o fonte deste artigo utilize:"}]},{"type":"element","tag":"code","props":{"code":"git clone https://github.com/geraldolsribeiro/mlpack-tutorials/\ncd mlpack-tutorials/ffn\nmake\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/geraldolsribeiro/mlpack-tutorials/\ncd mlpack-tutorials/ffn\nmake\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://wiki.debian.org/AptPreferences","rel":["nofollow"]},"children":[{"type":"text","value":"Apt Preferences"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/anntutorial.html","rel":["nofollow"]},"children":[{"type":"text","value":"Neural Network Tutorial"}]}]}]}]},"date":"2019-04-29T00:00:00.000Z","tags":["ffn","mlpack","debian","apt","C++","cpp","armadillo"],"thumbnail":"/img/headers/ffn.jpg","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Este artigo mostra como criar uma rede neural simples no\n"},{"type":"element","tag":"a","props":{"href":"https://www.debian.org/releases/stable/","rel":["nofollow"]},"children":[{"type":"text","value":"Debian stable"}]},{"type":"text","value":" utilizando a\n"},{"type":"element","tag":"a","props":{"href":"http://www.mlpack.org","rel":["nofollow"]},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":". A "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":" é uma biblioteca popular e de alta\nperformance para aprendizado de máquina em C++."}]},{"type":"element","tag":"h2","props":{"id":"versões-do-mlpack-disponíveis-do-debian"},"children":[{"type":"text","value":"Versões do mlpack disponíveis do Debian"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As versões disponíveis no momento da escrita deste artigo são:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"center"},"children":[{"type":"text","value":"Versão do Debian"}]},{"type":"element","tag":"th","props":{"align":"center"},"children":[{"type":"text","value":"Versão do mlpack"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Arquiteturas"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"jessie (oldstable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"1.0.10-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 armel armhf i386"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"stretch (stable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"2.1.1-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"buster (testing)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"3.0.4-1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"sid (unstable)"}]},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"3.0.4-1+b1"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"kfreebsd-amd64 kfreebsd-i386"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As versões do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"libmlpack-dev"}]},{"type":"text","value":" disponíveis para o "},{"type":"element","tag":"a","props":{"href":"http://debian.org","rel":["nofollow"]},"children":[{"type":"text","value":"Debian"}]},{"type":"text","value":" podem ser consultadas neste\n"},{"type":"element","tag":"a","props":{"href":"https://packages.debian.org/search?keywords=libmlpack-dev&searchon=names&suite=all&section=all","rel":["nofollow"]},"children":[{"type":"text","value":"link"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Neste artigo usaremos a versão "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"3.0.4"}]},{"type":"text","value":" presente no "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"utilizando-pacotes-testing-junto-com-stable"},"children":[{"type":"text","value":"Utilizando pacotes testing junto com stable"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Eu prefiro utilizar somente os pacotes "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":" nos servidores por serem\nversões muito bem testadas. Normalmente as últimas versões não estão\ndisponíveis no repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":", mas sim nos repositórios "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":"\ne "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"unstable"}]},{"type":"text","value":". O repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":" contém próximo candidato a se tornar\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"stable"}]},{"type":"text","value":" de cada pacote. O repositório "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"unstable"}]},{"type":"text","value":" contém a última versão\ndisponível de cada pacote."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Misturar repositórios diferente pode ser algo tranquilo de manter se feito com cuidado.\nÉ só indicar "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"precisamente"}]},{"type":"text","value":" qual pacote deve ser pego de cada repositório.\nO Debian tem um mecanismo bem fácil de usar para realizar esta tarefa.\nNo meu caso eu tenho uma regra geral: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"pegar sempre do stable"}]},{"type":"text","value":" e algumas\npoucas exceções para pacotes específicos."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para mesclar diferentes repositórios basta "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"pinar"}]},{"type":"text","value":" os pacotes para indicar quais versões serão usadas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para marcar o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":" e o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"armadillo"}]},{"type":"text","value":" para serem instalados a partir do\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"testing"}]},{"type":"text","value":" crie um arquivo chamado "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/apt/preferences.d/mlpack"}]},{"type":"text","value":" com\no seguinte conteúdo:"}]},{"type":"element","tag":"code","props":{"code":"Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002\n","language":"text"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/apt/preferences.d/mlpack"}]},{"type":"text","value":" poderia ter qualquer nome, mas é conveniente usar algo descritivo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"E para desfazer a pinagem basta remover o arquivo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então é só proceder a instalação normal com o "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"apt"}]},{"type":"text","value":" como de costume:"}]},{"type":"element","tag":"code","props":{"code":"apt install libmlpack-dev\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a06c8b"},"children":[{"type":"text","value":"apt install libmlpack-dev"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"dados-de-treinamento"},"children":[{"type":"text","value":"Dados de treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vamos utilizar dois grupos de dados, cada um com duas variáveis (x e y)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Olhando nosso conjunto de dados de cima podemos ver claramente duas curvas, uma para cada conjunto."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Grupo de dados de treinamento","src":"/til/mlpack-foo-1.gif#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para facilitar a visualização, o primeiro grupo está em "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"z=0"}]},{"type":"text","value":" e o segundo em "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"z=1"}]},{"type":"text","value":", conforme pode ser visto na\nanimação abaixo. É mais ou menos isso que a rede deverá "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"aprender"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Grupo de dados de treinamento","src":"/til/mlpack-foo-2.gif#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"foo.csv"}]},{"type":"text","value":" contém as duas curvas com os pontos distribuídos do modo\naleatório para não favorecer ou influenciar o treinamento. São ao todo 400\nlinhas e 3 colunas. As duas primeiras colunas são as "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"entradas"}]},{"type":"text","value":" e a terceira\né o "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"grupo"}]},{"type":"text","value":" a qual pertencem."}]},{"type":"element","tag":"code","props":{"code":"-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n...\n","language":"csv"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n..."}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"implementação"},"children":[{"type":"text","value":"Implementação"}]},{"type":"element","tag":"h3","props":{"id":"carregando-as-dependências"},"children":[{"type":"text","value":"Carregando as dependências"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Incluindo os cabeçalhos específicos para rede neural artificial (ANN)."}]},{"type":"element","tag":"code","props":{"code":"#include <mlpack/core.hpp>\n#include <mlpack/methods/ann/ffn.hpp>\n#include <mlpack/methods/ann/layer/layer.hpp>\n#include <mlpack/methods/ann/loss_functions/mean_squared_error.hpp>\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"#include <mlpack/core.hpp>\n#include <mlpack/methods/ann/ffn.hpp>\n#include <mlpack/methods/ann/layer/layer.hpp>\n#include <mlpack/methods/ann/loss_functions/mean_squared_error.hpp>"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para deixar o código bem mais legível alguns namespaces serão usados por padrão."}]},{"type":"element","tag":"code","props":{"code":"using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"carregar-e-transpor-os-dados-do-arquivo-csv"},"children":[{"type":"text","value":"Carregar e transpor os dados do arquivo CSV"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As matrizes do "},{"type":"element","tag":"a","props":{"href":"http://arma.sourceforge.net/","rel":["nofollow"]},"children":[{"type":"text","value":"Armadillo"}]},{"type":"text","value":" (pacote de álgebra linear do mlpack) são armazenada no\nformato "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"column-major"}]},{"type":"text","value":"; isto significa que no disco cada coluna é localizada\nnuma região contígua de memória. Veja\n"},{"type":"element","tag":"a","props":{"href":"https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/matrices.html","rel":["nofollow"]},"children":[{"type":"text","value":"detalhes"}]},{"type":"text","value":" na\ndocumentação do "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"mlpack"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Esta é uma conveniência bem interessante, pois para escrever os arquivos os\nregistros são entrados por linha e para processamento são tratados em colunas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então além de carregar é preciso transpor a matriz de dados."}]},{"type":"element","tag":"code","props":{"code":"  // lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  // transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout << \"Linhas:  \" << data.n_rows << endl; // 3\n  cout << \"Colunas: \" << data.n_cols << endl; // 400\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  // lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  // transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout << \"Linhas:  \" << data.n_rows << endl; // 3\n  cout << \"Colunas: \" << data.n_cols << endl; // 400"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A matriz de dados foi carregada e precisa ser dividida entre dados de treinamento e dados de teste."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Dados depois de carregados","src":"/til/mlpack-data.svg#center"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É muito importante que o modelo nunca veja os dados de teste para que se tenha\numa boa generalização."}]},{"type":"element","tag":"h3","props":{"id":"constantes-para-os-índices"},"children":[{"type":"text","value":"Constantes para os índices"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para facilitar a leitura do fonte e evitar "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"números mágicos"}]},{"type":"text","value":" no código defini algumas constantes convenientes:"}]},{"type":"element","tag":"code","props":{"code":"  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note que neste caso serão usadas 10 amostras para teste."}]},{"type":"element","tag":"h3","props":{"id":"dados-de-entrada-para-treinamento"},"children":[{"type":"text","value":"Dados de entrada para treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de entrada para treinamento."}]},{"type":"element","tag":"code","props":{"code":"  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-saída-para-treinamento"},"children":[{"type":"text","value":"Dados de saída para treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de saída para treinamento."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-entrada-para-teste"},"children":[{"type":"text","value":"Dados de entrada para teste"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de entrada para teste."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"dados-de-saída-para-teste"},"children":[{"type":"text","value":"Dados de saída para teste"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Usando a função "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"submat"}]},{"type":"text","value":" vamos recortar uma porção dos dados para formar os dados de saída para teste."}]},{"type":"element","tag":"code","props":{"code":"  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"visualizando-os-dados-de-teste"},"children":[{"type":"text","value":"Visualizando os dados de teste"}]},{"type":"element","tag":"code","props":{"code":"  cout << \"Dados de entrada para teste: \\n\" << testdata << endl;\n  cout << \"Dados de saída para teste: \\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  cout << \"Dados de entrada para teste: \\n\" << testdata << endl;\n  cout << \"Dados de saída para teste: \\n\" << testlabels << endl;"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É importante notar que os dados de teste contém amostras de ambos os grupos\ne estão distribuídos em todo o espaço de amostra."}]},{"type":"element","tag":"code","props":{"code":"Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"construindo-a-rede-neural"},"children":[{"type":"text","value":"Construindo a rede neural"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"img","src":"/til/mlpack-ffn.svg#center"},"children":[]}]},{"type":"element","tag":"code","props":{"code":"  // Feed Forward Network\n  // FFN<tipo-de-saída-das-camadas, regra-de-inicialização> model;\n  FFN<MeanSquaredError<>, RandomInitialization> model;\n  // Adiciona camada com 2 entradas e 8 saídas\n  model.Add<Linear<>>( traindata.n_rows, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 8 saídas\n  model.Add<Linear<>>( 8, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 1 saída\n  model.Add<Linear<>>( 8, 1 );\n  model.Add<SigmoidLayer<>>();\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  // Feed Forward Network\n  // FFN<tipo-de-saída-das-camadas, regra-de-inicialização> model;\n  FFN<MeanSquaredError<>, RandomInitialization> model;\n  // Adiciona camada com 2 entradas e 8 saídas\n  model.Add<Linear<>>( traindata.n_rows, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 8 saídas\n  model.Add<Linear<>>( 8, 8 );\n  model.Add<SigmoidLayer<>>();\n  // Adiciona camada com 8 entradas e 1 saída\n  model.Add<Linear<>>( 8, 1 );\n  model.Add<SigmoidLayer<>>();"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"treinamento"},"children":[{"type":"text","value":"Treinamento"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A partir da inicialização aleatória dos pesos da conexões inicia-se o treinamento."}]},{"type":"element","tag":"code","props":{"code":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    // Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    // Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout << \"Erro: \" << diff * diff.t();\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    // Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    // Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout << \"Erro: \" << diff * diff.t();\n  }"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note o erro sendo reduzido a cada treinamento."}]},{"type":"element","tag":"code","props":{"code":"Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"testando-o-modelo-ajustado"},"children":[{"type":"text","value":"Testando o modelo ajustado"}]},{"type":"element","tag":"code","props":{"code":"  mat assignments;\n  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  mat assignments;\n  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Saída:"}]},{"type":"element","tag":"code","props":{"code":"Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"salvando-modelo-para-continuar-depois"},"children":[{"type":"text","value":"Salvando modelo para continuar depois"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O modelo pode ser salvo a qualquer momento e recarregado para continuar o treinamento.\nUm arquivo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"XML"}]},{"type":"text","value":" serializado pelo "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"boost"}]},{"type":"text","value":" é salvo."}]},{"type":"element","tag":"code","props":{"code":"  Save( \"model.xml\", \"model\", model, false );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  Save( \"model.xml\", \"model\", model, false );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"carregando-o-modelo-salvo-na-sessão-anterior"},"children":[{"type":"text","value":"Carregando o modelo salvo na sessão anterior"}]},{"type":"element","tag":"code","props":{"code":"  Load( \"model.xml\", \"model\", model );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  Load( \"model.xml\", \"model\", model );"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"nova-sessão-de-treinamento-para-refinar"},"children":[{"type":"text","value":"Nova sessão de treinamento para refinar"}]},{"type":"element","tag":"code","props":{"code":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  for( int i = 0; i < 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"novos-testes"},"children":[{"type":"text","value":"Novos testes"}]},{"type":"element","tag":"code","props":{"code":"  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  model.Predict( testdata, assignments );\n  cout << \"Previsões:\\n\" << assignments << endl;\n  cout << \"Classificação correta:\\n\" << testlabels << endl;"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Saída:"}]},{"type":"element","tag":"code","props":{"code":"Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"salvando-o-modelo-atualizado"},"children":[{"type":"text","value":"Salvando o modelo atualizado"}]},{"type":"element","tag":"code","props":{"code":"  Save( \"model2.xml\", \"model\", model, false );\n","language":"c++"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  Save( \"model2.xml\", \"model\", model, false );"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"código-fonte-completo"},"children":[{"type":"text","value":"Código fonte completo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O código fonte completo pode ser encontrado no\n"},{"type":"element","tag":"a","props":{"href":"https://github.com/geraldolsribeiro/mlpack-tutorials/tree/master/ffn","rel":["nofollow"]},"children":[{"type":"text","value":"github"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para baixar e compilar o fonte deste artigo utilize:"}]},{"type":"element","tag":"code","props":{"code":"git clone https://github.com/geraldolsribeiro/mlpack-tutorials/\ncd mlpack-tutorials/ffn\nmake\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a06c8b"},"children":[{"type":"text","value":"git clone https://github.com/geraldolsribeiro/mlpack-tutorials/"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-1da45a"},"children":[{"type":"text","value":"cd"}]},{"type":"element","tag":"span","props":{"class":"ct-a06c8b"},"children":[{"type":"text","value":" mlpack-tutorials/ffn"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a06c8b"},"children":[{"type":"text","value":"make"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"referências"},"children":[{"type":"text","value":"Referências"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://wiki.debian.org/AptPreferences","rel":["nofollow"]},"children":[{"type":"text","value":"Apt Preferences"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/anntutorial.html","rel":["nofollow"]},"children":[{"type":"text","value":"Neural Network Tutorial"}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-1da45a{color:#66D9EF}.ct-a06c8b{color:#F8F8F2}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"versões-do-mlpack-disponíveis-do-debian","depth":2,"text":"Versões do mlpack disponíveis do Debian"},{"id":"utilizando-pacotes-testing-junto-com-stable","depth":2,"text":"Utilizando pacotes testing junto com stable"},{"id":"dados-de-treinamento","depth":2,"text":"Dados de treinamento"},{"id":"implementação","depth":2,"text":"Implementação","children":[{"id":"carregando-as-dependências","depth":3,"text":"Carregando as dependências"},{"id":"carregar-e-transpor-os-dados-do-arquivo-csv","depth":3,"text":"Carregar e transpor os dados do arquivo CSV"},{"id":"constantes-para-os-índices","depth":3,"text":"Constantes para os índices"},{"id":"dados-de-entrada-para-treinamento","depth":3,"text":"Dados de entrada para treinamento"},{"id":"dados-de-saída-para-treinamento","depth":3,"text":"Dados de saída para treinamento"},{"id":"dados-de-entrada-para-teste","depth":3,"text":"Dados de entrada para teste"},{"id":"dados-de-saída-para-teste","depth":3,"text":"Dados de saída para teste"},{"id":"visualizando-os-dados-de-teste","depth":3,"text":"Visualizando os dados de teste"},{"id":"construindo-a-rede-neural","depth":3,"text":"Construindo a rede neural"},{"id":"treinamento","depth":3,"text":"Treinamento"},{"id":"testando-o-modelo-ajustado","depth":3,"text":"Testando o modelo ajustado"},{"id":"salvando-modelo-para-continuar-depois","depth":3,"text":"Salvando modelo para continuar depois"},{"id":"carregando-o-modelo-salvo-na-sessão-anterior","depth":3,"text":"Carregando o modelo salvo na sessão anterior"},{"id":"nova-sessão-de-treinamento-para-refinar","depth":3,"text":"Nova sessão de treinamento para refinar"},{"id":"novos-testes","depth":3,"text":"Novos testes"},{"id":"salvando-o-modelo-atualizado","depth":3,"text":"Salvando o modelo atualizado"}]},{"id":"código-fonte-completo","depth":2,"text":"Código fonte completo"},{"id":"referências","depth":2,"text":"Referências"}]}},"_type":"markdown","_id":"content:til:cpp-mlpack-feed-forward-neural-network-no-debian.md","_source":"content","_file":"til/cpp-mlpack-feed-forward-neural-network-no-debian.md","_extension":"md"}]