[{"id":0,"location":"/til/cpp-const-cast.html","tags":["C++","cpp","const_cast"],"text":" O operador`const_cast` é utilizado para:  * adicionar um modificador `const` a um tipo * remover um modificador `const` de um tipo * adicionar um modificador `volatile` a um tipo * remover um modificador `volatile` de um tipo  ```c++ #include <iostream> using namespace std;  void f(int* p) {   cout << *p << endl; }  int main(void) {   const int a = 10;   const int* b = &a;    // A função f() espera receber um int* e não um const int*   // f(b);    int* c = const_cast<int*>(b);   f(c);    // Lvalue é const   //  *b = 20;    // Comportamento indefinido   //  *c = 30;    int a1 = 40;   const int* b1 = &a1;   int* c1 = const_cast<int*>(b1);    // o inteiro a1 referenciado por c1 não foi declarado como const   *c1 = 50;    return 0; } ```  ## Referências  * [const_cast operator syntax(https://www.ibm.com/support/knowledgecenter/SSLTBW_2.4.0/com.ibm.zos.v2r4.cbclx01/keyword_const_cast.htm)  ","title":"C++ - const_cast"},{"id":1,"location":"/til/flutter.html","tags":["flutter"],"text":" ## CLI  ### Criando um aplicação  ```bash flutter create hello_world_app cd hello_world_app flutter run ```  ### Listando emuladores configurados  Se o seu smartphone estiver conectado será automaticamente detectado.  ```bash flutter emulators ```  ## Scaffold  * appbar * body * side nav * right nav * bottom bar   ![img](/til/flutter-scaffold-01.webp)  ## Referências  * []()  ","title":"Flutter"},{"id":2,"location":"/til/css-scroll-snap.html","tags":["css"],"text":" ## Referências  * [Scroll Snap](https://codyhouse.co/nuggets/scroll-snap)   ","title":"CSS - Scroll Snap"},{"id":3,"location":"/til/git-diff-image.html","tags":["git"],"text":" ## Dizer ao git que imagem é imagem  Primeiro é necessário informar ao `git` para tratar imagens de um modo especial. Isso pode ser feito globalmente ou por projeto.  O comando abaixo diz ao `git` que algumas extensões são imagens.  ```bash git config --global core.attributesfile '~/.gitattributes' ```  ```bash cat ~/.gitattributes *.gif diff=image *.jpg diff=image *.png diff=image ```  ## Dizer ao git como fazer o diff  O comando abaixo diz ao `git` qual programa executar para fazer o diff da imagem.  ```bash git config --global diff.image.command '~/bin/git-imgdiff' ```  ## O programa de diff  ```bash cat << 'EOF' > ~/bin/git-imgdiff #!/bin/sh # Descomente o modo que desejar  # 3 imagens lado a lado: NOVA | DIFF | ANTIGA compare \"$2\" \"$1\" png:- | montage -geometry +4+4 \"$2\" - \"$1\" png:- | display -title \"$1\" -  # 1 imagem: DIFF # compare \"$2\" \"$1\" png:- | display -title \"$1\" - EOF chmod 755 ~/bin/git-imgdiff ```  ## Referências  * [Image diffs with git](https://akikoskinen.info/image-diffs-with-git/)  ","title":"Git - diff de imagens"},{"id":4,"location":"/til/vim-complete.html","tags":["vim","autocomplete"],"text":" ## `C-x C-u`   ## `C-x C-n`  ## `C-x C-p`  ## Referências  * []()  ","title":"Autocompletar no VIM"},{"id":5,"location":"/til/mapproxy.html","tags":["mapproxy"],"text":" ## Referências  * [mapproxy.org](https://mapproxy.org/)  ","title":"MapProxy"},{"id":6,"location":"/til/tmsu.html","tags":["tmsu"],"text":" ## Referências  * []()  ","title":"TMSU"},{"id":7,"location":"/til/inxi.html","tags":["inxi"],"text":" Para ver informações sobre:  * `inxi -A` placas de som/áudio do computador * `inxi -b` informações básicas * `inxi -C` gerais apenas do CPU * `inxi -D` completas de armazenamento dos SSDs/HDDs, etc * `inxi -f` básicas do CPU e das flags que ele suporta * `inxi -G` placa de vídeo * `inxi -i` ip e informações de rede * `inxi -l` tabela de partições * `inxi -n` placa de rede, incluindo o mac   ## Referências  * [INXI - Um comando simples e completo para obter informações da sua distro Linux](https://www.diolinux.com.br/2018/02/inxi-um-comando-simples-e-completo-para-ter-informacoes-linux.html)  ","title":"inxi - Obtendo informações sobre sua distribuição Linux"},{"id":8,"location":"/til/chafa.html","tags":["bash"],"text":" ```bash apt install chafa ```  ## Referências  * [Chafa](https://hpjansson.org/chafa/)  ","title":"Chafa"},{"id":9,"location":"/til/javascript-console-dir.html","tags":["javascript","console"],"text":" Considere a seguinte página:  ```html <html>   <head></head>   <body>     <input id=\"clickMe\" type=\"button\" value=\"Clique aqui\">   </body> </html> ```  Que quando aberta no navegador tem a seguinte aparência:  ![img](/til/javascript-console-dir-00.webp)  Para obter o elemento do botão poderiamos fazer o seguinte:  ```javascript var btn = document.getElementById( 'clickMe' ); ```  Agora que temos o objeto botão armazenado em uma variável chamada `btn` podemos obter mais informações.  Ao enviar a variável `btn` para a função `console.log` veremos a seguinte representação:  ```javascript console.log( btn ) <input id=\"clickMe\" type=\"button\" value=\"Clique aqui\"> ```  Ao enviar a variável `btn` para a função `console.dir` teremos acesso a todas as propriedades internas do objeto.  ```javascript console.dir( btn ) ```  ![img](/til/javascript-console-dir-01.webp)  A lista de propriedades é muito longa, abaixo vemos um trecho com as funções que tratam eventos (cliques, drag, change, ...)  ![img](/til/javascript-console-dir-02.webp)  ## Adicionado um evento de clique  ```javascript // Definindo uma função de tratamento meuClique = function() { alert('Fui clicado'); } // Vinculando a função ao evento de clique do botão // Não usar `on`. Em vez de `onclick` use `click`  btn.addEventListener(\"click\", meuClique);  // Clicar no botão ou executar `btn.click()` ```  Ao clicar no botão uma janela é exibida:  ![img](/til/javascript-console-dir-03.webp)  Ao usar novamente o comando `console.dir( btn )` esperava ver no `onclick` alguma informação sobre a função de tratamento, mas estava `null`.  Usando a função `getEventListeners` consegui localizar a função `meuClique`  ![img](/til/javascript-console-dir-04.webp)   `$_` retorna o valor da última expressão avaliada  `$0`, `$1`,`$2`, `$3` e `$4` referenciam os últimos 5 elementos inspecionados   `$(selector, [startNode])` referencia o primeiro elemento no DOM especificado pelo seletor CSS.  ```bash $('input') <input id=\"clickMe\" type=\"button\" value=\"Clique aqui\"> ```  `$$(selector, [startNode])` retorna um array de objetos  ```javascript var images = $$('img'); for (each in images) {   console.log(images[each].src); } ```  `$x(path, [startNode])` retorna um array de elementos que batem com uma expressão XPath  ```javascript $x(\"//p\") ```  `copy` copia um objeto para a área de transferência  ```javascript copy($0); ```  `monitor(function)` monitor a execução de uma função  ```javascript function sum(x, y) {   return x + y; } monitor(sum);  sum(1,2) // function sum called with arguments: 1, 2 ```  `monitorEvents(object[, events])` monitora eventos  ```javascript monitorEvents(window, \"resize\"); // resize Event {isTrusted: true, type: \"resize\", target: Window, currentTarget: Window, eventPhase: 2, …} // resize Event {isTrusted: true, type: \"resize\", target: Window, currentTarget: Window, eventPhase: 2, …} ```  `unmonitorEvents(object[, events])`    ## Mais opções do console  ```javascript const label = 'Adolescent Irradiated Espionage Tortoises'; console.group(label); console.info('Leo'); console.info('Mike'); console.info('Don'); console.info('Raph'); console.groupEnd(label); ```  ```javascript console.count(); console.count('coffee'); console.count(); console.count(); console.countReset(); console.countReset('coffee'); ```  ```javascript console.table([   {     first: 'René',     last: 'Magritte',   },   {     first: 'Chaim',     last: 'Soutine',     birthday: '18930113',   },   {     first: 'Henri',     last: 'Matisse',   } ]); ```  ```javascript console.time(); for (var i = 0; i < 100000; i++) {   let square = i ** 2; } console.timeEnd(); ```  ```javascript const first = () => { second(); }; const second = () => { third(); }; const third = () => { fourth(); }; const fourth = () => { console.trace(); }; first(); ```  ```javascript console.log('%c Oh my heavens! ', 'background: #222; color: #bada55'); ```  {{< img src=\"https://developers.google.com/web/updates/images/2015-05-20-get-and-debug-event-listeners/get-debug-event-listeners.gif\" alt=\"img\" >}}  ## Referências  * [MDN Console.dir()](https://developer.mozilla.org/pt-BR/docs/Web/API/console/dir) * [Console API Reference](https://developers.google.com/web/tools/chrome-devtools/console/api) * [Console Utilities API Reference](https://developers.google.com/web/tools/chrome-devtools/console/utilities) * [HTML DOM addEventListener() Method](https://www.w3schools.com/jsref/met_element_addeventlistener.asp) * [Colors in JavaScript console](https://stackoverflow.com/questions/7505623/colors-in-javascript-console) * [Get and debug event listeners](https://developers.google.com/web/updates/2015/05/get-and-debug-event-listeners) * Sugestão de leitor [Basic HTML Codes for Beginners](https://www.websiteplanet.com/blog/html-guide-beginners/) ","title":"Javascript - console.dir"},{"id":10,"location":"/til/bloqueando-a-sessao-com-light-locker.html","tags":["screensaver","locker","debian","linux"],"text":" ## Instalação  ```bash apt purge xscreensaver xscreensaver-data apt install light-locker ```  ## Travando pelo terminal  ```bash light-locker-command -l ```  ## Referências  * [Instale Light Locker: Um novo bloqueador de sessão para LightDM](http://www.edivaldobrito.com.br/instale-light-locker-um-novo-sessao-locker-para-lightdm/) * [Debian xscreensaver very old. What's an alternative?](http://linuxoidchannel.blogspot.com.br/2016/12/debian-xscreensaver-very-old-whats.html)  ","title":"Bloqueando a Sessão com Light Locker"},{"id":11,"location":"/til/cpp-templates.html","tags":["cpp"],"text":" ## Referências  * [Hiding C++ template parameter packs in a tuple](https://devblogs.microsoft.com/oldnewthing/20200529-00/?p=103810) * [Introduction to C++ Variadic Templates](https://kevinushey.github.io/blog/2016/01/27/introduction-to-c++-variadic-templates/) ","title":"Templates em C++"},{"id":12,"location":"/til/preact.html","tags":["preact"],"text":" ## Ciclo de vida  * `componentWillMount`: Antes que o componente seja montado no DOM * `componentDidMount`: Depois que o componente é montado no DOM * `componentWillUnmount`: Antes da remoção do DOM * `componentWillReceiveProps`: Antes que novas props sejam aceitas * `shouldComponentUpdate`: Antes de `render()`. Retorne false caso queiram pular o `render()` * `componentWillUpdate`: Antes `render()` * `componentDidUpdate`: Depois `render()`  ## Preact sem babel ou JSX  index.html  ```html <!DOCTYPE html> <html>   <head>     <title>Preact sem Babel or JSX</title>   </head>   <body>     <script src=\"https://unpkg.com/preact\"></script>     <script src=\"index.js\"></script>   </body> </html> ```  index.js  ```javascript 'use strict';  const { Component, h, render } = window.preact;  /** Example classful component */ class App extends Component {   componentDidMount() {     this.setState({ message:'Hello!' });   }   render(props, state) {     return (       h('div', {id:'app'},         h(Header, { message: state.message }),         h(Main)       )     );   } }   /** Components can just be pure functions */ const Header = (props) => {   return h('header', null,     h('h1', null, 'App'),     props.message && h('h2', null, props.message)   ); };   /** Instead of JSX, use: h(type, props, ...children) */ class Main extends Component {   render() {     const items = [1,2,3,4,5].map( (item) => (       h('li', {id:item}, 'Item '+item)     ));     return (       h('main', null,         h('ul', null, items)       )     );   } }   render(h(App), document.body); ```  Exemplo de preact com mitt  https://codepen.io/developit/pen/rjMEwW?editors=0010    ## Referências  * [Preact](https://medium.com/reactbrasil/preact-b128e4bf7625) * https://preactjs.com/guide/getting-started * https://blog.kiprosh.com/getting-started-with-preactjs-a-step-by-step-guide-f3197f871753/ * https://github.com/developit/preact-without-babel * https://blog.moove-it.com/getting-started-preact-progressive-web-apps/ * https://blog.theodo.fr/2017/11/preact-progressive-web-app-webpack-material-design-web-apis/ * http://react-materialize.github.io/react-materialize/?path=/story/react-materialize--welcome * https://project-awesome.org/ooade/awesome-preact  ","title":"Preact - Petit React"},{"id":13,"location":"/til/junit-swtbot.html","tags":["swtbot","java","junit"],"text":" ```java SWTBotMenu windowMenu = bot.menu(\"Window\"); windowMenu.click();  SWTBotMenu showViewMenu = windowMenu.menu(\"ShowView\"); showViewMenu.click();  SWTBotMenu otherMenu = showViewMenu.menu(\"Other...\"); otherMenu.click();  SWTBotTree tree = bot.tree(0); SWTBotTreeItem tItem = tree.getTreeItem(\"General\").expand(); tItem.getNode(\"Console\").doubleClick(); ```  ## Referências  * [A Simple Test using SWTBOT !!](http://eclipseo.blogspot.com/2010/12/simple-test-using-swtbot.html) ","title":"Testes com SWTBot"},{"id":14,"location":"/til/vim-livro-noob-gratis.html","tags":["vim"],"text":" > Um livro guia/referência para quem deseja aprender a utilizar o editor de textos Vim  Confira em https://leanpub.com/vimparanoobs  ## Referência  * https://woliveiras.com.br/vimparanoobs/chapters/pesquisando-por-plugins-no-vundle.html  ","title":"vim-livro-noob-gratis.md"},{"id":15,"location":"/til/eclipse-plugin.html","tags":["eclipse"],"text":" ## Referências  Analisar pdf  * [Code samples for the \"Eclipse Plugin Development by Example: Beginners Guide\" book 978-1782160328](https://github.com/alblue/com.packtpub.e4) * [A Quick-Start Tutorial to Eclipse Plug-in Development](http://scg.unibe.ch/archive/projects/Bals10b-EclipsePlugins.pdf) ","title":"Desenvolvimento de plugin para o Eclipse"},{"id":16,"location":"/til/vapid-key.html","tags":["web"],"text":" VAPID (Voluntary Application Server Identification) é o novo meio de receber e enviar notificações push através da web.  ## Criação usando openssl  ```bash mkdir -p certs openssl ecparam -name prime256v1 -genkey -noout -out certs/vapid_private.pem openssl ec -in certs/vapid_private.pem -pubout  -out certs/vapid_public.pem openssl ec -in certs/vapid_private.pem -outform DER \\   | tail -c +8 | head -c 32 | base64 | tr -d '=' | tr '/+' '_-' \\   > certs/private_key.txt openssl ec -in certs/vapid_private.pem -pubout -outform DER \\   | tail -c 65 | base64 | tr -d '=' | tr '/+' '_-' \\   > certs/public_key.txt ```  ## Criação usando web-push  ```bash npm install -g web-push web-push generate-vapid-keys ```  ## Push services  * fcm.googleapi.com - firebase - Google * updates.push.service.mozilla.com - Firefox  ## Envio através do PHP para android  ```php <?php  // API access key from Google API's Console define( 'API_ACCESS_KEY', 'YOUR-API-ACCESS-KEY-GOES-HERE' );   $registrationIds = array( $_GET['id'] );  // prep the bundle $msg = array ( \t'message' \t=> 'here is a message. message', \t'title'\t\t=> 'This is a title. title', \t'subtitle'\t=> 'This is a subtitle. subtitle', \t'tickerText'\t=> 'Ticker text here...Ticker text here...Ticker text here', \t'vibrate'\t=> 1, \t'sound'\t\t=> 1, \t'largeIcon'\t=> 'large_icon', \t'smallIcon'\t=> 'small_icon' );  $fields = array ( \t'registration_ids' \t=> $registrationIds, \t'data'\t\t\t=> $msg );   $headers = array ( \t'Authorization: key=' . API_ACCESS_KEY, \t'Content-Type: application/json' );   $ch = curl_init(); curl_setopt( $ch,CURLOPT_URL, 'https://android.googleapis.com/gcm/send' ); curl_setopt( $ch,CURLOPT_POST, true ); curl_setopt( $ch,CURLOPT_HTTPHEADER, $headers ); curl_setopt( $ch,CURLOPT_RETURNTRANSFER, true ); curl_setopt( $ch,CURLOPT_SSL_VERIFYPEER, false ); curl_setopt( $ch,CURLOPT_POSTFIELDS, json_encode( $fields ) ); $result = curl_exec($ch ); curl_close( $ch );  echo $result; ```  ```bash ensure connection is secured, so CURLOPT_SSL_VERIFYPEER should be set to true ```  ## Envio via PHP para IOS  ```php <?php      // Provide the Host Information.      $tHost = 'gateway.sandbox.push.apple.com';      $tPort = 2195;      // Provide the Certificate and Key Data.      $tCert = 'dev.pem';      // Provide the Private Key Passphrase (alternatively you can keep this secrete      // and enter the key manually on the terminal -> remove relevant line from code).      // Replace XXXXX with your Passphrase      $tPassphrase = 'xxxxxx';      // Provide the Device Identifier (Ensure that the Identifier does not have spaces in it).      // Replace this token with the token of the iOS device that is to receive the notification.      $tToken = 'ada56107075e4d00f9da001b0ad71200cb953b99266e506884f6eab06f13f666';      // The message that is to appear on the dialog.      $empresa = \"Petiskeira\";      $tAlert = $empresa . ' tem um recado para você!';      // The Badge Number for the Application Icon (integer >=0).      $tBadge = 1;      // Audible Notification Option.      $tSound = 'default';      // The content that is returned by the LiveCode \"pushNotificationReceived\" message.      $tPayload = '{\"endereco\":\"lauro oscar diefenthaeler\",\"tel\":\"51 3561-8797\",\"numero\":\"243\",\"complemento\":\"0\",\"id\":\"9\",\"nome\":\"petiskeira\",\"msg\":\"Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Typi non habent claritatem insitam; est usus legentis in iis qui facit eorum claritatem. Investigationes demonstraverunt lectores legere me lius quod ii legunt saepius. Claritas est etiam processus dynamicus, qui sequitur mutationem consuetudium lectorum. Mirum est notare quam littera gothica, quam nunc putamus parum claram, anteposuerit litterarum formas humanitatis per seacula quarta decima et quinta decima. Eodem modo typi, qui nunc nobis videntur parum clari, fiant sollemnes in futurum.\"}';      // Create the message content that is to be sent to the device.      $tBody['aps'] = array (      'alert' => $tAlert,      'badge' => $tBadge,      'sound' => $tSound,      );      $tBody ['payload'] = $tPayload;      // Encode the body to JSON.      $tBody = json_encode ($tBody);      // Create the Socket Stream.      $tContext = stream_context_create ();      stream_context_set_option ($tContext, 'ssl', 'local_cert', $tCert);      // Remove this line if you would like to enter the Private Key Passphrase manually.      stream_context_set_option ($tContext, 'ssl', 'passphrase', $tPassphrase);      // Open the Connection to the APNS Server.      $tSocket = stream_socket_client ('ssl://'.$tHost.':'.$tPort, $error, $errstr, 30, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $tContext);      // Check if we were able to open a socket.      if (!$tSocket)      exit (\"APNS Connection Failed: $error $errstr\" . PHP_EOL);      // Build the Binary Notification.      $tMsg = chr (0) . chr (0) . chr (32) . pack ('H*', $tToken) . pack ('n', strlen ($tBody)) . $tBody;      // Send the Notification to the Server.      $tResult = fwrite ($tSocket, $tMsg, strlen ($tMsg));      if ($tResult){      echo 'Delivered Message to APNS' . PHP_EOL;      }else      echo 'Could not Deliver Message to APNS' . PHP_EOL;      // Close the Connection to the Server.      fclose ($tSocket);  ?> ```  ## Referências  * [Makefile do flask-pywebpush](https://github.com/rtancman/flask-pywebpush/blob/master/Makefile) * [Criando um sistema de notificações com pywebpush](https://www.rtancman.com.br/python/criando-sistema-de-notificacoes-com-pywebpush.html) * [Beginners guide to Web Push Notifications using Service Workers](https://medium.com/izettle-engineering/beginners-guide-to-web-push-notifications-using-service-workers-cb3474a17679) * [gits: envio de webpush usando PHP](https://gist.github.com/prime31/5675017) Aqui tem muitos comentários importantes   ","title":"Criando VAPID key"},{"id":17,"location":"/til/design-mode.html","tags":["chrome"],"text":" A variável `document.designMode` controla se o documento todo é editável.  ```javascript var mode = document.designMode; document.designMode = \"on\"; document.designMode = \"off\"; ```   ## Referências  * [Document.designMode - Mozilla](https://developer.mozilla.org/pt-BR/docs/Web/API/Document/designMode)   ","title":"Editando a página diretamente no browser"},{"id":18,"location":"/til/prince2.html","tags":["prince2"],"text":" ## PRINCE2 vs PMP  * PRINCE2 focuses of WHAT to do * PMP focuses on HOW to do it * PRINCE2 is a methodology using processes * PMP is a standard and a knowlegebase  Theses certifications are not in competition with each other, they can be used with each other.  ## Benefits of PRINCE2  * Common lexicon for those involved in project * Explicit roles assigned for each reponsability * Customer focuses by design * Provides repeatable processes * Deliver on busines needs * Adaptable and tailorable to the business  ## What it Won't Provide?  * Excludes specialized aspects   * Procurement   * Legal   * Finatial   * Human resources * Excludes management of people * Doesn't focus on techniques or dictate how to do something  ## & Principles  * Continued Business Justification * Learn From Experience * Defined Roles and Reponsabilities * Manage by Stages * Manage by Exception * Focus on Products * Tailor To Suit The Project  ## Principle: Continued Business Justification  * Are the benefits still worth the risk & costs? * Project must always remain **desirable**, viable, and achievable   * If not, the project should be **closed** * Does the organization have the capability to deliver the product? * Will the use of the project's products result in the outcomes and benefits expected? * Prevents wasting resources on a project that has no benefits * Benefits **do not** have to be (only) monetary  ### Business Case Components  * Reason for the project * Expected benefits and dis-benefits   * What threshold would project be terminated? * Timeline, Cost, and Risk * Underlying assumptions * Options considered * Chosen solution  ## Learn From Experiences  * Everyone makes mistakes, but how can we learn from them? * Collect reports of lessons learned from previous projects * Generate reports during the project  ### Who's Responsability Is It?  * Project managers should identify, document, and disseminate lessons via lesson reports to the project board * Project board should distribute these reports to the organization's other project managers  ### Hindsight is 20-20  * Setup a lessons learned log during the Starting Up a Project process * Generate lessons reports at the end of each stage * Final lessons report created before the Closing a Project process is completed  ### Lessons Learned arr \"Testable\"  * Assurance auditors will ask for evidence that lessons ar actually being **learned** * Looking for proof that things are implemented to improve process and prevent mistakes * Lessons Learned is different from Lessons Observed  ### How to prevent mistakes?  * Learn from past mistakes to prevent new ones * Create a repository of lessons reports * Recruit members to your project with similar project experiences... * ...there really is no substitute for experience!  ## Referências  * [PRINCE2 Foundation: Cram to Pass the PRINCE2 Exam in 7 days](https://subscription.packtpub.com/video/application_development/9781838829247/105514/105519/project-management) ","title":"PRINCE2"},{"id":19,"location":"/til/dart.html","tags":["dart"],"text":" ## Instalação  ```bash apt-get update apt-get install apt-transport-https sh -c 'curl https://dl-ssl.google.com/linux/linux_signing_key.pub \\   | apt-key add -' sh -c 'curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list \\   > /etc/apt/sources.list.d/dart_stable.list' ```  ```bash apt-get update apt-get install dart ```  ## Referências  * []()  ","title":"Linguagem DART"},{"id":20,"location":"/til/css-banner.html","tags":["css"],"text":" Para evitar que o adblock remova elementos da tela não utilize como parte do nome das classes ou ids as seguintes palavras:  * ad * ads * adv * advert * advertisement * banner * banners  Exemplos:  * `meu-banner-legal` pode ser removido acidentalmente * `meu-bannerx-legal` provavelmente não será removido  ## Referências  * [AdBlock plus hids elements with ids or class with the word “ad”](https://stackoverflow.com/questions/14079048/adblock-plus-hids-elements-with-ids-or-class-with-the-word-ad) * [Regra id-class-no-ad do htmllint](https://github.com/htmllint/htmllint/wiki/Options#id-class-no-ad) ","title":"Nomes de classes a evitar no CSS"},{"id":21,"location":"/til/deploy-site-with-git.html","tags":["git","site estático"],"text":" image: headers/voce-na-internet.jpg  Você que tem acompanhado os outros posts deve ter notado que chegamos a um ponto muito importante da série *você na internet*. Apenas para relembrar, já passamos pelas seguintes etapas:  * Escolher uma *aparência* básica para o seu site * Editar e personalizar o site * Gerar a versão local  Agora é o momento de mostrar pra todo mundo o que já conseguimos. É hora de fazer o *deploy* do seu site. É hora do seu site deixar o círculo de amigos próximos e ser visível na web.  ","title":"Publique seu site com com git"},{"id":22,"location":"/til/git-bare.html","tags":["git"],"text":" ```bash cd repo mv .git ../repo.git # renaming just for clarity cd .. rm -fr repo cd repo.git git config --bool core.bare true ```  ## Referências  * [How to convert a normal Git repository to a bare one?](https://stackoverflow.com/questions/2199897/how-to-convert-a-normal-git-repository-to-a-bare-one)  ","title":"Convertendo um repositório git para bare"},{"id":23,"location":"/til/mosquitto.html","tags":["mosquitto"],"text":" ## Referências  * []()  * [How to Install and Secure the Mosquitto MQTT Messaging Broker on Debian 8](https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-the-mosquitto-mqtt-messaging-broker-on-debian-8) * [Mosquitto C++ sample code to publish message](https://www.disk91.com/2013/technology/programming/mosquitto-c-sample-code-to-publish-message/) * [Eclipse Paho MQTT C++ Client Library](https://github.com/eclipse/paho.mqtt.cpp) * https://github.com/eclipse/paho.mqtt.cpp/tree/master/src/samples * [libmosquittopp - sample client hangs on loop_stop() method](https://stackoverflow.com/questions/37956152/libmosquittopp-sample-client-hangs-on-loop-stop-method)  * https://medium.com/tht-things-hackers-team/instalar-mqtt-broker-no-linux-debian-ubuntu-f8861da70ef6 * https://android.developreference.com/article/16161720/libmosquittopp+-+sample+client+hangs+on+loop_stop()+method ","title":"Mosquitto"},{"id":24,"location":"/til/como-limpar-o-audio-com-o-audacity.html","tags":["audacity"],"text":" ## Efeito redução de ruído  1. Selecionar somente o ruído (sem vóz) 1. Menu **Efeitos** 1. Menu **Redução de ruídos** 1. Clicar no botão **Obter perfil do ruído** 1. Ctrl+A Para para selecionar tudo 1. Menu **Efeitos** 1. Menu **Redução de ruídos** 1. Clicar no botão **OK**  ## Efeito compressor  1. Ctrl+A para selecionar tudo 1. Menu **Efeitos** 1. Menu **Compressor** 1. Não precisa mexer em nada 1. Clicar no botão **OK**  ## Efeito normalizar  1. Ctrl+A para selecionar tudo 1. Menu **Efeitos** 1. Menu **Normalizar** 1. Não precisa mexer em nada 1. Clicar no botão **OK**  ## Efeito equalização  1. Ctrl+A para selecionar tudo 1. Menu **Efeitos** 1. Menu **Equalização** 1. Selecione a curva **100Hz Rumble** 1. Clicar no botão **OK**  ","title":"Como limpar o audio com audacity"},{"id":25,"location":"/til/eclipse-formatar-codigo-via-linha-de-comando.html","tags":["eclipse"],"text":" ## Referências  * [How to Run the Eclipse Formatter From the Command Line](https://www.beyondjava.net/run-eclipse-formatter-command-line)  ","title":"Formatar código via linha de comando com eclipse"},{"id":26,"location":"/til/curl.html","tags":["curl"],"text":" Ótimas dicas  ## Referências  * [12 DICAS para você usar o COMANDO curl como um NINJA](https://youtu.be/HxezVt5IEHQ)  ","title":"cURL"},{"id":27,"location":"/til/vim-plugins.html","tags":["vim"],"text":" ## Instalação do vundle  ```bash git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim ```    ## Ctrlp  ## Ctrlp modified  Easily open locally modified files in your git-versioned projects.   Uso a versão que lista os arquivos [modificadas[(https://github.com/jasoncodes/ctrlp-modified.vim)  ### Instalação  Acrescentar no `.vimrc`  ```vim Bundle 'kien/ctrlp.vim' Bundle 'jasoncodes/ctrlp-modified.vim' ```  Rodar o `VundleInstall`  ### Atalhos  Acrescentar no `.vimrc`  ```vim map <Leader>m :CtrlPModified<CR> map <Leader>M :CtrlPBranch<CR> ```  ","title":"Plugins para o vim"},{"id":28,"location":"/til/cpp-user-literals.html","tags":[""],"text":" ## Para que servem  * para definir atalhos sintáticos para linguagens comuns e aumentar a segurança do tipo * para conveniência ou para dedução de tipo em tempo de compilação  ## Desempenho  * não há vantagem ou desvantagem de desempenho para literais definidos pelo usuário  ## Categorias de literais  Existem 6 categorias:  * inteiro * caractere * ponto flutuante * cadeia de caracteres * bool * ponteiro  ## Literais definicos na biblioteca padrão  ### `<string>`  ```c++ string str = \"hello\"s + \" world\"s; ```  ### `<complex>`  ```c++ complex<double> num = (2.0 + 3.01i) * (5.0 + 4.3i); ```  ### `<chrono>`  ```c++ bash auto duration = 15ms + 42h; ```  ## Assinaturas dos literais definidos pelo usuário  Você implementa um literal definido pelo usuário definindo um `operator \"\"` no escopo de namespace com uma das seguintes assinaturas:  ```c++ ReturnType operator \"\" _a(unsigned long long int);   // Literal operator for user-defined INTEGRAL literal ReturnType operator \"\" _b(long double);              // Literal operator for user-defined FLOATING literal ReturnType operator \"\" _c(char);                     // Literal operator for user-defined CHARACTER literal ReturnType operator \"\" _d(wchar_t);                  // Literal operator for user-defined CHARACTER literal ReturnType operator \"\" _e(char16_t);                 // Literal operator for user-defined CHARACTER literal ReturnType operator \"\" _f(char32_t);                 // Literal operator for user-defined CHARACTER literal ReturnType operator \"\" _g(const char*, size_t);      // Literal operator for user-defined STRING literal ReturnType operator \"\" _h(const wchar_t*, size_t);   // Literal operator for user-defined STRING literal ReturnType operator \"\" _i(const char16_t*, size_t);  // Literal operator for user-defined STRING literal ReturnType operator \"\" _g(const char32_t*, size_t);  // Literal operator for user-defined STRING literal ReturnType operator \"\" _r(const char*);              // Raw literal operator template<char...> ReturnType operator \"\" _t();       // Literal operator template ```  ## Referências  * [Literais definidos pelo usuário](https://docs.microsoft.com/pt-br/cpp/cpp/user-defined-literals-cpp?view=vs-2019) ","title":"C++ Literais definidas pelo usuário"},{"id":29,"location":"/til/medium-free.html","tags":["hacking"],"text":" * clicar no cadeado * clicar em cookies * selecione `medium.com` e clique em bloquear  ## Referências  * [How do I read Medium articles for free?](https://www.quora.com/How-do-I-read-Medium-articles-for-free)  ","title":"Como ler o medium de graça"},{"id":30,"location":"/til/como-instalar-o-tema-papirus-no-debian.html","tags":["icons","papirus","debian","linux"],"text":" O pacote `papirus-icon-theme` está no `Debian Sid`. Para instalar na versão `stable` basta criar um arquivo `papirus-icon-theme.list` contendo o endereço do repositório:  ```bash echo \"deb http://ppa.launchpad.net/papirus/papirus/ubuntu xenial main\" \\    > /etc/apt/sources.list.d/papirus-icon-theme.list ```  Adicionar a chave   ```bash apt-key adv --recv-keys --keyserver keyserver.ubuntu.com E58A9D36647CAE7F ```  Instalar  ```bash apt-get update apt-get install papirus-icon-theme ```  Pronto, agora é só selecionar o tema `papirus` na configuração do seu ambiente.  ## Selecionando o tema no XFCE  Em **Configurações** escolha **Aparência** e depois **Ícones**.  ![img](/til/papirus-02.webp)  ![img](/til/papirus-03.webp)  ## Referências  * [Github do projeto](https://github.com/PapirusDevelopmentTeam/papirus-icon-theme/) * https://www.reddit.com/r/unixporn/comments/6a0cfp/xfce_my_style_of_mac_osx_for_linux/ * https://github.com/nizarmah/tintedarc  ","title":"Como instalar o tema de ícones Papirus no Debian"},{"id":31,"location":"/til/vim-formatar-json.html","tags":["vim"],"text":" ## Antes: Um exemplo de json colapsado  ```json { \"quiz\": { \"sport\": { \"q1\": { \"question\": \"Which one is correct team name in NBA?\", \"options\": [ \"New York Bulls\", \"Los Angeles Kings\", \"Golden State Warriros\", \"Huston Rocket\" ], \"answer\": \"Huston Rocket\" } }, \"maths\": { \"q1\": { \"question\": \"5 + 7 = ?\", \"options\": [ \"10\", \"11\", \"12\", \"13\" ], \"answer\": \"12\" }, \"q2\": { \"question\": \"12 - 8 = ?\", \"options\": [ \"1\", \"2\", \"3\", \"4\" ], \"answer\": \"4\" } } } } ```  ## Depois: endentado  ```json {     \"quiz\": {         \"maths\": {             \"q1\": {                 \"answer\": \"12\",                 \"options\": [                     \"10\",                     \"11\",                     \"12\",                     \"13\"                 ],                 \"question\": \"5 + 7 = ?\"             },             \"q2\": {                 \"answer\": \"4\",                 \"options\": [                     \"1\",                     \"2\",                     \"3\",                     \"4\"                 ],                 \"question\": \"12 - 8 = ?\"             }         },         \"sport\": {             \"q1\": {                 \"answer\": \"Huston Rocket\",                 \"options\": [                     \"New York Bulls\",                     \"Los Angeles Kings\",                     \"Golden State Warriros\",                     \"Huston Rocket\"                 ],                 \"question\": \"Which one is correct team name in NBA?\"             }         }     } } ```  Crie um atalho para executar um comando externo.  ### Usando python  ```vim nmap =j :%!python -m json.tool<CR> ```  ### Usando jq  ```vim nmap =j :%!jq .<CR> ```   ","title":"Formatar JSON no Vim"},{"id":32,"location":"/til/codigo-de-barras.html","tags":["barcode"],"text":" ## EAN  * Esse código é usado principalmente nos pontos de venda porque permite fazer uma leitura mais simples. * É o formato mais comum e contém uma sequência de números que totaliza 13 dígitos na maioria das vezes. * Pode ser usado para as vendas ou o controle interno, porque o EAN armazena dados sobre a numeração única da unidade ou do lote. * Esse código também se subdivide, como ocorre com o ISBN, que é voltado para livros e produtos semelhantes.  ![EAN](/til/codigo-de-barras_EAN-300x219.webp)  ## Databar  * Tem um funcionamento similar ao do EAN-13 e pode ser usado no ponto de venda. * A diferença é que tem um tamanho reduzido. * Devido a essa característica, é utilizado principalmente em verduras, frutas e legumes, além de outros produtos menores, como joias e cosméticos. * Outra característica é que o Databar pode armazenar dados sobre o prazo de validade, o que permite ter um controle maior das vendas e evitar que uma mercadoria vencida seja comercializada.  ![Databar](/til/codigo-de-barras-DataBar.jpg)  ## UPC  * É muito utilizado para identificar mercadorias nos Estados Unidos e no Canadá. * Tem uma sequência de 12 números e é usado nos pontos de venda. * A vantagem é que o UPC garante que o produto seja aceito em toda a América do Norte. * Possui semelhanças com os códigos anteriores. * Por exemplo: o UPC-A corresponde ao EAN-13 e o UPC-E é parecido com o Databar. * Não é um código interessante para usar no Brasil, mas quem quer exportar para os Estados Unidos e o Canadá deve considerar o UPC.  ![UPC](/til/codigo-de-barras-UPC-300x196.jpg)  ## ITF-14  * Possui 14 dígitos e é mais voltado para unidades logísticas. * É usado em operações internas para rastreio e localização de mercadorias nas mais diversas etapas logísticas. * Pode ser usado diretamente nas caixas ou nos lotes de produtos, mas não tem validade para produtos únicos ou aqueles que chegarão aos pontos de venda.  ![ITF-14](/til/codigo-de-barras-ITF-14-300x95.webp)  ## Código 128  * Esse também é um código indicado para aplicações logísticas. * Ele apresenta informações que vão desde a data de validade até números de lote e de série. * Sua composição é alfanumérica e seu tamanho pode variar conforme a aplicação. * É bastante usado no transporte de produtos de saúde e oferece um rastreamento mais completo. * Por meio do código 128 é possível encontrar onde a mercadoria está na cadeia logística e elevar a visibilidade de todo o processo.  ![Código 128](/til/codigo-de-barras-ean-128-300x169.jpg)  ## Código 25 intercalado  * O código 25 intercalado pode ser utilizado para o manuseio e o transporte de itens do tipo fichas, inventários, passagens aéreas e envelopes. * No processo logístico é usado especialmente para equipamentos despachados, bagagens e cargas. * Outra possibilidade é usá-lo em relógios de ponto, boletos de pagamento, entre outras possibilidades que não se ligam a um ponto de venda ou à logística. * Seu comprimento pode variar.  ![Legenda da imagem](/til/codigo-de-barras-2de5-intercalado.jpg)  ## QR code  * Esse é um código criado para smartphones e outros dispositivos móveis. Devido a isso, é bidimensional e tem um padrão único. * O escaneamento deve ser realizado com leitores próprios, que fazem o redirecionamento para uma página com informações sobre o produto, por exemplo. * A vantagem é pode armazenar uma quantidade maior de informações e facilitar o conhecimento do consumidor a respeito do produto, situação chamada de embalagem estendida.  ![QR code](/til/codigo-de-barras-qrcode.jpg)  ## DataMatrix  * É semelhante ao QR code por ser bidimensional e com tamanho reduzido. * Pode ser gravado no produto para ser inviolável. * É mais utilizado na área de saúde por aumentar a confiabilidade e a rastreabilidade das informações. * Como você pôde perceber, os vários tipos de códigos existentes servem para situações específicas, que melhoram a visibilidade do processo e facilitam as operações internas do seu negócio. * E você, já adotou algum dos códigos de barras abordados? * Se você tem algo a compartilhar ou possui uma dúvida, deixe seu comentário no post.  ![DataMatrix](/til/codigo-de-barras_DATAMATRIX.webp)  ## Referências  * [Códigos de barras: conheça os 8 tipos existentes](https://ibid.com.br/blog/codigos-de-barras-conheca-os-8-tipos-existentes/)    ","title":"Código de barras"},{"id":33,"location":"/til/cruft.html","tags":["cruft"],"text":" cruft is a useful tool exactly for this purpose: it makes a comparison between a file system and the database of installed Debian packages. In addition to listing unknown files it also lists files which are missing but should be there.  I use it routinely together with debsums when I need to start system administration or upgrade work on machine which I did not take care of earlier. This allows me to spot any local modifications and installations and plan for them, instead of the customer telling me after an upgrade that their software does not work any more.  Install:  apt-get install cruft List all \"cruft\" but ignore the named directories:  cruft --ignore \"/dev /proc /sys /root /home /tmp\" More information:  man cruft zless /usr/share/doc/cruft/README.gz   * [How to list files and folders that are not maintained by any DEB package](https://unix.stackexchange.com/questions/18038/how-to-list-files-and-folders-that-are-not-maintained-by-any-deb-package)   ","title":"Cruft"},{"id":34,"location":"/til/rstudio.html","tags":["r"],"text":" ## Instalação  ```bash apt-get update apt-get install r-base r-base-dev rstudio apt-get install r-cran-httpuv r-cran-shiny r-cran-dt r-cran-crosstalk r-cran-miniui r-cran-rmysql r-cran-devtools ```  Para baixar a última versão do RStudio do site acesse <https://rstudio.com/products/rstudio/download/>.   ## Referências  * [Brazilian Economic Time Series (BETS): R package](https://bibliotecadigital.fgv.br/dspace/bitstream/handle/10438/18172/Brazilian_Economic_Time_Series_BETS_R_package.pdf?sequence=1&isAllowed=y) * [Deflacionando e extraindo sazonalidade de séries de tempo no R](https://rpubs.com/arthurlula/deflacionar) * [ribge R package](https://github.com/tbrugz/ribge) ","title":"RStudio no debian"},{"id":35,"location":"/til/vim-awesome.html","tags":["vim"],"text":" * <http://vimawesome.com/> * <http://vimawesome.com/plugin/fugitive-vim> * <http://vimawesome.com/plugin/vim-snipmate-mine>   ","title":"Vim awesome"},{"id":36,"location":"/til/git-diff.html","tags":["git","diff"],"text":" ## Sem espaços no final da linha ou final do arquivo  O comando abaixo adiciona uma marcação no `git diff` no terminal ou no `git gui`.  ```bash git config --global core.whitespace 'blank-at-eol,blank-at-eof' ```  Após rodar o comando acima o arquivo `~/.gitconfig` é alterado para conter as seguintes linhas:  ```ini [core] \twhitespace = blank-at-eol ```  ### Exemplos  Uma linha com espaço sobrando no final aparece assim no `git gui`:  ![diff no git gui.](/til/git-diff-check-01.webp)  Uma linha com espaço sobrando no final (acrescentei mais alguns) aparece assim no `terminal`:  ![diff no console.](/til/git-diff-check-02.webp)   ### Listando as linhas com problemas  Para ver só as linhas com problema use `git diff --check`:  ```bash git diff --check README.md:11: trailing whitespace. ```   ## Referências  * [How Effective Teams Use Git - Enrico Campidoglio](https://www.youtube.com/watch?v=jw8yK5JV0xw)  ","title":"Exibindo problemas de formatação com git diff"},{"id":37,"location":"/til/big-o-notation.html","tags":["cpp"],"text":" ## Referências  * [Big-O Notation Explained with Examples](https://developerinsider.co/big-o-notation-explained-with-examples/)  ","title":"Notação Big O"},{"id":38,"location":"/til/git-checkout-somente-da-ultima-versao.html","tags":["git","checkout","depth"],"text":" Muitas vezes não precisamos baixar todo o histórico de commits de um projeto. Principalmente quando estamos usando bibliotecas de terceiros.  Para indicar o número máximo de commits a ser baixado use a opção `--depth`, adicionalmente você pode indicar de qual o branch deve ser baixado.  Exemplo de uso retirado do site do mongodb:  ```bash git clone https://github.com/mongodb/mongo-cxx-driver.git \\     --branch releases/stable \\     --depth 1 ```  ## Referências  * [Installing the mongocxx driver](http://mongocxx.org/mongocxx-v3/installation/)  ","title":"Como realizar o checkout somente da última versão"},{"id":39,"location":"/til/js-set.html","tags":["javascript"],"text":" https://alligator.io/js/sets-introduction/  ```javascript let animals = new Set();  animals.add('🐷'); animals.add('🐼'); animals.add('🐢'); animals.add('🐿'); console.log(animals.size); // 4 animals.add('🐼'); console.log(animals.size); // 4  console.log(animals.has('🐷')); // true animals.delete('🐷'); console.log(animals.has('🐷')); // false  animals.forEach(animal => {   console.log(\\`Hey ${animal}!\\`); });  // Hey 🐼! // Hey 🐢! // Hey 🐿!  animals.clear(); console.log(animals.size); // 0 ```  ```javascript let myAnimals = new Set(['🐷', '🐢', '🐷', '🐷']);  myAnimals.add(['🐨', '🐑']); myAnimals.add({ name: 'Rud', type: '🐢' }); console.log(myAnimals.size); // 4  myAnimals.forEach(animal => {   console.log( animal ); });   // 🐷 // 🐢 // [\"🐨\", \"🐑\"] // Object { name: \"Rud\", type: \"🐢\" } ```    ","title":"javascript set"},{"id":40,"location":"/til/algoritmos.html","tags":["algorithms"],"text":" Algoritmos que todo programador deveria conhecer bem.  ## Estruturas lineares de dados  * [Arrays]({{< ref \"cpp-array.md\" >}}) * Linked List - Single and Doubly * Stack * Queues  ## Algoritmos básicos  * Sorting - Merge Sort, Insertion Sort, Quick Sort, Number of inversions * Matrix Multiplication (just know the algo if not implement it) * Prime Sieving * Modular Math including multiplication and division * Euclidean Algorithm for GCD, Modular Inverse, Fast Exponentiation * Fibonacci number with matrix multiplication * Probability distribution and expected value * Stats - Mean, Median, Variance, Bayes theorem  ## Técnicas populares  * Divide and Conquer - Binary Search, Maximum Subarray * Greedy Algorithms - Activity Selection, Huffman encoding * Dynamic Programming - Matrix Chain Multiplication, Knapsack, * Linear Programming - Variable Maximisation, Linear time sorting * String Algorithms - Manacher, LCS, Edit Distance  ## Estruturas não lineares de dados  * Trees - Binary Tree, General Tree, Lowest Common Ancestor * Binary Search Tree - Inorder Traversal, Level order traversal, finding kth largest element, diameter, depth, number of nodes, etc. * Heaps - Array Implementation, Heapify, Heap Sort * Union Find * Hash Table - Linear Probing, Open addressing, Collision avoidance  ## Grafos  * Adjacency List, Adjacency Matrix, Weighted Edge Graphs * Basic Traversal algos - Breadth First Search, Depth First Search, etc * Shortest Path Finding Algorithm - Dijkstra, Floyd Warshal, Bellman Ford * Minimum Spanning Tree - Kruskal's Algo, Prim's Algo  ## Árvores avançadas e grafos  * Balanced Trees - AVL, Red-Black * Heavy Light Decomposition, B+ Trees, Quad Tree * Advance Graph - Min Cut, Max Flow * Maximum Matching - Hall's Marriage * Hamiltonian Cycle * Edge Graphs / Line Graphs * Strongly Connected Components * Dominant Sub-Graph, Vertex Cover, Travelling Salesman - Approx algos  ## Algoritmos avançados para String  * Knuth Morris Pratt Algorithm * Rabin Karp Algorithm * Tries and Compressed Tries * Prefix Trees, Suffix Trees, Suffix Automation - Ukkonen Algorithm  ## Matemática avançada  * Fast Fourier Transformation * Primality Testing * Computational Geometry - Closest point pair, Voronoi diagram, Convex Hull  ## Tópicos gerais avançados  * Iterating through all combination / permutation * Bit manipulation  ## Referências  * [What algorithms should I know to become a good programmer?](https://www.quora.com/What-algorithms-should-I-know-to-become-a-good-programmer/answer/Ashish-Kedia?ch=3&share=ae955848&srid=zRrj) * [C++20/17/14/11](https://github.com/AnthonyCalandra/modern-cpp-features/blob/master/README.md) ","title":"Algoritmos"},{"id":41,"location":"/til/failban.html","tags":["fail2ban"],"text":" ## Objetivo  TBD  ## Instalação  ```bash apt update apt install fail2ban ```  Copie o arquivo padrão `jail.conf` para `jail.local` para que numa futura atualização não se perca a personalização.  ```bash cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local ```  ## Referências  * [How fail2ban works](http://www.the-lazy-dev.com/en/how-fail2ban-works/) * [Install and configure Fail2ban with Docker](http://www.the-lazy-dev.com/en/install-fail2ban-with-docker/)  ","title":"fail2ban"},{"id":42,"location":"/til/nemo-como-gerenciador-de-arquivos-padrao.html","tags":["file-manager","nemo","nautilus","gnome","xfce"],"text":" ## Trocando o Nautilus pelo Nemo no GNOME  ```bash xdg-mime default \\   nemo.desktop inode/directory \\   application/x-gnome-saved-search ```  ### Desabilitando o Nautilus  ```bash gsettings set org.gnome.desktop.background show-desktop-icons false ```  ### Habilitando o Nemo  ```bash gsettings set org.nemo.desktop show-desktop-icons true ```  ## Trocando o Thunar pelo Nemo no XFCE  Em **Configurações** acesse **Aplicativos preferidos**  ![img](/til/post-nemo-xfce-01.webp)  Abra a aba **Utilitários** e altere para **nemo** em **Gerenciador de Arquivos**  ![img](/til/post-nemo-xfce-02.webp)  ## Testando  ```bash xdg-open $HOME ```  ## Configurando o terminal  ### Usar o `xfce4-terminal` no nemo  ```bash gsettings set org.cinnamon.desktop.default-applications.terminal exec xfce4-terminal ```  ### Usar o `gnome-shell` no nemo  ```bash gsettings set org.cinnamon.desktop.default-applications.terminal exec gnome-shell ```  ### Usar o `gnome-terminal` no nemo  ```bash gsettings set org.cinnamon.desktop.default-applications.terminal exec gnome-terminal ```  ## Referências  * [How to Install and Make Nemo the Default File Manager in Ubuntu](https://itsfoss.com/install-nemo-file-manager-ubuntu/) * [How to configure Nemo's right-click “Open in Terminal” to launch “gnome-terminal”](https://unix.stackexchange.com/questions/336368/how-to-configure-nemos-right-click-open-in-terminal-to-launch-gnome-terminal/336587#:~:text=You%20can%20use%20%22%20CTRL%20%2B%20ALT,open%20the%20terminal%20from%20there.) ","title":"Nemo como Gerenciador De Arquivos Padrão"},{"id":43,"location":"/til/plantuml.html","tags":["plantuml"],"text":" ## Usando ícones  ```bash @startuml ../../static/img/plantuml-icon-01.png  skinparam DefaultFontSize 24 skinparam DefaultTextAlignment center  title <&caret-right> Using icons in PlantUML <&caret-left>  package \"Charts <&menu>\" as charts {      file bar [         Bar          <size:120><&bar-chart></size>     ]      file pie [         Pie          <size:42><&pie-chart></size>     ]  }  @enduml ```  ![Exemplo de uso de ícone.](/til/plantuml-icon-01.png)   ## Ícones disponíveis  ```bash @startuml ../../static/img/plantuml-icon-02.png listopeniconic @enduml ```  ![Ícones disponíveis](/til/plantuml-icon-02.png)  ## Referências   * [PlantUML Pleasantness: Using The Built-in Icons](https://mrhaki.blogspot.com/2017/10/plantuml-pleasantness-using-built-in.html) ","title":"Plantuml"},{"id":44,"location":"/til/cpp-magic-enum.html","tags":["C++","cpp"],"text":" Biblioteca C++17 header-only que provê reflexão estática de enums, trabalha com qualquer tipo de enum sem usar macros.  * `enum_cast` obtains enum value from string or integer. * `enum_value` returns enum value at specified index. * `enum_values` obtains enum value sequence. * `enum_count` returns number of enum values. * `enum_integer` obtains integer value from enum value. * `enum_name` returns string name from enum value. * `enum_names` obtains string enum name sequence. * `enum_entries` obtains pair (value enum, string enum name) sequence. * `enum_index` obtains index in enum value sequence from enum value. * `enum_contains` checks whether enum contains enumerator with such value. * `enum_type_name` returns string name of enum type. * `is_unscoped_enum` checks whether type is an Unscoped enumeration. * `is_scoped_enum` checks whether type is an Scoped enumeration. * `underlying_type` improved UB-free \"SFINAE-friendly\" std::underlying_type. * `ostream_operators` ostream operators for enums. * `bitwise_operators` bitwise operators for enums.  Inserir exemplos  ## Referências  * [Magic Enum C++](https://github.com/Neargye/magic_enum)  ","title":"Magic Enum C++"},{"id":45,"location":"/til/mlpack-macos.html","tags":["mlpack"],"text":" ```bash brew brewsci/science/mlpack ```  ## Referências  * [Brewsci/science (legacy)](https://github.com/brewsci/homebrew-science)  ","title":"Instalando o mlpack no Mac OS"},{"id":46,"location":"/til/go.html","tags":["golang"],"text":" ## Organização  * Os programas go são organizados em pacotes. * Pacotes são coleções de arquivos fontes num mesmo diretório * Os arquivos do pacote são compilados juntos * Constantes definidas em um arquivo fonte são visíveis para todos os outros fontes do mesmo pacote * Um repositório contém um ou mais módulos * Um módulo é uma coleção de pacotes relacionados e são distribuídos juntos * Um repositório típico contém somente um módulo localizado na raiz da repositório * Um arquivo chamado `go.mod` declara o `module path` e importa o prefixo    ## Seu primeiro programa  ```bash mkdir hello cd hello go mod init example.com/user/hello cat go.mod ```   ## Referências  * [How to Write Go Code](https://golang.org/doc/code.html)  ","title":"Golang"},{"id":47,"location":"/til/firewall.html","tags":["firewall","debian","linux"],"text":" ## Instalação  ```bash apt install ufw ```  ## Status  ```bash ufw status verbose ```  Depois de configurado alguns serviços a saída do comando pode ser similar a:  ``` ufw status Status: active  To                         Action      From --                         ------      ---- OpenSSH                    ALLOW       Anywhere 80/tcp                     ALLOW       Anywhere 443/tcp                    ALLOW       Anywhere OpenSSH (v6)               ALLOW       Anywhere (v6) 80/tcp (v6)                ALLOW       Anywhere (v6) 443/tcp (v6)               ALLOW       Anywhere (v6) ```  ## Listando aplicações  ```bash ufw app list ufw app info OpenSSH ```  ## Liberando algumas aplicações  ```bash ufw allow OpenSSH ufw allow http ufw allow https ```  ## Habilitando o firewall  ```bash ufw enable ```  ## Liberando uma porta específica  ```bash ufw allow 8080/tcp ```  ## Liberando um range de portas  ```bash ufw allow 7100:7200/tcp ufw allow 7100:7200/udp ```  ## Liberando acesso a um IP específico  Cuidado: Este comando libera todas as portas para o IP especificado!  ```bash ufw allow from 64.63.62.61 ```  ## Liberando acesso a uma porta para a um IP específico  ```bash ufw allow from 64.63.62.61 to any port 22 ```  ## Liberando acesso a uma subrede  Neste exemplo os IPs `192.168.1.1` até `192.168.1.254` podem acessar a porta `3306` (MySQL).  ```bash ufw allow from 192.168.1.0/24 to any port 3306 ```  ## Proibindo conexões  Bloqueando todo o acesso de faixa de IPs `23.24.25.0/24`  ```bash ufw deny from 23.24.25.0/24 ```  Bloqueando somente alguns serviços:  ```bash ufw deny from 23.24.25.0/24 to any port 80 ufw deny from 23.24.25.0/24 to any port 443 ```  ## Removendo regras  ```bash ufw status numbered ```  Poderia ter uma saída similar a:  ```text Status: active      To                         Action      From      --                         ------      ---- [ 1] OpenSSH                    ALLOW IN    Anywhere [ 2] 80/tcp                     ALLOW IN    Anywhere [ 3] 443/tcp                    ALLOW IN    Anywhere [ 4] OpenSSH (v6)               ALLOW IN    Anywhere (v6) [ 5] 80/tcp (v6)                ALLOW IN    Anywhere (v6) [ 6] 443/tcp (v6)               ALLOW IN    Anywhere (v6) ```  Dá para usar o número da regra para removê-la ou então a porta diretamente:  ```bash ufw delete 2 ufw delete allow 8069 ```  ## Desabilitando o firewall  ```bash ufw disable ```  ## Referências  * [How To Set Up a Firewall with UFW on Debian 9](https://linuxize.com/post/how-to-setup-a-firewall-with-ufw-on-debian-9/) ","title":"Configurando um firewall no Debian"},{"id":48,"location":"/til/vim-digraphs.html","tags":["vim"],"text":" Em modo de edição teclar `Ctrl+K` seguido de dois caracteres:  Dígrafo | Caractere | Descrição :---:|:---:|:--------| SE | § | SEction DG | ° | DeGree -a | ª |  -o | º | Co | © | Copyright PI | ¶ | Pilcrow .M | · | Meddle dot My | µ | Micro +- | ± |  0S | ⁰ | 0 superescrito 1S | ¹ | 1 superescrito 2S | ² | 2 superescrito 3S | ³ | 3 superescrito 4S | ⁴ | 4 superescrito 9S | ⁹ | 9 superescrito 0s | ₀ | 0 subescrito 1s | ₁ | 1 subescrito 2s | ₂ | 2 subescrito 9s | ₉ | 9 subescrito 14 | ¼ | 12 | ½ | 34 | ¾ | o/ | ø | O/ | Ø | -: | ÷ | A* | Α | Alfa (grego) B* | Β | Beta (grego) G* | Γ | Gama (grego) D* | Δ | Delta (grego) H* | Θ | Teta (grego) L* | Λ | Lambda (grego) S* | Σ | Sigma (grego) F* | Φ | Phi (grefo) Q* | Ψ | Psi (grego) W* | Ω | Omega (grego) a* | α | Alga (grego) b* | β | Beta (grego) g* | γ | Gama (greto) d* | δ | Delta (grego) e* | ε | Epslon (grego) p* | π | Pi (grego) -3 | ― | Barra horizontal :X | ※ | Marca de referência Eu | €| Euro oC | ℃ | Graus Célsius TM | ™ | Trademark 1R | Ⅰ | 1 romano 2R | Ⅱ | 2 romano 3R | Ⅲ | 3 romano 4R | Ⅳ | 4 romano 5R | Ⅴ | 5 romano 9R | Ⅸ | 9 romano aR | Ⅹ | 10 romano bR | Ⅺ | 11 romano cR | Ⅻ | 12 romano 1r | ⅰ | 1 romano 2r | ⅱ | 2 romano <- | ← | -> | → | -v | ↓ | -! | ↑ | <> | ↔ | UD | ↕ | <= | ⇐ | => | ⇒ | == | ⇔ | FA | ∀ | For all TE | ∃ | There exists /0 | ∅ | Vazio DE | ∆ | increment NB | ∇ | nabla (- | ∈ | Pertence a RT | √ | raiz +Z | ∑ | Somatório *P | ∏ | Produtório Ob | ∘ | Ring operator Sb | ∙ | Bullet operator 00 | ∞ | Infinito In | ∫ | Integral DI | ∬ | Integral dupla Io | ∮ | Integral de linha Iu | ⌠ | Parte de cima da integral Il | ⌡ | Parte de baixo da integral .: | ∴ | Therefore :. | ∵ | Because :: | ∷ | Proporção </ | 〈| /> | 〉| FD | ╱ | Diagonal BD | ╲ | Diagonal TB | ▀ | Top block FB | █ | Full block LB | ▄ | Lower block fS | ■ | Black square OS | □ | White square sB | ▪ | Small black square 0M | ● | Black circle 0m | ○ | White circle Ml | ♂ | Masculino Fm | ♀ | Feminino  ## Define your own digraph  ```vim :digraph {char1}{char2} {number} :digraphs lc 128557 \" 😭 ```  `{number}` is the decimal value for the Unicode character.   ## Referências  * [Manual Vim: digraph](https://vimhelp.org/digraph.txt.html)  ","title":"Dígrafos no VIM"},{"id":49,"location":"/til/vim-compilar-vim-8.html","tags":["vim"],"text":" ``` cd ~/git git clone https://github.com/vim/vim.git cd vim  ./configure --with-compiledby=\"Geraldo Ribeiro <geraldolsribeiro@gmail.com>\" \\ --with-features=huge \\ --enable-gui=auto \\ --with-x \\ --enable-rubyinterp \\ --with-ruby-command=/usr/bin/ruby \\ --enable-perlinterp \\ --enable-pythoninterp --with-python-config-dir=/usr/lib/python2.7/config \\ --enable-fontset \\ --enable-cscope \\ --enable-gtk2-check \\ --enable-gnome-check  make ```  ","title":"Compilar Vim 8"},{"id":50,"location":"/til/mktemp.html","tags":["bash","mktemp"],"text":" ```bash cd $(mktemp -d) ``` ","title":"Bash - trap"},{"id":51,"location":"/til/canary-release.html","tags":["web"],"text":" ## Referências  * [Dark Launching, Canary Releases for Frontend Projects](https://medium.com/front-end-weekly/how-to-add-dark-launching-to-frontend-projects-df35e6046d46)  ","title":"Canary Release & Dark Launching"},{"id":52,"location":"/til/cpp-fltk-layout.html","tags":["C++","cpp","fltk"],"text":" ## Introdução  O FLTK utiliza um sistema simples, porém versátil para redimensionar interfaces.  ## Aplicação inicial  * Para demonstrar o gerenciamento do layout criei uma aplicação composta de 9 botões com labels de 1 até 9. * Note que eu criei os botões totalmente fora de ordem: 5, 2, 4, 8, 6, 1, 3, 7 e 9. Isto não importa para o layout. * Todos os botões são filhos da janela principal.  ### Arquivo 01.fl  ```c++ # data file for the Fltk User Interface Designer (fluid) version 1.0304 header_name {.h} code_name {.cxx} Function {} {open } {   Fl_Window {} {     label 01 open selected     xywh {122 262 420 180} type Double visible   } {     Fl_Button {} {       label 5       xywh {140 60 140 60}     }     Fl_Button {} {       label 2       xywh {140 0 140 60}     }     Fl_Button {} {       label 4       xywh {0 60 140 60}     }     Fl_Button {} {       label 8       xywh {140 120 140 60}     }     Fl_Button {} {       label 6       xywh {280 60 140 60}     }     Fl_Button {} {       label 1       xywh {0 0 140 60}     }     Fl_Button {} {       label 3       xywh {280 0 140 60}     }     Fl_Button {} {       label 7       xywh {0 120 140 60}     }     Fl_Button {} {       label 9       xywh {280 120 140 60}     }   } } ```  ### Arquivo Makefile  Para realizar a compilação dos programas crie o seguinte `Makefile`:  ```Makefile # ---------------------------------------------------------------------- # Copyright (C) 2017-2021 Geraldo Ribeiro <geraldo@intmain.io> # ----------------------------------------------------------------------  PROGRAMS=01 02 03 04 GENERATED=$(addsuffix .h, $(PROGRAMS)) $(addsuffix .cxx, $(PROGRAMS))  CXXFLAGS+=-std=c++17 CXXFLAGS+=`fltk-config --cxxflags` LDFLAGS+=`fltk-config --ldflags`  # Geração de código %.cxx: %.fl \tfluid -c $^  # Opção de compilação 1 %: %.cxx \tfltk-config --compile $^  # Opção de compilação 2 #%: %.cxx #\t$(CXX) $(LDFLAGS) $^ -o $@ $(LDFLAGS)   all: $(PROGRAMS)  clean: \trm -f $(PROGRAMS) $(GENERATED) ```  ### Geração de código  Para gerar o código **C++** (`.cxx`) a partir do **Fluid** (`.fl`) basta digitar `make` que o código é gerado e compilado:  ```bash make fluid -c 01.fl fltk-config --compile 01.cxx ```  ### Arquivo gerado 01.cxx  ```c++ // generated by Fast Light User Interface Designer (fluid) version 1.0304  #include \"01.h\"  int main(int argc, char **argv) {   Fl_Double_Window* w;   { Fl_Double_Window* o = new Fl_Double_Window(420, 180, \"01\");     w = o; if (w) {/* empty */}     { new Fl_Button(140, 60, 140, 60, \"5\");     } // Fl_Button* o     { new Fl_Button(140, 0, 140, 60, \"2\");     } // Fl_Button* o     { new Fl_Button(0, 60, 140, 60, \"4\");     } // Fl_Button* o     { new Fl_Button(140, 120, 140, 60, \"8\");     } // Fl_Button* o     { new Fl_Button(280, 60, 140, 60, \"6\");     } // Fl_Button* o     { new Fl_Button(0, 0, 140, 60, \"1\");     } // Fl_Button* o     { new Fl_Button(280, 0, 140, 60, \"3\");     } // Fl_Button* o     { new Fl_Button(0, 120, 140, 60, \"7\");     } // Fl_Button* o     { new Fl_Button(280, 120, 140, 60, \"9\");     } // Fl_Button* o     o->end();   } // Fl_Double_Window* o   w->show(argc, argv);   return Fl::run(); } ```  ## Executando a aplicação 01  Ao ser executada a aplicação `./01` notamos que o redimensionamento está desabilitado, pois temos na janela principal somente os botões de *enrolar*, *minimizar* e *fechar* habilitados.  {{% img src=\"/img/fltk-01-01.webp\" alt=\"Aplicação 01 sem possibilidade de redimensionamento.\" %}}  ## Aplicação 02  A aplicação 02 é uma cópia da 01 com redimensionamento (`resizable`) habilitado na janela principal.  {{% img src=\"/img/fltk-02-00.webp\" alt=\"Ativando redimensionamento na aplicação 02.\" %}}  Podemos ver pelo `diff` abaixo que apenas o flag `resizable` foi adicionado e o título da janela foi alterado para `02`.  ```diff diff 01.fl 02.fl 8,9c8,9 <     label 01 open selected <     xywh {122 262 420 180} type Double visible --- >     label 02 open selected >     xywh {122 262 420 180} type Double resizable visible ```  Note que agora o botão de *maximizar* é adicionado:  {{% img src=\"/img/fltk-02-01.webp\" alt=\"Aplicação 02 em tamanho inicial.\" %}}  E podemos redimensionar a janela horizontalmente e verticalmente:  {{% img src=\"/img/fltk-02-02.webp\" alt=\"Aplicação 02 redimensionada horizontalmente.\" %}}  {{% img src=\"/img/fltk-02-03.webp\" alt=\"Aplicação 02 redimensionada verticalmente.\" %}}  Note que todos os 9 botões são redimensionados da mesma forma.  ## Aplicação 03  A aplicação 03 é uma cópia da 02 com redimensionamento habilitado no botão 5.  {{% img src=\"/img/fltk-03-00.webp\" alt=\"Ativando o redimensionamento para o botão 05 na aplicação 03.\" %}}  ```diff 8c8 <     label 02 open selected --- >     label 03 open selected 13c13 <       xywh {140 60 140 60} --- >       xywh {140 60 140 60} resizable  ```  {{% img src=\"/img/fltk-03-01.webp\" alt=\"Aplicação 03 em tamanho inicial.\" %}}  Ao redimensionar a janela podemos notar alguns comportamentos:  * os botões 1, 3, 7 e 9 (diagonais de 5) permanecem com suas dimensões originais * os botões 2 e 8 (acima e abaixo de 5) são redimensionados horizontalmente acompanhando o tamanho 5. * os botões 4 e 6 (à direita e à esquerda de 5) são redimensionados verticalmente acompanhando o tamanho 5. * comportamento válido quando se tem somente um widget marcado como `resizable`.  {{% img src=\"/img/fltk-03-02.webp\" alt=\"Aplicação 03 redimensionada.\" %}}  ## Aplicação 04  A aplicação 04 é uma cópia da 02 com redimensionamento habilitado no botão 9.  {{% img src=\"/img/fltk-04-01.webp\" alt=\"Aplicação 04 redimensionada.\" %}}  Observe que o mesmo comportamento geral é aplicado:  * diagonais são mantidas * acima (e abaixo se houvesse) redimensionados acompanhando a largura de 9 * à esquerda (e à direita se houvesse) redimensionados acompanhando a altura de 9  ## Referências  * [Article #415: How does resizing work?](https://www.fltk.org/articles.php?L415)  ","title":"C++ - Gerenciando layout em FLTK"},{"id":53,"location":"/til/vim-slow.html","tags":["vim"],"text":" * <http://eduncan911.com/software/fix-slow-scrolling-in-vim-and-neovim.html>  ```vim :set cursorline! :set lazyredraw ```  ```vim set synmaxcol=128 syntax sync minlines=256 ```  ","title":"Vim lento"},{"id":54,"location":"/til/vim-copiar-nome-do-arquivo.html","tags":["vim"],"text":" Ao preparar relatórios por vezes preciso obter o caminho completo do arquivo que estou analisando. Uma maneira prática de obter esse caminho é colar o conteúdo do registrador `%` e recortá-lo para a área de transferência com `dd`:  {{< kbd \"\\\" % p d d\" >}}  Para o comando acima copiar diretamente para a área de transferência do desktop é necessário a seguinte configuração no `.vimrc`:  ```vim set clipboard=unnamedplus ```  Caso contrário seria necessário especificar o registrador `\"+` e o comando ficaria um pouquinho maior:  {{< kbd \"\\\" % p \\\" + d d\" >}}  ## Referências  * [Get the name of the current file](https://vim.fandom.com/wiki/Get_the_name_of_the_current_file)  ","title":"Copiar o nome do arquivo atual"},{"id":55,"location":"/til/vim-explorer.html","tags":["vim"],"text":" ```vim :Explore \" Lista os arquivo :Sex     \" Lista com split :Vex     \" Lista Vertical com split ```  ## Comando dentro da árvore  * `%` cria um arquivo * `d` cria um diretório * `R` renomeia um arquivo * `D` deleta um arquivo  ## Referências  * [The file explorer](http://vimcasts.org/transcripts/15/en/)  ","title":"VIM - Explorer"},{"id":56,"location":"/til/eclipse-debug.html","tags":["eclipse"],"text":" ## Debugando plugin com Spy    plug-in spy (Alt+Shift+F1)  xxx  ## Referências  * [Java Debugging with Eclipse - Tutorial](https://www.vogella.com/tutorials/EclipseDebugging/article.html)  ","title":"Debugando no eclipse"},{"id":57,"location":"/til/fonte-para-desenvolvimento.html","tags":["fonts"],"text":" http://s9w.io/font_compare/  ","title":"Fonte Para Desenvolvimento"},{"id":58,"location":"/til/dropzonejs.html","tags":["dropzone","javascript","upload"],"text":"   ## Referências  * [gitlab do dropzone](https://gitlab.com/meno/dropzone) * [Dropzonejs.com](https://www.dropzonejs.com/) * [How to Build a File Upload Form with Express and Dropzone.js](https://www.sitepoint.com/file-upload-form-express-dropzone-js/) * [Upload de arquivos com DropzoneJS e PHP](https://www.devmedia.com.br/upload-de-arquivos-com-dropzonejs-e-php/36781) ","title":"Dropzone"},{"id":59,"location":"/til/web-insomnia.html","tags":["web"],"text":" ## Instalação  Adicionar ao `sources.list`  ```bash echo \"deb https://dl.bintray.com/getinsomnia/Insomnia /\" \\     | sudo tee -a /etc/apt/sources.list.d/insomnia.list ```  Adicionar a chave pública para verificar as assinaturas dos pacotes  ```bash wget --quiet -O - https://insomnia.rest/keys/debian-public.key.asc \\     | sudo apt-key add - ```  Atualizar a lista de pacotes disponíveis e instalar o pacote insomnia.  ```bash apt-get update apt-get install insomnia ```    ## Referências  * [Installation](https://support.insomnia.rest/article/23-installation#ubuntu)  ","title":"Primeiros passos com o insomnia"},{"id":60,"location":"/til/simple-screen-recorder.html","tags":["simple-screen-recorder"],"text":" Configurações sugeridas pelo Leandro Ramos:  * Tela toda * Taxa de quadros 24 ou 30 * Backend: Pulseaudio * Recipiente: Matroska (MKV) * Codec vídeo: outro/msmpeg4v2 * Bitrate: 5000 * Codec audio: sem compressão (aqui é que ganha redução de CPU)  * [Otimizando a performance do Simplescreenrecorder](https://www.youtube.com/watch?v=GM7gbX6E83Q)  ","title":"Configurações para o simple-screen-recorder"},{"id":61,"location":"/til/git-manter-somente-os-n-ultimos-commit.html","tags":["git"],"text":" Não estou certo de cut -c3-  ```bash git config --global alias.rebase-last-five '!b=\"$(git branch --no-color | cut -c3-)\"; \\ h=\"$(git rev-parse $b)\" ; \\ echo \"Current branch: $b $h\" ; \\ c=\"$(git rev-parse $b~4)\" ; \\ echo \"Recreating $b branch with initial commit $c ...\" ; \\ git checkout --orphan new-start $c ; \\ git commit -C $c ; \\ git rebase --onto new-start $c $b ; \\ git branch -d new-start ; \\ git gc'  ```  ## Referências  * [How to delete all Git commits except the last five](https://stackoverflow.com/questions/11929766/how-to-delete-all-git-commits-except-the-last-five) ","title":"git - como manter somente os n últimos commits"},{"id":62,"location":"/til/html-input-pattern.html","tags":["html"],"text":" Apenas letras  ```html <input   type=\"text\"   required=\"required\"   name=\"text\"   pattern=\"[a-z\\s]+$\" /> ```  Apenas números  ```html <input   type=\"text\"   required=\"required\"   name=\"numbers\"   pattern=\"[0-9]+$\" /> ```  Data  ```html <input   type=\"date\"   required=\"required\"   maxlength=\"10\"   name=\"date\"   pattern=\"[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}$\"   min=\"2012-01-01\"   max=\"2014-02-18\" /> ```  Hora  ```html <input   type=\"time\"   required=\"required\"   maxlength=\"8\"   name=\"hour\"   pattern=\"[0-9]{2}:[0-9]{2} [0-9]{2}$\" /> ```  Campos genéricos de texto  ```html <input   type=\"text\"   required=\"required\"   name=\"name\" /> ```  Telefone  ```html <input   type=\"tel\"   required=\"required\"   maxlength=\"15\"   name=\"phone\"   pattern=\"\\([0-9]{2}\\) [0-9]{4,6}-[0-9]{3,4}$\" /> ```  Email  ```html <input   type=\"email\"   required=\"required\"   class=\"input-text\"   name=\"email\"   pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" /> ```  Moeda  ```html <input   type=\"tel\"   required=\"required\"   maxlength=\"15\"   name=\"valor\"   pattern=\"([0-9]{1,3}\\.)?[0-9]{1,3},[0-9]{2}$\" /> ```  Utilizei o `type=”tel”`, pq em celulares renderiza melhor o teclado.  Input file  ```html <input   type=\"file\"   name=\"file\"   accept=\"image/*\"   required=\"required\" /> ```  Código do país  ```html <input   type=\"text\"   name=\"country_code\"   pattern=\"[A-Za-z]{3}\"   title=\"Three letter country code\" /> ```  Senha  ```html <input   type=\"password\"   name=\"pwd\"   pattern=\".{8,}\"   title=\"Eight or more characters\" /> ```  ```html <input   type=\"password\"   name=\"pwd\"   pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"   title=\"Must contain at least one  number and one uppercase and lowercase letter, and at least 8 or more characters\" /> ```  Busca  An `<input>` element with `type=\"search\"` that CANNOT contain the following characters: `'` or `\"`  ```html <input   type=\"search\"   name=\"search\"   pattern=\"[^'\\x22]+\"   title=\"Invalid input\"> ```  URL  ```html <input   type=\"url\"   name=\"website\"   pattern=\"https?://.+\"   title=\"Include http://\"> ```  ## placeholder  Lembre-se de usar o placeholder nos seus campos em que você precise “dar alguma dica” para o usuário de como ele deve preenchê-lo  Estilizar os inputs  Faça testes utilizando as pseudo classes  ```html input:required:invalid {} input:required:valid {} ```  ## Personalizar as mensagens de erro  Encontrei este artigo bem completo e interessante: Validando formulários like a boss com HTML5. Onde é mostrado o atributo: required x-moz-errormessage=”Ops. Não esqueça de preencher este campo.”, logicamente exclusivo do Firefox.  E para webkit, o css:  ```html ::-webkit-validation-bubble {/*Insira aqui seu CSS.*/} ::-webkit-validation-bubble-message {} ::-webkit-validation-bubble-arrow {} ::-webkit-validation-bubble-arrow-clipper {} ```  That’s all folks!  Em alguns inputs, mesmo com o type definido, eu forcei a validação no pattern, pois um pode ser implementado sem o outro pelos browsers, e existe um “bug” no type email, em que no Chrome ele aceita um email do tipo: email@a, sem obrigar que o cliente informe o domínio do site. (.com, .net…)  Comente caso use algum, ou tenha outro para sugerir!!  ## Referências  * [Validando formulários apenas com html5](http://wbruno.com.br/html/validando-formularios-apenas-com-html5/) * [HTML <input> pattern Attribute](https://www.w3schools.com/tags/att_input_pattern.asp)  ","title":"input pattern"},{"id":63,"location":"/til/eclipse-juno-4.2.2-no-debian-buster.html","tags":["eclipse"],"text":" How to install **Eclipse Juno** on Linux?  Baixei a versão xxx do mirror https://mirror.combahton.net/ubuntu/pool/main/o/openjdk-8/   ```bash BASEURL=https://mirror.combahton.net/ubuntu/pool/main/o/openjdk-8  for i in \\ openjdk-8-dbg_8u131-b11-2ubuntu1.16.04.3_amd64.deb \\ openjdk-8-demo_8u131-b11-2ubuntu1.16.04.3_amd64.deb \\ openjdk-8-jdk-headless_8u131-b11-2ubuntu1.16.04.3_amd64.deb \\ openjdk-8-jdk_8u131-b11-2ubuntu1.16.04.3_amd64.deb \\ openjdk-8-jre-headless_8u131-b11-2ubuntu1.16.04.3_amd64.deb \\ openjdk-8-jre-jamvm_8u131-b11-2ubuntu1.16.04.3_amd64.deb \\ openjdk-8-jre_8u131-b11-2ubuntu1.16.04.3_amd64.deb \\ openjdk-8-source_8u131-b11-2ubuntu1.16.04.3_all do   wget -c $BASEURL/$i done  apt install multiarch-support  wget http://ftp.us.debian.org/debian/pool/main/libp/libpng/libpng12-0_1.2.50-2+deb8u3_amd64.deb   #wget $BASEURL/openjdk-8-dbg_8u191-b12-2ubuntu0.16.04.1_amd64.deb #wget $BASEURL/openjdk-8-jdk-headless_8u191-b12-0ubuntu0.16.04.1_amd64.deb #https://mirror.combahton.net/ubuntu/pool/main/o/openjdk-8/openjdk-8-jre-headless_8u191-b12-2ubuntu0.16.04.1_amd64.deb ```  ","title":"Eclipse Juno 4.2"},{"id":64,"location":"/til/x-inverter-cores.html","tags":["debian","linux","xorg","xcalib","xfce"],"text":" Use o utilitário `xcalib` para inverter as cores da tela:  ```bash apt install xcalib xcalib -i -a ```  ## Referências  * [invert colors on X (or xfce4)](https://superuser.com/questions/208746/invert-colors-on-x-or-xfce4)  ","title":"Como inverter as cores no X"},{"id":65,"location":"/til/analise-de-ponto-de-funcao.html","tags":["function-point"],"text":" * adicionar 30% aos pontos de função para problemas não previstos  Produtividade por linguagem:  * C++: de 6.5 a 12 H/PF  * Quando se conta somente tabelas o TER é sempre igual a 1 * XML TER pode ser maior que 1 * tem uma boa explicação neste vídeo [Pontos por função - Arquivos Lógicos Internos](https://youtu.be/d7P-bh-1Y_g)  ## Referências  * [VÍDEO: Exemplo de Medição com Pontos de Função em um Estudo de Caso Web](https://youtu.be/T2NShJoKJqI) * [VÍDEO: APF - Análise de Pontos de Função - Exemplo Prático](https://youtu.be/N3AO3JKaLa4) * [UCP - Use Case Points - Pontos de Casos de Uso - Exemplo Prático](https://www.youtube.com/watch?v=10NpZxju2YI) * [Pontos por função - Arquivos Lógicos Internos](https://youtu.be/d7P-bh-1Y_g) * [Pontos por função - mapeando a complexidade da saída de dados](https://youtu.be/BMLqq0aYlLE?list=TLPQMjIwOTIwMjBlrBT_JmSVhg) ","title":"Análise se Pontos de Função"},{"id":66,"location":"/til/cpp-optimlib.html","tags":["C++","cpp","otimização","optimlib","differential evolution"],"text":" A **OptimLib** é uma biblioteca C++ lightweight para otimização numérica de funções não lineares.  ::: toc  ## Instalação da optimlib  ```bash git clone https://github.com/kthohr/optim.git cd optim ./configure --header-only-version ```  Após os comandos acima é criado um diretório chamado `header_only_version`. A partir daí é só incluir este diretório nos flags de compilação: `-Ialgum-lugar/header_only_version`  ## Exemplo 1  Neste exemplo usaremos o método **Differential Evolution (DE)** que é uma busca genética estocástica para otimização global.  Localizar o mínimo da função $f(x) = x^2 - 5x + 6$.  ![Função exemplo para busca do mínimo.](/til/optimlib_01.webp)  A função a ser otimizada precisa ter o seguinte formato:  ```cpp double f( vetor_de_entrada,           vetor_de_gradiente,           parametros_adicionais ) ```  Definindo nosso $f(x)$ usando o formato acima:  ```cpp double f( const arma::vec &vals_inp,           arma::vec *grad_out,           void *opt_data ) {   // Nosssa função é muito simples e só utiliza uma entrada   const double x = vals_inp( 0 );   return x * x - 5 * x + 6; } ```  Realizando a otimização:  ```cpp arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5 if( optim::de( x, f, nullptr ) ) {   cout << \"Mínimo para f(x): \"        << \"x² - 5x + 6 => \" << x << endl;   // Mínimo para f(x) = x² - 5x + 6 => 2.5000 } ```  ## Exemplo 2  A função anterior é muito bem comportada e sem mínimos locais. Vamos complicar um pouco.  Localizar o mínimo da função $h(x) = x^2 - 5x + 6 + 0.2\\sin(10x)$.  ![Cálculo do valor mínimo.](/til/optimlib_02.webp)  Definindo a nova função:  ```cpp double h( const arma::vec &vals_inp,           arma::vec *grad_out,           void *opt_data ) {   const double x  = vals_inp( 0 );   return x * x - 5 * x + 6 + 0.2 * sin( 10 * x ); } ```  Realizando a otimização:  ```cpp arma::vec x = arma::ones( 1, 1 ) + 0.5; // Valor inicial 1.5 if( optim::de( x, h, nullptr ) ) {   cout << \"Mínimo para h(x): \"        << \"x² - 5x + 6 + 0.2 sin( 10x ) => \"        << x << endl;   // Mínimo para h(x): x² - 5x + 6 + 0.2 sin( 10x ) => 2.3693 } ```  ## Referências  * [OptimLib: a lightweight C++ library of numerical optimization methods for nonlinear functions](https://github.com/kthohr/optim) * [Lec 12 : Differential Evolution](https://www.youtube.com/watch?v=xwR7WbKtylg)   ","title":"Otimização numérica em C++"},{"id":67,"location":"/til/cpp-fltk-fluid.html","tags":["flkt","c++"],"text":" Para usar o `gvim` como editor externo no `fluid` use o modo *foreground*:  ```bash gvim -f ```  ![Usando o gvim em modo foreground.](/til/fltk-fluid-01.webp) ","title":"Fluid + gvim"},{"id":68,"location":"/til/troca-rapida-de-usuario-no-xfce.html","tags":["xfce"],"text":"     apt install xfswitch-plugin  https://askubuntu.com/questions/79318/how-can-i-switch-users-from-within-xfce  ","title":"Troca Rápida De Usuário No Xfce"},{"id":69,"location":"/til/gerenciador-de-arquivos.html","tags":["file-manager","linux","debian","ubuntu"],"text":" O gerenciador de arquivos pode fazer muito mais do que simplesmente copiar, colar e renomear arquivos.  Você já conhece o **Nemo**, um fork do **GNOME Files**?   ## Instalando o nemo  ```bash apt install nemo ```  ## Nemo como gerenciador padrão  ```bash xdg-mime default nemo.desktop inode/directory application/x-gnome-saved-search ```  ## Criando novas funções  O arquivo [/usr/share/nemo/actions/sample.nemo_action](https://github.com/linuxmint/nemo/blob/master/files/usr/share/nemo/actions/sample.nemo_action) contém um exemplo de script para criação de comandos.  O locais padrão para os arquivos de script são:  * `/usr/share/nemo/actions/` para todos os usuários do sistema * `~/.local/share/nemo/actions/` para um usuário específico  Nota: os arquivos precisam ter a extensão `.nemo_action`.  Exemplo: `clamscan.nemo_action`  ```bash [Nemo Action] Name=Clam Scan Comment=Clam Scan Exec=gnome-terminal -x sh -c \"clamscan -r %F | less\" Icon-Name=bug-buddy Selection=Any Extensions=dir;exe;dll;zip;gz;7z;rar; ```  Exemplo: `archive.nemo_action`  ```bash [Nemo Action] Active=true Name=Archive %N Comment=Archiving %N will add .archive to the object. Exec=<archive.py %F> Selection=S Extensions=any; ```  Exemplo: `archive.py`  ```python #! /usr/bin/python2 -OOt import sys import os import shutil filename = sys.argv[0] print \"Running \" + filename print \"With the following arguments:\" for arg in sys.argv:     if filename == arg:         continue     else:         print arg         #os.rename('%s','%s.archive') % (arg,arg)         shutil.move(arg, arg+\".archive\") ```   ## Referências  * [Nemo wiki do archlinux](https://wiki.archlinux.org/index.php/Nemo)  ","title":"Gerenciador de arquivos"},{"id":70,"location":"/til/opendds.html","tags":["OpenDDS","ZeroMQ","Boost.Asio"],"text":" ## Referências  * [COMPARING OPENDDS AND ZEROMQ USAGE AND PERFORMANCE](https://objectcomputing.com/resources/publications/mnb/comparing-opendds-and-zeromq-usage-and-performance) ","title":"OpenDDS"},{"id":71,"location":"/til/bindfs.html","tags":["bash"],"text":"   ## Referências  * [Mounting filesystem with special user id set](https://askubuntu.com/questions/34066/mounting-filesystem-with-special-user-id-set)   ","title":"BindFS - visualizando filesystem com outro usuário"},{"id":72,"location":"/til/imgui.html","tags":["imgui"],"text":" ## Referências  * [Going deep with IMGUI and Editor Customization](https://blogs.unity3d.com/pt/2015/12/22/going-deep-with-imgui-and-editor-customization/) * [Range Selection / Multiple selection for TreeNode (Shift+click, Shift+arrows) #1861](https://github.com/ocornut/imgui/issues/1861)  ","title":"Imgui"},{"id":73,"location":"/til/i3.html","tags":["i3"],"text":" ## Eliminar a borda das janelas  ```bash for_window [class=\".*\"] border pixel 0 ```  Dica do [Kylinux Cast](https://www.youtube.com/watch?v=rnZm3g_rbwM)  https://gitlab.com/kylinux/dotfiles   ## Referências  * []()  ","title":"i3"},{"id":74,"location":"/til/touchpad-desabilitar-colar-com-botao-do-meio.html","tags":["touchpad"],"text":" Frequentemente tenho colado texto no editor enquanto tentava apens clicar para posicionar o cursor. Isto ocorre no notebook em que o touchpad não tem separação tátil entre os botões. É muito fácil clicar um pouco mais para a direita e acertar o botão errado.  Para desabilitar a função use:  ```bash gsettings set org.gnome.desktop.interface gtk-enable-primary-paste false ```  Para habilitar a função use:  ```bash gsettings set org.gnome.desktop.interface gtk-enable-primary-paste true ```  ## Referências  * [How do I disable middle mouse button click paste?](https://askubuntu.com/questions/4507/how-do-i-disable-middle-mouse-button-click-paste  ","title":"Desabilitar função color com botão do meio"},{"id":75,"location":"/til/ex.html","tags":["ex","vim","bash"],"text":" ```bash ex foo.txt <<-EOF   g/^\\s*$/d   %s/^/[/   %s/\\(.*\\)\\(\\s\\+\\)\\(.*\\)/\\3\\2\\1   %s/$/]/   %s/design/test/   wq \" Update changes and quit. EOF ```   * o comando `ex` é equivalente a `vim -E`. * acrescente `-V1` para saída mais verbosa   Exemplo uma linha:  ```bash ex +\"g/^\\s*$/d\" +\"%s/^/[/\" +\"%s/design/test/\" -cwq foo.txt ```  ## Referências  * [How to run a series of vim commands from command prompt](https://stackoverflow.com/questions/23235112/how-to-run-a-series-of-vim-commands-from-command-prompt)  ","title":"Editando arquivos com ex / vim"},{"id":76,"location":"/til/vim-tidy-html.html","tags":["vim"],"text":"  ```bash !tidy -mi -html -wrap 0 % ```  ```bash !tidy -mi -xml -wrap 0 % ```  ```bash gg=G ```  ## Referências  * [How do I tidy up an HTML file's indentation in VI?](https://stackoverflow.com/questions/815548/how-do-i-tidy-up-an-html-files-indentation-in-vi)  ","title":"Formatação de HTML no vim"},{"id":77,"location":"/til/javascript-error-logging.html","tags":["javascript"],"text":" ## Função de captura de erro  ```javascript window.onerror = function (msg, url, lineNo, columnNo, error) {   // msg - mensagem de erro (p.e. Uncaught ReferenceError: foot is not defined)   // url - script associado ao erro (p.e. /dist/app.js)   // lineNo - número da linha se disponível   // columnNo - número da coluna se disponível   // error - objeto de erro se disponível    // trate o erro aqui    return false; } ```  * Retornar `true` não deixa disparar o default handler * Retornar `false` deixa o default handler executar   ## Transmitindo o erro para o servidor  ```javascript function captureError(ex) {   var errorData = {     name: ex.name, // e.g. ReferenceError     message: ex.line, // e.g. x is undefined     url: document.location.href,     stack: ex.stack // stacktrace string; remember, different per-browser!   };    $.post('/logger/js/', {     data: errorData   }); } ```   ## Referências  * [Capture and report JavaScript errors with window.onerror](https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror)  ","title":"Logando erros em javascript"},{"id":78,"location":"/til/jwt.html","tags":["jwt"],"text":" FlutterCast, Entendendo o JWT (Autenticação) https://youtu.be/BCbO4iRNNsM  ","title":"JWT"},{"id":79,"location":"/til/vim-inserir-caracteres-repetidos.html","tags":["vim"],"text":" Para fazer a linha do título acima `<esc>70i=<esc><esc>`  ```vim     <esc>Nic<esc><esc> ```  N número de repetições c caractere ou palavra  ```vim <esc>5iX<esc><esc> XXXXX  <esc>5iX Y <esc><esc> X Y X Y X Y X Y X Y  ```   ","title":"Como repetir texto no vim"},{"id":80,"location":"/til/vim-executar-macro-em-todos-os-buffers.html","tags":["vim","macro"],"text":" ``` :bufdo execute \"normal @a\" | write ```  ## Referências  * [Run a macro in all buffers in vim](https://stackoverflow.com/questions/3024321/run-a-macro-in-all-buffers-in-vim) ","title":"Como executar macro em todos os buffers do Vim"},{"id":81,"location":"/til/materialize.html","tags":["css"],"text":" ## Exemplo de sites utilizando materialize  * https://www.protectamerica.com/  ## Referências  * [Make Material Design Websites with the Materialize CSS Framework](https://scotch.io/tutorials/make-material-design-websites-with-the-materialize-css-framework) * [Mastering Materialize’s grid system](https://medium.com/protect-america-design/mastering-materializes-grid-system-ffb32b2126d5)  ","title":"Materialize"},{"id":82,"location":"/til/vim-special-auto-complete.html","tags":["vim"],"text":" Do pacote UltiSnip:  ~/.vim/bundle/vim-snippets/UltiSnips/  * date -> 2018-10-27 * time -> 15:10 * datetime -> 2018-10-27 15:47 * uuid -> e348aa09-1875-4eaa-b016-edd12ad7091d * lorem -> lorem ipsum * bbox -> caixa com texto centrado com a largura de comentário * box -> cria uma caixa do tamenho do texto        ","title":"Auto completar especial no Vim"},{"id":83,"location":"/til/junit-rules.html","tags":["junit"],"text":" https://www.infoq.com/news/2009/07/junit-4.7-rules  Unit 4.7, which has just reached Release Candidate stage, includes a significant new feature: Rules.  Rules are, in essence, another extension mechanism for JUnit, which can be used to add functionality to JUnit on a per-test basis. Most examples of custom runners in earlier versions of JUnit can be replaced by Rules. As described in an earlier blog post about the feature:  In JUnit 3 you could also manipulate the test running process itself in various ways. One of the prices of the simplicity of JUnit 4 was the loss of this “meta-testing”. It doesn’t affect simple tests, but for more powerful tests it can be constraining. The object framework style of JUnit 3 lent itself to extension by default. The DSL style of JUnit 4 doesn’t. Last night we brought back meta-testing, but much cleaner and simpler than before. In addition to the capability of adding rules, a number of core rules have been added:  TemporaryFolder: Allows test to create files and folders that are guaranteed to be deleted after the test is run. This is a common need for tests that work with the filesystem and want to run in isolation. ExternalResource: A pattern for resources that need to be set up in advance and are guaranteed to be torn down after the test runs. This will be useful for tests that work with sockets, embedded servers, and the like. ErrorCollector: Allows the test to continue running after a failure and report all errors at the end of the test. Useful when a test verifies a number of independent conditions (although that may itself be a 'test smell'). ExpectedException: Allows a test to specify expected exception types and messages in the test itself. Timeout: Applies the same timeout to all tests in a class. If you'd like to see an example of a rule in action, here's a test using the TemporaryFolder and ExpectedException rules:  public class DigitalAssetManagerTest {  \t@Rule \tpublic TemporaryFolder tempFolder = new TemporaryFolder();  \t@Rule \tpublic ExpectedException exception = ExpectedException.none();  \t@Test \tpublic void countsAssets() throws IOException { \t\tFile icon = tempFolder.newFile(\"icon.webp\"); \t\tFile assets = tempFolder.newFolder(\"assets\"); \t\tcreateAssets(assets, 3);  \t\tDigitalAssetManager dam = new DigitalAssetManager(icon, assets); \t\tassertEquals(3, dam.getAssetCount()); \t}  \tprivate void createAssets(File assets, int numberOfAssets) throws IOException { \t\tfor (int index = 0; index < numberOfAssets; index++) { \t\t\tFile asset = new File(assets, String.format(\"asset-%d.mpg\", index)); \t\t\tAssert.assertTrue(\"Asset couldn't be created.\", asset.createNewFile()); \t\t} \t}  \t@Test \tpublic void throwsIllegalArgumentExceptionIfIconIsNull() { \t\texception.expect(IllegalArgumentException.class); \t\texception.expectMessage(\"Icon is null, not a file, or doesn't exist.\"); \t\tnew DigitalAssetManager(null, null); \t} } To make rule development easier, a few base classes for rules have been added:  Verifier: A base class for rules like ErrorCollector that can turn failing tests into passing ones if a verification check is failed. TestWatchman: A base class for rules that observe the running of tests without modifying the results. Rules were called Interceptors when they made their first appearance in earlier builds of JUnit 4.7. In addition to the rules, JUnit 4.7 also includes:  Some changes to the matchers. Tests that timeout now show the stack trace; this can help to diagnose the cause of the test timing out. Improvements to Javadoc and a few bugs fixed. More information on these features is available in the JUnit 4.7 release notes.  Hamcrest 1.2 support was listed in earlier release notes, but has been rolled back for this release.  While you're waiting for the final release, you can download the release candidate from github, browse org.junit.rules gear, fill out the survey, read about the deadpooling of Kent Beck's JUnit Max, and wait for user reactions to JUnit 4.7 on blogs, friendfeed and twitter.    ","title":"JUnit Rules"},{"id":84,"location":"/til/varicad-moldura.html","tags":["varicad"],"text":" ## Margens por tamanho de folha  Formato | Margem esquerda | Demais margens --------|-----------------|--------------- A0      | 25 mm           | 10 mm A1      | 25 mm           | 10 mm A2      | 25 mm           | 7 mm A3      | 25 mm           | 7 mm A4      | 25 mm           | 5 mm  ## Definindo parâmetros da moldura  1. Execute o comando `sbd` (Ferramentas/Definição dos formatos de folha)  2. Clicar em **Definir o estilo da fronteira da folha de desenho**  ![Comando sbd](/til/varicad-moldura-01.webp)  3. Em **Moldura recortada** use os valores: 0, 0, 0, 0  ![Moldura recortada](/til/varicad-moldura-02.webp)  4. Em **Moldura da grelha** use os valores: 23, 5, 5, 5  ![Moldura da grelha](/til/varicad-moldura-03.webp)  4. Em **Moldura da área de desenho** use os valores: 25, 7, 7, 7  ![Moldura da área de desenho](/til/varicad-moldura-04.webp)  5. Em **Grelha** use os valores:    * Altura do texto: 1.5   * Largura relativa à altura: 1   * Nível: Dimensions  ![Moldura da área de desenho](/til/varicad-moldura-05.webp) ","title":"Varicad - configurando moldura da página"},{"id":85,"location":"/til/junit-excecao.html","tags":["java","junit","exceção","try-catch"],"text":" Este artigo apresenta uma visão suscinta sobre testes de exceção com JUnit usando o idioma `try/fail/catch`, o parâmetro `expected` da anotação `@Test` e a anotação `@Rule`. Cada um dos métodos apresenta prós e contras.   ## Usando bloco try/catch  ```java @Test public void example1() {     try {         find(\"função que deveria lançar uma exceção\");         fail();         // Ponto que nunca deveria ser alcançado quando o teste passar     } catch (NotFoundException e) {         assertThat(e.getMessage(), containsString(\"algo que indique que a exceção certa ocorreu\"));     }     // ... Outras exceções podem ser tratadas aqui. } ```  * Vantagens:   * Ter acesso à exceção para realizar outros procedimentos   * Poder realizar outros *asserts* na mesma função   * Funciona bem de os testes forem criado antes * Desvantagens:   * Um erro comum é esquecer de incluir `fail()` como barreira causando um falso positivo   ## @Test (expected = Exception.class)  ```java public void example2() throws NotFoundException {     find(\"função que deveria lançar uma exceção\");     // Ponto que nunca deveria ser alcançado quando o teste passar } ```  * Vantagens:   * Sintaxe muito mais concisa   * Favorece a escrita de teste focados em um único ponto * Desvantagens:   * Não é possível realizar outros testes após o `find`  ## ExpectedException Rule  ```java  @Test public void example3() throws NotFoundException {     exception.expect(NotFoundException.class);     exception.expectMessage(containsString(\"algo que indique que a exceção certa ocorreu\"));     find(\"função que deveria lançar uma exceção\");     // Ponto que nunca deveria ser alcançado quando o teste passar } ```  * Vantagens:   * Mais de uma expetativa sobre a mesma exceção podem ser testadas após o teste * Desvantagens:   * Não é possível realizar outros testes após o `find`  ## Referências  * [Expecting Exceptions JUnit Rule](http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/) ","title":"Testando exceções com junit"},{"id":86,"location":"/til/chrome-upload-nao-seguro.html","tags":[""],"text":" A partir da versão Chrome 79 (dezembro de 2019) bloqueia o *conteúdo misto* (sites que não usam HTTPS.). Não é mais possível fazer upload para site não seguro.  ## Referências  * [Como evitar conteúdo misto](https://developers.google.com/web/fundamentals/security/prevent-mixed-content/fixing-mixed-content) * [Chrome vai bloquear upload de conteúdo que não usa HTTPS](https://sempreupdate.com.br/chrome-vai-bloquear-upload-de-conteudo-que-nao-usa-https/) * [CSP: block-all-mixed-content](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/block-all-mixed-content) * [Upgrade-Insecure-Requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade-Insecure-Requests) * [No More Mixed Messages About HTTPS](https://security.googleblog.com/2019/10/no-more-mixed-messages-about-https_3.html)  ","title":"Tratando upload não seguro no chrome"},{"id":87,"location":"/til/documentando-projetos-com-doxygen-e-markdown.html","tags":["markdown","doxygen"],"text":" In the next release of doxygen (1.8.3) I plan to introduce a new configuration option USE_MDFILE_AS_MAINPAGE which can be used to specify a markdown page that is to be used as the main page. Then you can configure doxygen as follows:  INPUT                  = README.md other_sources USE_MDFILE_AS_MAINPAGE = README.md  ## Instalação do doxygen      apt-get install doxygen doxygen-latex doxygen-doc doxygen-gui     texlive-lang-portuguese   Doxygen não suporte bash então  https://stackoverflow.com/questions/26874238/can-doxygen-be-used-to-document-makefile-templates-and-include-mk-file-interfa  EXTENSION_MAPPING = sh=C   ## Referências  * [stackoverflow](https://stackoverflow.com/questions/13368350/use-the-readme-md-file-as-main-page-in-doxygen) ","title":"Documentando Projetos Com Doxygen E Markdown"},{"id":88,"location":"/til/xml-tinyxml2.html","tags":["xml"],"text":" ## Referências  * [TinyXML2 Tutorial](https://shilohjames.wordpress.com/2014/04/27/tinyxml2-tutorial/) ","title":"TinyXML2"},{"id":89,"location":"/til/conky.html","tags":["conky"],"text":" ```bash apt install conky-all ```  ```bash # Configuração default conky -C > ~/.conkyrc ```  ## Referências  * []()   ","title":"conky"},{"id":90,"location":"/til/git-update.html","tags":["git"],"text":" How to update all branches?  ```bash git remote update # or git fetch --all  git pull --all ```  ","title":"git - update everything"},{"id":91,"location":"/til/cpp-constexpr.html","tags":["C++","cpp","constexpr"],"text":" A linguagem C++ possui o conceito de expressões constantes (p.e. `1+2`, `3*4`) que SEMPRE produzem o mesmo resultado sem nenhum efeito colateral. Se o compilador puder diretamente otimizar e embutir esta expressões no programa em tempo de compilação teremos um ganho de performance.  ```c++ #include <iostream> #define LEN 10 int len_foo() {     int i = 2;     return i; } constexpr int len_foo_constexpr() {     return 5; }  // Pode ser usado em recursão constexpr int fibonacci(const int n) {     return n == 1 || n == 2 ? 1 : fibonacci(n-1) + fibonacci(n-2); }  int main() {     char arr_1[10];                      // legal     char arr_2[LEN];                     // legal     int len = 10;     // char arr_3[len];                  // ilegal     const int len_2 = len + 1;     constexpr int len_2_constexpr = 1 + 2 + 3;     // char arr_4[len_2];                // ilegal, mas aceito por vários compiladores     // len_2 apesar de constante não é formado somente por constantes     char arr_4[len_2_constexpr];         // legal     // char arr_5[len_foo()+5];          // ilegal     char arr_6[len_foo_constexpr() + 1]; // legal     // 1, 1, 2, 3, 5, 8, 13, 21, 34, 55     std::cout << fibonacci(10) << std::endl;     return 0; } ```  ## Referências  * [Chapter 02: Language Usability Enhancements](https://itbook.xuxinkai.cn/read/modern-cpp-tutorial-en/02-usability.md)  ","title":"C++ - otimização com constexpr"},{"id":92,"location":"/til/git-odt.html","tags":["git"],"text":" Instalar as dependências:  ```bash apt install odt2txt ```  Acrescentar o mapeamento das extensões no `.gitattributes` que serão conhecidas por `odf`:  ``` *.ods diff=odf *.odt diff=odf *.odp diff=odf  *.ods difftool=odf *.odt difftool=odf *.odp difftool=odf ```  Definir qual ferramenta será usada para conversão de texto para o tipo `odf`.  ```bash git config diff.odf.textconv odt2txt ```  ## Referências  * [How to diff .odt files with difftool? kdiff3 diff outputs unreadable characters](https://stackoverflow.com/questions/33448260/how-to-diff-odt-files-with-difftool-kdiff3-diff-outputs-unreadable-characters)   ","title":"git diff para odt"},{"id":93,"location":"/til/varicad-legenda.html","tags":["varicad"],"text":" ## Definindo arquivos de legenda  1. Execute o comando `atm` (Objetos/Atributos e legendas/Lista de materiais e configuração de legenda)  ![Comando atm](/til/varicad-legenda-01.webp)  2. Clique no botão **Legendas**  ![Clicar no botão legendas](/til/varicad-legenda-02.webp)  3. Clicar na legenda e depois em **modificar legenda**  ![Legendas padrão](/til/varicad-legenda-03.webp)  4. Configurar a legenda  ![Configuração para parte](/til/varicad-legenda-04.webp)    * Dx = `-7`   * Dy =  `7`   * Arquivo = `IntMainPart.dwb`   * [x] Para peças  ![Configuração para montagem](/til/varicad-legenda-05.webp)    * Dx = `-7`   * Dy =  `7`   * Arquivo = `IntMainAssembly.dwb`   * [x] Para montagens  ![Deslocamento a partir do canto inferior direito](/til/varicad-legenda-09.webp)  ## Formato dos arquivos de legenda  ![Legenda para componente fabricado](/til/varicad-legenda-06.webp)  ![Legenda para montagem](/til/varicad-legenda-07.webp)  ![Legenda para componente comprado](/til/varicad-legenda-08.webp)   ## Posicionamento dos campos  1. Execute o comando `atm` (Objetos/Atributos e legendas/Lista de materiais e configuração de legenda)  ![Campos marcados para aparecer na legenda](/til/varicad-legenda-10.webp)  Clique em cada um dos itens marcados para aparecer na legenda e depois escolha **Editar atributo**  ![Edição de atributos](/til/varicad-legenda-11.webp)  ![Formato de texto padrão](/til/varicad-legenda-12.webp)  ### Tabela de posicionamento  Campo          | Dx   | Dy ---------------|------|---- name           | -113 | 9 date           |  -19 | 17 weight         |  -19 | 25 material       | -113 | 25 dwg no.        |  -19 | 9 assembly no.   |  -19 | 9 scale          | x    | y drawing format | x    | y designer       | x    | y checker        | x    | y approver       | x    | y drafter        | x    | y revision       | x    | y  ## Referências  * NP 48:1968 Norma portuguesa: Tamanho de folhas * NP 204:1968 Norma portuguesa * ISO 7200:1984 Norma ISO  ","title":"Varicad - configurando arquivos de legenda"},{"id":94,"location":"/til/packt.html","tags":["packtpub"],"text":" ## Crie uma conta  ## Instale o python3  ```bash apt update apt install python3-venv python3-pip ```  ## Instale cliente packt  ```bash pip3 install packt --upgrade ```  ## Referências  * [Packt Publishing Free Learning](https://github.com/luk6xff/Packt-Publishing-Free-Learning)  ","title":"Baixando livros gratuitos da PacktPub"},{"id":95,"location":"/til/certbot-hooks.html","tags":["certbot","hooks","letsencrypt"],"text":" ## Exemplo  Exemplos retirados de [How to Install and Secure the Mosquitto MQTT Messaging Broker on Debian 8](https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-the-mosquitto-mqtt-messaging-broker-on-debian-8).  O certbot utiliza as portas 80 (HTTP) e 443 (HTTPS).  Vamos usar apenas a porta 80.  ```bash {linenos=false} sudo ufw allow http ```  ```bash {linenos=false} sudo certbot certonly --standalone --standalone-supported-challenges http-01 -d mqtt.example.com ```  ```bash {linenos=false} crontab -e ```  ```bash {linenos=false} 15 3 * * * certbot renew --noninteractive --post-hook \"systemctl restart mosquitto\" ```  ## Opções  ### `--pre-hook PRE_HOOK`  Comando a ser executado antes de obter um certificado. Se existirem vários hooks iguais somente um será executado.  * Parar um servidor.  ### `--post-hook POST_HOOK`  Comando a ser executado depois da tentativa de obter ou renovar o certificado. Se existirem vários hooks iguais somente um será executado.  * Reiniciar/iniciar um servidor  ### `--deploy-hook DEPLOY_HOOK`  Comando a ser executado uma vez para cada certificado emitido. São passados as seguintes variáveis para o shell:  * `RENEWED_LINEAGE` contendo o caminho certificado (p.e. `/etc/letsencrypt/live/geraldo.dev`) que contém a chaves e o certificado. * `RENEWED_DOMAINS` contem uma lista separada por espaço dos certificados renovados (p.e. `geraldo.dev www.geraldo.dev`)  ### `--disable-hook-validation`  > Manual: Ordinarily the commands specified for --pre- hook/--post-hook/--deploy-hook will be checked for validity, to see if the programs being run are in the $PATH, so that mistakes can be caught early, even when the hooks aren't being run just yet. The validation is rather simplistic and fails if you use more advanced shell constructs, so you can use this switch to disable it. (default: False)  ### `--no-directory-hooks`  > Manual: Disable running executables found in Certbot's hook directories during renewal. (default: False)  ## Referências  * [How to Install and Secure the Mosquitto MQTT Messaging Broker on Debian 8](https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-the-mosquitto-mqtt-messaging-broker-on-debian-8)  ","title":"Certbot Hooks"},{"id":96,"location":"/til/lgpd.html","tags":["lgpd"],"text":" ## Referências  * [Você está pronto para a LGPD? 5 medidas práticas](https://youtu.be/eTNwBGaOd0g) * [Como a LGPD vai afetar o relacionamento da minha empresa com leads e clientes](https://youtu.be/6lwrlO5QPzw) ","title":"LGPD - Lei Geral de Proteção de Dados"},{"id":97,"location":"/til/escolhendo-versoes-dos-pacotes-no-debian-e-ubuntu.html","tags":["sysadmin","linux","debian","ubuntu","hugo","apt"],"text":" ## Parte 1 - Regra geral  Antes de começar a escolher versões vamos estabelecer que todos os pacotes usarão a versão `stable` por padrão.  No arquivo `/etc/apt/preferences` (que deve estar vazio inicialmente) acrescente as seguintes linhas:  ```bash # Arquivo: /etc/apt/preferences  # Todos os pacotes vem do stable por padrão Package: * Pin: release a=stable Pin-Priority: 1001  Package: * Pin: release a=testing Pin-Priority: 650  Package: * Pin: release a=unstable Pin-Priority: 600 ```  O valor acima de 1000 vai forçar os pacotes que foram instalados na mão usando outras versões a voltarem para o `stable`.  Agora que já definimos uma REGRA GERAL podemos começar a definir as exceções à regra.  ## Parte 2 - Exceções à regra geral  ### Por target  Para exemplo vamos escolher o pacote `hugo` para este post. Você pode usar este mesmo procedimento para qualquer pacote.  Se você acessar https://packages.debian.org/search?keywords=hugo encontrará as seguintes versões:  * stable 0.18.1 * testing 0.55.6 * unstable 0.55.6  {{< notice tip >}} Crie um arquivo dentro do diretório `/etc/apt/preferences.d/` com o nome do pacote que você quer especificar a versão. Pode ser qualquer nome aqui, mas usando o nome do pacote fica mais fácil de manter o sistema. {{< /notice >}}  ```bash # /etc/apt/preferences.d/hugo Package: hugo Pin: release a=testing Pin-Priority: 1002 ```  Observe que a prioridade precisa ser maior que a prioridade da regra padrão para funcionar.  ### Por origem  Ao instalar o pacote `nodejs` a versão `4.8` será instalada pois é a mais recente que está no repositório padrão.  ```bash apt install nodejs ... Obter:1 http://ftp.br.debian.org/debian stretch/main amd64 nodejs amd64 4.8.2~dfsg-1 [3.440 kB] ... ```  Para pegar a versão mais rescente do `nodejs` diretamente do `deb.nodesource.com` em vez do repositório padrão do Debian use:  ```bash # /etc/apt/preferences.d/nodejs Package: * Pin: origin deb.nodesource.com Pin-Priority: 1001 ```  Então basta executar o comando de instalação novamente para que o pacote seja atualizado para a versão `12`.  ```bash apt update apt install nodejs ... Obter:1 https://deb.nodesource.com/node_12.x stretch/main amd64 nodejs amd64 12.6.0-1nodesource1 [16,9 MB] ... ```  ## Parte 3 - Upgrade/Downgrade  Agora que todas as nossas regras já estão definida basta atualizar que os pacotes vão para a versões escolhidas.  ```bash apt-get update apt-get upgrade apt-get dist-upgrade ```  Note que alguns pacotes podem sofrer downgrade nesta atualização.  Só para conferir que a versão escolhida foi realmente instalada:  ```text $ dpkg -l | grep hugo ii  hugo 0.55.6+really0.54.0-1 amd64 Fast and flexible Static Site Generator written in Go ```  ## Entendendo os valores das prioridades  ### P > 1000  Instala mesmo que precise baixar a versão de algum pacote já instalado. Somente prioridades acima de 1000 permitem downgrade.  ### 990 < P <= 1000  Instala somente se uma versão maior estiver disponível no **target release** (Ver variáel APT::Default-Release para detalhes). Não permite downgrade de pacote instalado.  ### 500 < P <= 990  Instala somente se uma versão maior estiver disponível no **target release** (Ver variáel APT::Default-Release para detalhes).  ### 100 < P <= 500  Utilizado como predefinição para os arquivos NotAutomatic e ButAutomaticUpgrades  Instala a menos que exista uma versão disponível em outra distribuição ou se a versão instalada for mais recente.  > causes a version to be installed unless there is a version available > belonging to some other distribution or the installed version is more recent  ### 0 < P <= 100  Instala somente se não possuir versão instalada do pacote.  ### P == 1  Valor padrão para NotAutomatic  ### P < 0  Nunca instala o pacote mesmo que o pacote seja recomendado.  ","title":"Escolhendo versões dos pacotes no Debian/Ubuntu"},{"id":98,"location":"/til/network_ip.html","tags":["network","ip","route"],"text":" ## Route  ```bash $ ip route default via 192.168.15.1 dev wlp3s0 proto dhcp metric 600   10.181.29.0/24   dev lxdbr0  proto kernel scope link src 10.181.29.1   linkdown  172.17.0.0/16    dev docker0 proto kernel scope link src 172.17.0.1    linkdown  192.168.15.0/24  dev wlp3s0  proto kernel scope link src 192.168.15.19 metric 600  192.168.122.0/24 dev virbr0  proto kernel scope link src 192.168.122.1 linkdown  DESTINATION     |INTERFACE  |PROTOCOL    |          |SOURCE           | ```  After launching 5 lxc containers we can realize that each one use an specific virtual interface.  ```bash $ ip route default dev vethb1efb2e9 scope link  default via 192.168.15.1 dev wlp3s0 proto dhcp metric 600  10.181.29.0/24   dev lxdbr0 proto kernel scope link src 10.181.29.1  169.254.0.0/16   dev vethb1efb2e9 proto kernel scope link src 169.254.249.217  169.254.0.0/16   dev vetha30d7f12 proto kernel scope link src 169.254.153.8  169.254.0.0/16   dev veth21ef1dfb proto kernel scope link src 169.254.28.175  169.254.0.0/16   dev vethcfed8118 proto kernel scope link src 169.254.129.246  169.254.0.0/16   dev vethdf8caaa2 proto kernel scope link src 169.254.206.4  172.17.0.0/16    dev docker0      proto kernel scope link src 172.17.0.1 linkdown  192.168.15.0/24  dev wlp3s0       proto kernel scope link src 192.168.15.19 metric 600  192.168.122.0/24 dev virbr0       proto kernel scope link src 192.168.122.1 linkdown ```  After reconfiguring lxc bridge `lxdbr0` to use the address `10.11.12.254` we get and inconsistent routing table.  ```bash $ ip route  default dev veth36479aca scope link  default via 192.168.15.1 dev wlp3s0 proto dhcp metric 600  10.11.12.0/24    dev lxdbr0 proto kernel scope link src 10.11.12.254  169.254.0.0/16   dev veth36479aca proto kernel scope link src 169.254.129.244  169.254.0.0/16   dev veth53f1f182 proto kernel scope link src 169.254.80.31  169.254.0.0/16   dev vethe35f1309 proto kernel scope link src 169.254.67.125  169.254.0.0/16   dev veth252db3c5 proto kernel scope link src 169.254.17.212  169.254.0.0/16   dev vethd2deb052 proto kernel scope link src 169.254.199.118  172.17.0.0/16    dev docker0      proto kernel scope link src 172.17.0.1 linkdown  192.168.15.0/24  dev wlp3s0       proto kernel scope link src 192.168.15.19 metric 600  192.168.122.0/24 dev virbr0       proto kernel scope link src 192.168.122.1 linkdown  ```  Another problem is the default gateway was replaced by a virtual interface and my host can't resolve any internet address. To solve this issue I set the correct gateway again.  ```bash ip route del default route add default gw 192.168.15.1 dev wlp3s0 ```  Then setting the containers to use the bridge  ```bash $ ip route default via 192.168.15.1 dev wlp3s0  default via 192.168.15.1 dev wlp3s0 proto dhcp metric 600  10.11.12.0/24 dev lxdbr0 proto kernel scope link src 10.11.12.254  172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1 linkdown  192.168.15.0/24 dev wlp3s0 proto kernel scope link src 192.168.15.19 metric 600  192.168.122.0/24 dev virbr0 proto kernel scope link src 192.168.122.1 linkdown  ```  ## References  * [Route Specific Subnet to a Particular Interface](https://www.baeldung.com/linux/destination-source-routing) ","title":"The network ip command"},{"id":99,"location":"/til/cpp-mlpack-feed-forward-neural-network-no-debian.html","tags":["ffn","mlpack","debian","linux","apt","C++","cpp","armadillo"],"text":" Este artigo mostra como criar uma rede neural simples no  [Debian stable](https://www.debian.org/releases/stable/) utilizando a [mlpack](http://www.mlpack.org). A `mlpack` é uma biblioteca popular e de alta performance para aprendizado de máquina em C++.  ## Versões do mlpack disponíveis do Debian  As versões disponíveis no momento da escrita deste artigo são:  | Versão do Debian   | Versão do mlpack | Arquiteturas | |:------------------:|:----------------:|--------------| | jessie (oldstable) | 1.0.10-1         | amd64 armel armhf i386 | | stretch (stable)   | 2.1.1-1          | amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x | | buster (testing)   | 3.0.4-1          | amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x | | sid (unstable)     | 3.0.4-1+b1       | kfreebsd-amd64 kfreebsd-i386 |  As versões do `libmlpack-dev` disponíveis para o [Debian](http://debian.org) podem ser consultadas neste [link](https://packages.debian.org/search?keywords=libmlpack-dev&searchon=names&suite=all&section=all).  Neste artigo usaremos a versão `3.0.4` presente no `testing`.  ## Utilizando pacotes testing junto com stable  Eu prefiro utilizar somente os pacotes `stable` nos servidores por serem versões muito bem testadas. Normalmente as últimas versões não estão disponíveis no repositório `stable`, mas sim nos repositórios `testing` e `unstable`. O repositório `testing` contém próximo candidato a se tornar `stable` de cada pacote. O repositório `unstable` contém a última versão disponível de cada pacote.  Misturar repositórios diferente pode ser algo tranquilo de manter se feito com cuidado. É só indicar **precisamente** qual pacote deve ser pego de cada repositório. O Debian tem um mecanismo bem fácil de usar para realizar esta tarefa. No meu caso eu tenho uma regra geral: **pegar sempre do stable** e algumas poucas exceções para pacotes específicos.  Para mesclar diferentes repositórios basta *pinar* os pacotes para indicar quais versões serão usadas.  Para marcar o `mlpack` e o `armadillo` para serem instalados a partir do `testing` crie um arquivo chamado `/etc/apt/preferences.d/mlpack` com o seguinte conteúdo:  ```text Package: *mlpack* Pin: release a=testing Pin-Priority: 1002  Package: *armadillo* Pin: release a=testing Pin-Priority: 1002 ```  O arquivo `/etc/apt/preferences.d/mlpack` poderia ter qualquer nome, mas é conveniente usar algo descritivo.  E para desfazer a pinagem basta remover o arquivo.  Então é só proceder a instalação normal com o `apt` como de costume:  ```bash apt install libmlpack-dev ```  ## Dados de treinamento  Vamos utilizar dois grupos de dados, cada um com duas variáveis (x e y).  Olhando nosso conjunto de dados de cima podemos ver claramente duas curvas, uma para cada conjunto.  ![Grupo de dados de treinamento](/til/mlpack-foo-1.gif#center)  Para facilitar a visualização, o primeiro grupo está em *z=0* e o segundo em *z=1*, conforme pode ser visto na animação abaixo. É mais ou menos isso que a rede deverá *aprender*.  ![Grupo de dados de treinamento](/til/mlpack-foo-2.gif#center)  O arquivo `foo.csv` contém as duas curvas com os pontos distribuídos do modo aleatório para não favorecer ou influenciar o treinamento. São ao todo 400 linhas e 3 colunas. As duas primeiras colunas são as **entradas** e a terceira é o **grupo** a qual pertencem.  ```csv -1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00 1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00 1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00 9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00 -2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00 ... ```  ## Implementação   ### Carregando as dependências  Incluindo os cabeçalhos específicos para rede neural artificial (ANN).  ```c++ #include <mlpack/core.hpp> #include <mlpack/methods/ann/ffn.hpp> #include <mlpack/methods/ann/layer/layer.hpp> #include <mlpack/methods/ann/loss_functions/mean_squared_error.hpp> ```  Para deixar o código bem mais legível alguns namespaces serão usados por padrão.  ```c++ using namespace mlpack; using namespace mlpack::ann; using namespace mlpack::optimization; using namespace arma; using namespace std; using mlpack::data::Load; using mlpack::data::Save; ```  ### Carregar e transpor os dados do arquivo CSV  As matrizes do [Armadillo](http://arma.sourceforge.net/) (pacote de álgebra linear do mlpack) são armazenada no formato `column-major`; isto significa que no disco cada coluna é localizada numa região contígua de memória. Veja [detalhes](https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/matrices.html) na documentação do `mlpack`.  Esta é uma conveniência bem interessante, pois para escrever os arquivos os registros são entrados por linha e para processamento são tratados em colunas.  Então além de carregar é preciso transpor a matriz de dados.  ```c++   // lança uma exceção std::runtime_error se não conseguir carregar. default false   const auto THROW_EXCEPTION = true;   // transpôe a matriz depois de carregar. default true   const auto TRANSPOSE_INPUT = true;   Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );   cout << \"Linhas:  \" << data.n_rows << endl; // 3   cout << \"Colunas: \" << data.n_cols << endl; // 400 ```  A matriz de dados foi carregada e precisa ser dividida entre dados de treinamento e dados de teste.  ![Dados depois de carregados](/til/mlpack-data.svg#center)  É muito importante que o modelo nunca veja os dados de teste para que se tenha uma boa generalização.  ### Constantes para os índices  Para facilitar a leitura do fonte e evitar *números mágicos* no código defini algumas constantes convenientes:  ```c++   const auto VAR1_ROW  = 0;   const auto VAR2_ROW  = 1;   const auto LABEL_ROW = 2;   const auto FIRST_COL = 0;   const auto LAST_COL  = data.n_cols - 1;   const auto TEST_SIZE = 10; ```  Note que neste caso serão usadas 10 amostras para teste.  ### Dados de entrada para treinamento  Usando a função `submat` vamos recortar uma porção dos dados para formar os dados de entrada para treinamento.  ```c++   auto firtsRow  = VAR1_ROW;   auto firtsCol  = FIRST_COL;   auto lastRow   = VAR2_ROW;   auto lastCol   = LAST_COL - TEST_SIZE;   mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol ); ```  ### Dados de saída para treinamento  Usando a função `submat` vamos recortar uma porção dos dados para formar os dados de saída para treinamento.  ```c++   firtsRow        = LABEL_ROW;   lastRow         = LABEL_ROW;   mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol ); ```  ### Dados de entrada para teste  Usando a função `submat` vamos recortar uma porção dos dados para formar os dados de entrada para teste.  ```c++   firtsRow     = VAR1_ROW;   lastRow      = VAR2_ROW;   firtsCol     = LAST_COL - TEST_SIZE + 1;   lastCol      = LAST_COL;   mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol ); ```  ### Dados de saída para teste  Usando a função `submat` vamos recortar uma porção dos dados para formar os dados de saída para teste.  ```c++   firtsRow       = LABEL_ROW;   lastRow        = LABEL_ROW;   mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol ); ```  ### Visualizando os dados de teste  ```c++   cout << \"Dados de entrada para teste: \\n\" << testdata << endl;   cout << \"Dados de saída para teste: \\n\" << testlabels << endl; ```  É importante notar que os dados de teste contém amostras de ambos os grupos e estão distribuídos em todo o espaço de amostra.  ``` Dados de entrada para teste:    0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399    3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458  Dados de saída para teste:    0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000 ```  ### Construindo a rede neural  ![img](/til/mlpack-ffn.svg#center)  ```c++   // Feed Forward Network   // FFN<tipo-de-saída-das-camadas, regra-de-inicialização> model;   FFN<MeanSquaredError<>, RandomInitialization> model;   // Adiciona camada com 2 entradas e 8 saídas   model.Add<Linear<>>( traindata.n_rows, 8 );   model.Add<SigmoidLayer<>>();   // Adiciona camada com 8 entradas e 8 saídas   model.Add<Linear<>>( 8, 8 );   model.Add<SigmoidLayer<>>();   // Adiciona camada com 8 entradas e 1 saída   model.Add<Linear<>>( 8, 1 );   model.Add<SigmoidLayer<>>(); ```  ### Treinamento  A partir da inicialização aleatória dos pesos da conexões inicia-se o treinamento.  ```c++   for( int i = 0; i < 4; ++i ) {     model.Train( traindata, trainlabels );     // Acompanha o erro do modelo     mat assignments;     model.Predict( testdata, assignments );     // Diferença entre o obtido e o esperado     mat diff = assignments - testlabels;     cout << \"Erro: \" << diff * diff.t();   } ```  Note o erro sendo reduzido a cada treinamento.  ``` Erro:    0.0292 Erro:    0.0058 Erro:    0.0038 Erro:    0.0024 ```   ### Testando o modelo ajustado  ```c++   mat assignments;   model.Predict( testdata, assignments );   cout << \"Previsões:\\n\" << assignments << endl;   cout << \"Classificação correta:\\n\" << testlabels << endl; ```  Saída:  ``` Previsões:    0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000  Classificação correta:    0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000 ```  ### Salvando modelo para continuar depois  O modelo pode ser salvo a qualquer momento e recarregado para continuar o treinamento. Um arquivo `XML` serializado pelo `boost` é salvo.  ```c++   Save( \"model.xml\", \"model\", model, false ); ```  ### Carregando o modelo salvo na sessão anterior  ```c++   Load( \"model.xml\", \"model\", model ); ```  ### Nova sessão de treinamento para refinar  ```c++   for( int i = 0; i < 4; ++i ) {     model.Train( traindata, trainlabels );   } ```  ### Novos testes  ```c++   model.Predict( testdata, assignments );   cout << \"Previsões:\\n\" << assignments << endl;   cout << \"Classificação correta:\\n\" << testlabels << endl; ```  Saída:  ``` Previsões:    0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000  Classificação correta:    0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000 ```  ### Salvando o modelo atualizado  ```c++   Save( \"model2.xml\", \"model\", model, false ); ```  ## Código fonte completo  O código fonte completo pode ser encontrado no [github](https://github.com/geraldolsribeiro/mlpack-tutorials/tree/master/ffn).  Para baixar e compilar o fonte deste artigo utilize:  ```bash git clone https://github.com/geraldolsribeiro/mlpack-tutorials/ cd mlpack-tutorials/ffn make ```  ## Referências  * [Apt Preferences](https://wiki.debian.org/AptPreferences) * [Neural Network Tutorial](https://www.mlpack.org/doc/mlpack-3.1.0/doxygen/anntutorial.html)  ","title":"Feed Forward Neural Network no debian com mlpack"},{"id":100,"location":"/til/vim-clipboard.html","tags":["vim"],"text":" Registros:  * `+`: geralmente é a área de transferência do desktop `XA_SECONDARY` (`:help quoteplus`) e é acessada pelo Ctrl+C/Ctrl+V/Ctrl+X * `*`: geralmente é a área de transferência primária do X11 `XA_PRIMARY` (`:help quotestar`), acessada pelo está selecionado pelo mouse  ## Copiar o buffer todo para a área de transferência  ``` :%y           \" copia o buffer todo para uso no vim :%y+          \" copia o buffer todo para uso em qualquer aplicação externa gg\"+yG gg\"*yG ```  ## Vincular as áreas de transferência do vim com a do sistema  ```vim set clipboard=unnamedplus ```  ## Referências  * [How do i select all text in Vi/Vim?](https://superuser.com/questions/227385/how-do-i-select-all-text-in-vi-vim)  ","title":"VIM - Área de transferência"},{"id":101,"location":"/til/java-12-no-debian-buster.html","tags":["java","debian","linux"],"text":" Adicionar repositório.  ```bash cat <<EOF > /etc/apt/sources.list.d/java-12-debian.list deb http://ppa.launchpad.net/linuxuprising/java/ubuntu bionic main deb-src http://ppa.launchpad.net/linuxuprising/java/ubuntu bionic main EOF ```  ```bash apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EA8CACC073C3DB2A apt-get update apt-get install oracle-java12-installer ```  ## Referências  * [How to Install Java 12 on Debian 10/9/8 via PPA](https://tecadmin.net/install-java-non-tls-on-debian/) ","title":"Java 12 no Debian Buster"},{"id":102,"location":"/til/micro.html","tags":["bash"],"text":" ```bash apt install micro ```  <div class=\"c1\">   <div class=\"c2\">   xxx   <div> </div>  ## Referências  * [GentooBer #041 : Micro, tipo o VIM mas que vc consegue fechar](https://www.youtube.com/watch?v=KO4kSDHchfo)  ","title":"Editor micro"},{"id":103,"location":"/til/dtd.html","tags":["xml","dtd"],"text":" ## O DTD pode estar em um arquivo externo  Example howto.html  ```html <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>  <!DOCTYPE howto SYSTEM \"howto.dtd\">  <howto>    <topic>        <title>Java</title>        <url>http://www.rgagnon.com/topics/java-xml.html</url>    </topic>      <topic>        <title>PowerBuilder</title>        <url>http://www.rgagnon.com/topics/pb-powerscript.htm</url>    </topic>    <topic>          <title>Javascript</title>          <url>http://www.rgagnon.com/topics/js-language.html</url>    </topic>    <topic>          <title>VBScript</title>          <url>http://www.rgagnon.com/topics/wsh-vbs.html</url>    </topic>  </howto> ```  Example howto.dtd  ```dtd  <!ELEMENT howto (topic*)>  <!ELEMENT topic (title,url)>  <!ELEMENT title (#PCDATA)>  <!ELEMENT url (#PCDATA)> ```  ## O DTD pode estar dentro do XML  ```xml  <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>  <!DOCTYPE howto [    <!ELEMENT howto (topic*)>    <!ELEMENT topic (title,url)>    <!ELEMENT title (#PCDATA)>    <!ELEMENT url (#PCDATA)>    ]>  <howto>    <topic>        <title>Java</title>        <url>http://www.rgagnon.com/topics/java-xml.html</url>    </topic>  ...  </howto> ```  ## Referências  * [Validate XML using a DTD](https://www.rgagnon.com/javadetails/java-0668.html)  ","title":"Como validar documentos XML usando DTD"},{"id":104,"location":"/til/varicad-importando-do-solidworks.html","tags":["varicad","step","cadexchanger","debian","linux"],"text":" Extrai o conversor cadexchanger  ```bash cd /tmp/work unzip cadexchanger_3.7.1_build12316_lin64.zip ```  Renomeia a extensão dos arquivos do SolidWorks para minúscula pois o cadexchanger não reconhece.  ```bash sudo apt-install rename cd /tmp/work rename \"s/SLDPRT/sldprt/\" * rename \"s/SLDPRT/sldprt/\" * rename \"s/SLDDRW/slddrw/\" * ```  ```bash /tmp/work/cadexchanger_3.7.1_build12316_lin64/bin/ExchangerGui.sh ```    ## Diretórios criados  * `~/.cache/CADEX/` * `~/.cache/mesa_shader_cache` * `~/.cache/qtshadercache` * `~/.config/CAD Exchanger` * `~/.local/share/CAD Exchanger`  ![Converter para step](img/varicad-convert-step-via-cad-exchanger.webp)  ## Referências  * []()  ","title":"Importando arquivos do SolidWorks para o VariCAD"},{"id":105,"location":"/til/noip.html","tags":["noip"],"text":" ```bash curl \\   -u myuser@email.com:mypassword \\   \"http://dynupdate.no-ip.com/nic/update?hostname=myhost.x.y\" ```  ","title":"How to update no-ip by using the command line?"},{"id":106,"location":"/til/cpp-array.html","tags":["C++","cpp","std::array","Algorítimos"],"text":" Exemplos de uso de std::array  ## Características  * é um wrapper para o array do C * array oferece uma sintaxe mais amigável comparada com a array do C * pode ser passado e retornado por valor * pode ser passado e retornado por referência * uso mais conveniente de `size` * uso mais conveniente de iteradores STL * possui exatamente a mesma performace da array do C  ## Array vs Vector  * `array` é estático e possui tamanho definido em tempo de compilação * `vector` é dinâmico e é alocado no `heap`  ## Exemplos  ```c++ #include <algorithm> #include <array> #include <iostream>  using namespace std;  // Multidimensionais template <class T, size_t ROW, size_t COL> using Matrix = std::array<std::array<T, COL>, ROW>;  template <class T, size_t I, size_t... J> struct MultiDimArray {   using Nested = typename MultiDimArray<T, J...>::type;   using type   = std::array<Nested, I>; };  template <class T, size_t I> struct MultiDimArray<T, I> {   using type = std::array<T, I>; };  int main( int argc, char **argv ) {   auto print = []( const auto &arr ) {     cout << \"{ \";     for( const auto &x : arr ) {       cout << x << \" \";     }     cout << \"}\" << endl;   };    array<int, 3> a    = {2, 1, 3};   int           c[3] = {2, 1, 3}; // old C style    sort( a.begin(), a.end() );   print( a ); // { 1, 2, 3 }    sort( begin( c ), end( c ) ); // c == { 1, 2, 3 }   print( c );    for( auto &x : a ) {     x *= 2;   }   print( a ); // { 2, 4, 6 }    for( auto &x : c ) {     x *= 2;   }   print( c ); // { 2, 4, 6 }    array<array<int, 3>, 3> arr = {{{5, 8, 2}, {8, 3, 1}, {5, 3, 9}}};   cout << arr[2][2] << endl; // 9    Matrix<float, 3, 4> mat;   mat[1][2] = 5;    MultiDimArray<int, 2, 3, 4, 5>::type multi;   multi[1][1][1][1] = 5;    return 0; } ```  ## Referências  * [Multi-dimensional arrays in C++11](http://cpptruths.blogspot.com/2011/10/multi-dimensional-arrays-in-c11.html) ","title":"C++ array"},{"id":107,"location":"/til/pencil.html","tags":["pencil"],"text":" ## Referências  * [Introdução à criação de wireframes com o Pencil](https://libredesigners.org/pt-br/blog/post/introducao-criacao-de-wireframes-com-o-pencil) ","title":"Pencil - wireframe"},{"id":108,"location":"/til/git-dicas.html","tags":["git"],"text":" ## Diferença entre dois branches -- somente nomes de arquivos  ```bash git diff --name-only branch-1 branch-2 ```  Status:  * `M` arquivos modificados * `A` arquivos adicionados * `D` arquivos removidos  Filtrando por estes códigos de status temos as próximas dicas.  ## Listar somente os arquivos modificados entre dois branches  ```bash git diff --name-status branch-1 branch-2 | sed -n \"s/^M\\s\\+//p\" ```  * filtra somente as linhas que começam com `M` de modificado.   ## Listar somente os arquivos adicionados entre dois branches  ```bash git diff --name-status branch-1 branch-2 | sed -n \"s/^A\\s\\+//p\" ```  * filtra somente as linhas que começam com `A` de adicionado   ## Listar somente os arquivos removidos entre dois branches  ```bash git diff --name-status branch-1 branch-2 | sed -n \"s/^D\\s\\+//p\" ```  * filtra somente as linhas que começam com `D` de deletados    ## Referências  * [Git - Getting a list of files changed between branches](http://sushihangover.github.io/git-getting-a-list-of-files-changed-between-branches/)  ","title":"git - dicas"},{"id":109,"location":"/til/escolher-o-terminal-padrao.html","tags":["term","linux","debian"],"text":" ```bash update-alternatives --config x-terminal-emulator ```  ## Referências  * []()  ","title":"Como escolher o terminal padrão"},{"id":110,"location":"/til/docker-exportar-imagem.html","tags":["docker"],"text":" ```bash docker export nome-da-imagem > arquivo.tar ```  ```bash docker export --output=\"arquivo.tar\" nome-da-image ```  {{% note %}} Exte comando não salva o conteúdo dos volumes. {{% /note %}}  ## Referências  * [docker export](https://docs.docker.com/engine/reference/commandline/export/)  ","title":"Docker - exportar imagem"},{"id":111,"location":"/til/kali.html","tags":["kali","linux"],"text":" * [27 FERRAMENTAS PARA HACKERS QUE PODEM SER USADAS NO KALI LINUX (PARTE 1)](https://e-tinet.com/linux/27-ferramentas-hackers-kali-linux-parte-1/) * [30 FERRAMENTAS PARA HACKERS QUE PODEM SER USADAS NO KALI LINUX (PARTE 2)](https://e-tinet.com/linux/30-ferramentas-para-hackers-kali-linux/) ","title":"Kali linux"},{"id":112,"location":"/til/xml.html","tags":["xml"],"text":" ## DTD  ### Símbolos  * `?` zero ou um * `+` um ou mais * `*` zero ou mais * `|` ou * ',' e  ### Tipos de dados  * `PCDATA` Parsed Character Data - texto que pode conter marcações * `CDATA` Character Data - texto que não será analisado pelo parser * `Enumerated` lista de valores possíveis, dos quais somente um deve ser escolhido * `ID` um nome único no documento * `IDREF` referência a um nome único no documento * `IDREFS` múltiplos id separados por espaço * `ENTITY` nome de uma entidade * `ENTITIES` múltiplas entidades separadas por espaço * `NMTOKEN` um nome XML * `NMTOKENS` múltiplos nomes de XML separados por espaço * `NOTATION` nome de uma notação  * `#REQUIRED` obrigatório * `#IMPLIED` opcional * `#FIXED` valor padrão não alterável  ## Referências  * [SCA Training for Developers and Testers - Day 4: Developing Application XML Configuration Files](http://web.cse.msstate.edu/~hamilton/SDR/SCA_Training_-_Day_4_Application_XML_Files.pdf)  ","title":"XML"},{"id":113,"location":"/til/meilisearch.html","tags":["search"],"text":" * Search as-you-type experience (answers < 50 milliseconds) * Full-text search * Typo tolerant (understands typos and miss-spelling) * Supports Kanji characters * Supports Synonym * Easy to install, deploy, and maintain * Whole documents are returned * Highly customizable * RESTful API * Faceted search and filtering   ## Referências  * [MeiliSearch - Lightning Fast, Ultra Relevant, and Typo-Tolerant Search Engine](https://github.com/meilisearch/MeiliSearch) * [MeiliSearch - Marketplace digital](https://marketplace.digitalocean.com/apps/meilisearch?action=deploy&refcode=7c67bd97e101) * [Integrate a relevant search bar to your documentation](https://blog.meilisearch.com/how-to-integrate-a-relevant-search-bar-to-your-documentation/)  ","title":"Meili Search"},{"id":114,"location":"/til/js-eventos.html","tags":["javascript","eventos"],"text":" ## Principais eventos  * `onBlur`: remove o foco do elemento * `onChange`: muda o valor do elemento * `onClick`: o elemento é clicado pelo usuário * `onFocus`: o elemento é focado * `onKeyPress`: o usuário pressiona uma tecla sobre o elemento * `onLoad`: carrega o elemento por completo * `onMouseOver`: define ação quando o usuário passa o mouse sobre o elemento * `onMouseOut`: define ação quando o usuário retira o mouse sobre o elemento * `onSubmit`: define ação ao enviar um formulário  ## Eventos inline  ```html <h1 onclick=\"this.innerHTML='Isso acontece quando usamos o evento onClick!'\"> Clique nesse link para testar o evento onClick! </h1> ```  ## onLoad  Disparado quando a página for carregada.  ```html <!DOCTYPE html> <html>   <head>     <title>Usando eventos no Javascript</title>   </head>   <body onload=\"checkCookies()\">    <script>   function checkCookies() {     if( navigator.cookieEnabled == true ) {       alert(\"Cookies são permitidos\")     } else {       alert(\"Cookies não são permitidos\")     }   }   </script>    <p>Irá aparecer um alert dizendo se os cookies estão ou não liberados em seu navegador</p>   </body> </html> ```  ## Referências  * [Trabalhando com eventos em JavaScript](https://www.devmedia.com.br/trabalhando-com-eventos-em-javascript/28521) ","title":"Eventos em javascript"},{"id":115,"location":"/til/sed-cheat-sheet.html","tags":["sed"],"text":" ```bash :  # label =  # line_number a  # append_text_to_stdout_after_flush b  # branch_unconditional              c  # range_change                      d  # pattern_delete_top/cycle           D  # pattern_ltrunc(line+nl)_top/cycle  g  # pattern=hold                       G  # pattern+=nl+hold                   h  # hold=pattern                       H  # hold+=nl+pattern                   i  # insert_text_to_stdout_now          l  # pattern_list                        n  # pattern_flush=nextline_continue    N  # pattern+=nl+nextline               p  # pattern_print                      P  # pattern_first_line_print           q  # flush_quit                         r  # append_file_to_stdout_after_flush  s  # substitute                                           t  # branch_on_substitute               w  # append_pattern_to_file_now          x  # swap_pattern_and_hold              y  # transform_chars                 ```  ## Referências  * [How can I use sed to replace a multi-line string?](https://unix.stackexchange.com/questions/26284/how-can-i-use-sed-to-replace-a-multi-line-string)  ","title":"Dicas do sed"},{"id":116,"location":"/til/english.html","tags":["english"],"text":" * timelessness atemporalidade * cognizance conhecimento   ","title":"English"},{"id":117,"location":"/til/zip-multiplos-volumes.html","tags":["zip"],"text":" Para gerar um zip dividido em múltiplos volumes acrescente `-s` e o tamanho do volume.  ```bash zip -s 50m new.zip big.iso   # partes de 50 MB zip -s 3g  new.zip big.iso   # partes de 3G (útil para vfat) ```  Use:  * `k` para kB * `m` para MB * `g` para GB * `t` para TB * o default é `m`   ## Referências  * [How do I split a .zip file into multiple segments?](https://superuser.com/questions/336219/how-do-i-split-a-zip-file-into-multiple-segments) ","title":"Criando zip com múltiplos volumes"},{"id":118,"location":"/til/ensmallen.html","tags":["c++"],"text":" ## Referências  * [Ensmallen Documentation](https://www.ensmallen.org/docs.html)  ","title":"Ensmallen - flexible C++ library for efficient numerical optimization"},{"id":119,"location":"/til/cpp-lambda.html","tags":["C++","cpp","lambda"],"text":" ## Funções de primeira classe  Em programação funcional funções são **cidadães de primeira classe**, o que significa que elas se comportam com dados e suportam quaisquer operações que a linguagem permita.  Algumas características das funções de primeira classe são:  * atribuir uma função a uma variável * passar uma função como parâmetro para outra função * retornar a função como valor de outra função * armazenar a função em uma estrutura de dados  ## Lambdas  Lambdas são funções anônimas (sem um nome) definidas *in-place*.  ```c++ //  1   2                           3                               4    [ ] ( ) { std::cout << \"Hello from C++ Lambda!\" << std::endl; } ( ); ```  Vamos ver o que cada grupo significa:  * 1 `[]` `lambda introducer` ou `lambda closure` * 2 `()` lista de parâmetros (você pode omitir estes parêntes se a função não receber parâmetros). * 3 `{}` corpo da função lambda * 4 `()` executa a função  ## Programação funcional com lambdas  ```cpp // f(x,y) = x² + y² + 2xy; std::function<int(int,int)> fxsquare = [](int x, int y) -> int {   int xsquare = [](int x) -> int { return x * x; }(x);   int ysquare = [](int y) -> int { return y * y; }(y);   int twoxy   = [](int x, int y) -> int { return 2 * x * y; }(x,y);   return xsquare + ysquare + twoxy; }  cout << fxsquare(5,3) << endl; // 64 ```  ## Referências  * [std::array]({{< ref \"cpp-array.md\" >}}) * [Functional Programming in C++](https://www.codeproject.com/Articles/1267996/Functional-Programming-in-Cplusplus) * [Programação Funcional em Javascript — First-Class Function (Funções de Primeira Classe)](https://medium.com/@angelorubin/javascript-first-class-function-fun%C3%A7%C3%B5es-de-primeira-classe-7ebf63d2c83a)  ","title":"C++ Lambda"},{"id":120,"location":"/til/mithril.html","tags":["js"],"text":" ## Referências  * [Mithril.js: A Tutorial Introduction (Part 1)](https://gilbert.ghost.io/mithril-js-tutorial-1/) * [Mithril.js: A Tutorial Introduction (Part 2)](https://gilbert.ghost.io/mithril-js-tutorial-2/) * [Vídeo: Mithril - The Best Little Framework You've Never Heard Of](https://youtu.be/tNMiCr39Fx0) * [Wiki: Tutorials & Videos & Slides](https://github.com/MithrilJS/mithril.js/wiki/Tutorials-&-Videos-&-Slides) ","title":"Mithril.js"},{"id":121,"location":"/til/hacking.html","tags":["hacking"],"text":" ## Referências  * []()  Existe uma lista gigante de livro acima deste diretório http://index-of.es/Exploit/  ","title":"Download de livros"},{"id":122,"location":"/til/cpp-armadillo.html","tags":["armadillo","C++","cpp","álgebra linear"],"text":" Algebra linear com a biblioteca **armadillo**.  <div> $$ A_{m,n} = \\begin{pmatrix} a_{1,1} & a_{1,2} & \\cdots & a_{1,n} \\\\ a_{2,1} & a_{2,2} & \\cdots & a_{2,n} \\\\ \\vdots  & \\vdots  & \\ddots & \\vdots  \\\\ a_{m,1} & a_{m,2} & \\cdots & a_{m,n}  \\end{pmatrix} $$ </div>  **Armadillo** é uma biblioteca de álgebra linear para C++ rápida e fácil de usar, com sintaxe parecida com a do **Matlab**.  Provê suporte para:  * vetores (tensores de primeira ordem) * matrizes (tensores de segunda ordem) * cubos (tensores de terceira ordem) * matrizes densas e esparsas * números inteiros, de ponto flutuante e complexos * decomposição (via LAPACK) * multi-thread (Intel MKL ou OpenBLAS) * avaliador de expressão baseado em meta-programação * paralelização (via OpenMP)  Principais usos:  * machine learning * reconhecimento de padrões * visão computacional * processamento de sinais * bioinformática * estatística * finanças  ## Instalação no Debian  ```bash apt install libarmadillo-dev ```  ## Instalação no MacOS  ```bash brew install armadillo ```  ## Exemplos de uso  ```c++ #include <armadillo> #include <iostream>  using namespace std; using namespace arma;  int main() {   // inicia o gerador de números aleatórios   arma_rng::set_seed_random();    // Cria uma matriz com dados aleatório com dimensão 2x3   auto A = randu( 2, 3 );   cout << A << endl;   //    0.7038   0.6819   0.9555   //    0.3804   0.9666   0.9270    // Transposta   cout << A.t() << endl;   //    0.7526   0.5681   //    0.5874   0.9469   //    0.3562   0.9346    // Multiplicação de matrizes   cout << A.t() * A << endl;   //    0.0536   0.2644   0.2534   //    0.4731   0.3874   0.9599   //    0.1739   0.3313   0.4768    mat B( 3, 3, fill::randu );   cout << B << endl;   //    0.9563   0.8955   0.0919   //    0.3291   0.3086   0.3452   //    0.1894   0.9898   0.8642    cout << \"Determinante: \" << det( B ) << endl;   // Determinante: -0.243228    auto C = randu( 3, 3 );   cout << C << endl;   //    0.5561   0.6219   0.2147   //    0.3105   0.2813   0.9172   //    0.3408   0.1925   0.4703   cout << \"Determinante: \" << det( C ) << endl;   // Determinante: -0.254525    mat D = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};   cout << D << endl;   //    1.0000   2.0000   3.0000   //    4.0000   5.0000   6.0000   //    7.0000   8.0000   9.0000   cout << \"Determinante: \" << det( D ) << endl;   // Determinante: 6.66134e-16    D.row( 0 ) = D.row( 1 ) + D.row( 2 );   cout << D << endl;   // 11.0000   13.0000   15.0000   //  4.0000    5.0000    6.0000   //  7.0000    8.0000    9.0000    D.row( 1 ) = D.row( 1 ) * 5;   cout << D << endl;   // 11.0000   13.0000   15.0000   // 20.0000   25.0000   30.0000   //  7.0000    8.0000    9.0000   //    D.row( 2 ).zeros();   cout << D << endl;   // 11.0000   13.0000   15.0000   // 20.0000   25.0000   30.0000   //       0         0         0    D.col( 2 ) = D.col( 2 ) + 10;   cout << D << endl;   // 11.0000   13.0000   25.0000   // 20.0000   25.0000   40.0000   //       0         0   10.0000    D = diagmat( D );   cout << D << endl;   // 11.0000         0         0   //       0   25.0000         0   //       0         0   10.0000    D.save( \"D.bin\" );    D.save( \"D.txt\", arma_ascii );   // ARMA_MAT_TXT_FN008   // 3 3   //    1.10000000000000e+01   0.00000000000000e+00   0.00000000000000e+00   //    0.00000000000000e+00   2.50000000000000e+01   0.00000000000000e+00   //    0.00000000000000e+00   0.00000000000000e+00   1.00000000000000e+01    auto O = ones( 2, 2 );   cout << O << endl;   // 1.0000   1.0000   // 1.0000   1.0000    auto Z = zeros( 3, 5 );   cout << Z << endl;   // 0        0        0        0        0   // 0        0        0        0        0   // 0        0        0        0        0    mat F1, F2;   F1.load( \"D.bin\" );   F2.load( \"D.txt\" );   cout << F1 << endl;   // 11.0000         0         0   //       0   25.0000         0   //       0         0   10.000    cout << F1 - F2 << endl;   // 0        0        0   // 0        0        0   // 0        0        0    mat F( 2, 3 );   F.fill( 3.14 );   cout << F << endl;   // 3.1400   3.1400   3.1400   // 3.1400   3.1400   3.1400    F = F.ones();   F.col( 0 ) *= datum::pi;   F.col( 1 ) *= datum::inf;   F.col( 2 ) *= datum::nan;   cout << F << endl;   // 3.1416      inf      nan   // 3.1416      inf      nan    return 0; } ```  ## Referências  * [Armadillo C++ library for linear algebra & scientific computing](http://arma.sourceforge.net/)  ","title":"Álgebra linear com Armadillo"},{"id":123,"location":"/til/vim-spell-checking.html","tags":["vim"],"text":" * `[s` e `]s` navigate to next and previous misspelled word.  ::: youtube id=\"kbMYuCFTSfw\" title=\"Turn Vim into a Spell Checker | Vim 🔥 Tips and Tricks\"  There are times when we edit prose in Vim, such as in a project `README` or Git commit message. In those cases, we can use Vim's spell-checking to help us avoid embarrassing mistakes.  ## Switching on spell-checking  We can switch on spell checking with this command:  ``` :setlocal spell ```  We can also specify the language:  ``` :setlocal spell spelllang=en_us ```  ## What does it look like  Here's a screenshot of what I see as I edit this blog post:  {{< img src=\"images/vim-spell-check.webp\" alt=\"''\" >}}  The highlighted words are considered misspellings.  ## Spell check per filetype  It would be tedious to manually turn on spell-checking each time we need it. Luckily, we can guess by convention that we'll want to spell-check certain files.  We automatically turn on spell-checking for Markdown files based on their file extension with this line in our `~/.vimrc` via [thoughtbot/dotfiles][dotfiles]:  ``` autocmd BufRead,BufNewFile *.md setlocal spell ```  [dotfiles]: https://github.com/thoughtbot/dotfiles/blob/master/vimrc  Another way to do it for certain filetypes is like this:  ``` autocmd FileType gitcommit setlocal spell ```  ## We get word completion for free  By turning on spell-checking in our `~/.vimrc`, we'll be turning on word completion as well. The following command will let us press `CTRL-N` or `CTRL-P` in insert-mode to complete the word we're typing!  ``` set complete+=kspell ```  ## Add words to the dictionary  We can add words like \"RSpec\" or \"thoughtbot\" to the `spellfile` (a list of correctly-spelled words) by cursoring over those words in a file and typing:  ``` zg ```  ","title":"Vim Spell Checking"},{"id":124,"location":"/til/m4.html","tags":["m4"],"text":" **m4** é uma linguagem de macro desenvolvida pelo *Dennis M. Ritchie*   ## Definindo uma macro  O delimitador padrão é o *backtick* (`` ` ``)  junto com o *single quote* (` ' `).  ```m4 define(`yoo',`Hello World!') I say this: yoo yoo yoo ```  Executando `m4 nome_do_arquivo.m4` temos:  ``` I say this: Hello World! Hello World! Hello World! ```  ## Definição com várias linhas  ```m4 define(`header', ` <html>   <head>     <meta charset=\"utf-8\"/>     <title>Meu título</title>   </head> ') ```  ## Passando parâmetros   ```m4 define(`my_value',`$1_file') my_value(`test') ```  Use $1, $2, ... para passar parâmetros:  ``` test_file ```  ## Condicionais  ```m4 ifelse(`first_text',`second_text',`true_action',`false_action') ```  No exemplo abaixo se `my_filename` for `index.html` então será gerado apenas a palavra `Home`, do contrário será gerado um link apontando para `index.html`.  ```m4 ifelse(my_filename,`index.html',`Home',`<a href=\"/index.html\" title=\"To index page\">Home</a>') ```  ## Delete tudo até a próxima nova linha  ```m4 dnl uma opção para colocar comentários dnl ou para garantir que não tem espaços extras ```  ## Incluir um arquivo  ```m4 include(filename) ```  ## Operações matemáticas  ```m4 define(decr,`eval($1-1)') ```  ## Referências  * [Using the m4 macro processor for fun and profit](https://box.matto.nl/m4.html) * [Exploiting the m4 Macro Language](http://www.cs.stir.ac.uk/~kjt/research/pdf/expl-m4.pdf) ","title":"Preprocessador M4"},{"id":125,"location":"/til/swap.html","tags":["swap","debian","linux"],"text":" ## Configuração atual  ```bash swapon --show ```  A saída do comando acima, se tiver swap configurado, será parecido com:  ```bash NAME      TYPE      SIZE USED PRIO /dev/sda5 partition 2,9G   1G   -2 ```  Neste caso uma partição foi utilizada para swap.  Outro modo de verificar o swap é:  ```bash free -h ```  Na ausência o valor é informado como zero.  ```bash Mem:          996Mi       262Mi        79Mi        40Mi       654Mi       514Mi Swap:            0B          0B          0B ```  ## Verificar se existe espaço disponível para criação  Antes de criar o swap é necessário garantir que existe espaço em disco.  ```bash $ df -ah ```  Saída  ``` Filesystem      Size  Used Avail Use% Mounted on sysfs              0     0     0    - /sys proc               0     0     0    - /proc udev            488M     0  488M   0% /dev devpts             0     0     0    - /dev/pts tmpfs           100M   13M   88M  13% /run /dev/vda1        25G   11G   14G  45% / securityfs         0     0     0    - /sys/kernel/security tmpfs           499M   12K  499M   1% /dev/shm tmpfs           5.0M     0  5.0M   0% /run/lock tmpfs           499M     0  499M   0% /sys/fs/cgroup ```  ## Criação do arquivo de swap  Como a memória do sistema é de 1GB vamos criar um arquivo de swap com 2GB no raiz.  ```bash fallocate -l 2G /swapfile ```  O acesso deve ser somente do root:  ```bash chown root.root /swapfile chmod 600 /swapfile ls -lh /swapfile ```  Saída  ``` -rw------- 1 root root 2.0G Aug 10 09:45 /swapfile ```  Com as permissões corretas podemos continuar marcando o espaço como swap:  ```bash mkswap /swapfile ```  ``` Setting up swapspace version 1, size = 2 GiB (2147479552 bytes) no label, UUID=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx ```  ## Ativando o swap  Depois de marcado podemos disponibilizar o swap para o sistema.  ```bash swapon /swapfile ```  ``` NAME      TYPE SIZE USED PRIO /swapfile file   2G   0B   -1 ```  Vamos verificar como os comando que já vimos anteriormente:  ```bash $ swapon --show NAME      TYPE SIZE USED PRIO /swapfile file   2G   0B   -1  $ free -h               total        used        free      shared  buff/cache   available Mem:          996Mi       263Mi        74Mi        40Mi       658Mi       513Mi Swap:         2.0Gi          0B       2.0Gi ```  ## Tornando o swap permanente  Primeiramente faremos um backup do arquivo fstab  ```bash cp /etc/fstab /etc/fstab.bak ```  Agora vamos acrescentar uma linha no final do fstab  ```bash echo '/swapfile none swap sw 0 0' | tee -a /etc/fstab ```  ## Ajustes finos  ### Swappiness  Este parâmetro, que varia de 0 a 100, ajusta a frequência de acesso ao swap  * próximos a 0: o sistema só acessa o swap se absolutamente necessário (mais rápido) * próximos a 100: prioriza colocar os dados no swap para liberar RAM * desktop: 60 * server: 10  Para verificar a configuração atual use:  ```bash cat /proc/sys/vm/swappiness ```  Para definir o valor 10 use:  ```bash sysctl vm.swappiness=10 ```  Para deixar permanente a configuração:  ```bash cp /etc/sysctl.conf /etc/sysctl.conf.bak echo 'vm.swappiness=10' | tee -a /etc/sysctl.conf ```  ### Cache pressure  Usado para realizar cache de informações de `inode` e `dentry` possibilitando reduzir o custo de acessar esta informações frequentemente.  Para verificar o valor atual use:  ```bash cat /proc/sys/vm/vfs_cache_pressure ```  Saída  ``` 100 ```  Da maneira como está agora o sistema removerá as informações sobre `inode` muito rapidamente. Vamos adotar uma configuração mais conservativa utilizando o valor 50.  ```bash sysctl vm.vfs_cache_pressure=50 ```  Para deixar permanente a configuração  ```bash echo 'vm.vfs_cache_pressure=50' | tee -a /etc/sysctl.conf ```     ## Referências  * [How To Add Swap Space on Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-16-04) ","title":"Gerenciamento de memória swap"},{"id":126,"location":"/til/sed.html","tags":["sed"],"text":" ## Referências  * [10 EXEMPLOS para você usar o Sed como NINJA](https://terminalroot.com.br/2020/10/10-exemplos-para-voce-usar-o-sed-como-ninja.html)  ","title":"Sed"},{"id":127,"location":"/til/linux-cgroup.html","tags":["linux","aws","lambda"],"text":" ## Introdução  * `cgroup` é uma das tecnologias de isolação mais importantes usadas em *containers*.  Listando os cgroups  ```bash cat /proc/1/cgroup  ```  ``` 11:freezer:/ 10:net_cls,net_prio:/ 9:blkio:/ 8:memory:/ 7:devices:/ 6:cpu,cpuacct:/ 5:perf_event:/ 4:pids:/ 3:rdma:/ 2:cpuset:/ 1:name=systemd:/init.scope 0::/init.scope ```  ## Referências  * [Gaining Persistency on Vulnerable Lambdas](https://unit42.paloaltonetworks.com/gaining-persistency-vulnerable-lambdas) * [Manual: cgroups - Linux control groups](http://man7.org/linux/man-pages/man7/cgroups.7.html) * [github: CLI tool for spawning and running containers according to the OCI specification](https://github.com/opencontainers/runc) ","title":"cgroup - Grupos de controle linux"},{"id":128,"location":"/til/vim-rails.html","tags":["vim"],"text":" https://github.com/tpope/vim-rails   * `gf` considers context and knows about partials, fixtures, and much more.  There are two commands,  * `:A` (alternate) and  * `:R` (related) for easy jumping between files, including favorites like model to schema, template to   helper, and controller to functional test.  Commands like  * `:Emodel`, * `:Eview`, * `:Econtroller`   are provided to `:edit` files by type, along with `S`, `V`, and `T` variants for `:split`, `:vsplit`, and   `:tabedit`.  Throw a bang on the end (`:Emodel foo!`) to automatically   create the file with the standard boilerplate if it doesn't exist.   `:help rails-navigation`  * Enhanced syntax highlighting.  From `has_and_belongs_to_many` to   `distance_of_time_in_words`, it's here.  * Interface to rake.  Use `:Rake` to run the current test, spec, or   feature.  Use `:.Rake` to do a focused run of just the method,   example, or scenario on the current line.  `:Rake` can also run   arbitrary migrations, load individual fixtures, and more.   `:help rails-rake`  * Interface to the `rails` command.  Generally, use `:Rails console` to   call `rails console`.  Many commands have wrappers with additional features:   `:Rgenerate controller Blog` generates a blog controller and loads the   generated files into the quickfix list, and `:Rrunner` wraps `rails runner`   and doubles as a direct test runner.  `:help rails-scripts`  * Partial and concern extraction.  In a view, `:Rextract {file}`   replaces the desired range (typically selected in visual line mode)   with `render '{file}'`, which is automatically created with your   content.  In a model or controller, a concern is created, with the   appropriate `include` declaration left behind.   `:help rails-:Rextract`  * Fully customizable. Define \"projections\" at the global, app, or gem   level to define navigation commands and override the alternate file,   default rake task, syntax highlighting, abbreviations, and more.   `:help rails-projections`.  * Integration with other plugins.  If   [dbext.vim](http://www.vim.org/scripts/script.php?script_id=356) is   installed, it will be transparently configured to reflect   `database.yml`.  Users of   [abolish.vim](https://github.com/tpope/vim-abolish) get pluralize and   tableize coercions, and users of   [bundler.vim](https://github.com/tpope/vim-bundler) get a smattering of   features.  `:help rails-integration`  ","title":"Vim com rails"},{"id":129,"location":"/til/varicad-visao-predefinida.html","tags":["varicad"],"text":" 1. Execute o comando `cfg` (Ferramentas/Configurações do Sistema) 2. Abra o item *Definições da Vistas 3D Pré-Definidas* em *3D* 3. Defina os seguinte valores   * Rotação ao redor do eixo visualizado X: 35.264   * Rotação ao redor do eixo visualizado Y: -45   * Rotação ao redor do eixo visualizado Z: 0  ![Comando atm](/til/varicad-visao-isometrica-01.webp)  <div> $$ \\arcsin(\\tan 30°) \\approx 35.264 $$ </div>  ","title":"Varicad - configurando visão pré-definida para isométrica"},{"id":130,"location":"/til/trader-ordens.html","tags":["trader"],"text":" ## Tipos de ordens  ### Ordem de mercado  Para abrir uma posição a preço de mercado  #### Sell (venda)  Venda que ocorre pelo *Bid* (preço de oferta)  #### Buy (compra)  Compra que ocorre pelo *Ask* (preço de demanda)   ## Ordem pendente  Ordem que depende de alguma condição para ocorrer.  #### Buy limit  ![order_type_buy_limit.webp](img/order_type_buy_limit.webp)  Compra por $valor <= Ask$.  O nível atual de preços é superior ao valor estabelecido na ordem.  Expectativa que o preço caia até o valor da ordem e volte a subir.  #### Buy Stop  ![order_type_buy_stop.webp](img/order_type_buy_stop.webp)  Combra por $valor >= Ask$  O nível atual de preços é inferior ao valor estabelecido na ordem.  Expectativa que o preço ultrapasse o valor da ordem e continue subindo.  #### Sell Limit  ![order_type_sell_limit.webp](img/order_type_sell_limit.webp)  Venda por $valor >= Bid$  O nível atual de preços é inferior ao valor estabelecido na ordem.  Expectativa após atingir um o valor da ordem volte a cair.  #### Sell Stop  ![order_type_sell_stop.webp](img/order_type_sell_stop.webp)  Venda por $valor <= Bid$  O nível atual de preços é superior ao valor estabelecido na ordem.  Expectativa de que tendo caído até o valor da ordem continue a cair.   #### Buy Stop Limit  ![order_type_buy_stop_limit.webp](img/order_type_buy_stop_limit.webp)  $BuyStop + BuyLimit$  Uma ordem stop para estabelecer uma ordem limit de compra (\"Buy Limit\").  Uma vez que o preço futuro \"Ask\" atinja o nível stop indicado na ordem (no campo \"Preço\"), será colocada uma ordem \"Buy Limit\" no nível especificado no campo \"Preço Stop Limit\".  O nível stop é colocado acima do atual preço Ask e o preço Stop Limit é colocado abaixo do nível stop.  #### Sell Stop Limit  ![order_type_sell_stop_limit.webp](img/order_type_sell_stop_limit.webp)  Uma ordem stop para estabelecer uma ordem limit de venda (\"Sell Limit\").  Uma vez que o preço futuro \"Bid\" atinja o nível stop indicado nessa ordem (no campo \"Preço\"), será colocada uma ordem \"Sell Limit\" no nível especificado no campo \"Preço Stop Limit\".  O nível stop é colocado abaixo do atual preço Bid e o preço Stop Limit é colocado acima do nível stop.  ### Take Profit  Expectativa de obtenção de lucro ao ser atingido o preço.  Leva ao fechamento total da posição.  Está sempre ligada à posição aberta ou à ordem pendente.  A ordem pode ser colocada juntamente com uma ordem de mercado ou pendente.  Para posições longas é usado o preço Bid (a ordem sempre se encontra acima do atual preço Bid).  Para posições curtas é utilizado o preço Ask (a ordem sempre se encontra abaixo do atual preço Ask).  {{% note %}} Se a ordem não puder se executada quando tinha condições (p.e. rejeitada pela bolsa) ela não é removida. E começará a funciona novamente após um novo tick que garanta as condições da ordem. {{% /note %}}   ### Stop Loss  Expectativa de minimizar as perdas no caso do preço se movimentar na direção de perda.  Se o preço atingir este nível a posição se fecha por completo automaticamente.  Está sempre ligada à posição aberta ou ordem pendente.  Para posições longas é usado o preço Bid (a ordem sempre se encontra abaixo do atual preço Bid).  Para posições curtas é usado o preço Ask (a ordem sempre se encontra acima do preço atual Ask).  {{% note %}} Se a ordem não puder se executada quando tinha condições (p.e. rejeitada pela bolsa) ela não é removida. E começará a funciona novamente após um novo tick que garanta as condições da ordem. {{% /note %}}  ## Termos de herança de Stop Loss e Take Profit (compensação):   * Quando aumenta o volume da posição, e também quando reverte, os níveis Take Profit e Stop Loss são colocados segundo a última ordem (de mercado ou da pendente ativada). Em outras palavras, os níveis stop são substituídos pelos anteriores em cada última ordem segundo uma posição. Além disso, se na ordem for exibido um valor de zero, Stop Loss e Take Profit são excluídos. * Se houver um fechamento parcial da posição, Stop Loss e Take Profit não são alterados para uma nova ordem. * Quando houver fechamento total de posições, os níveis Stop Loss e Take Profit serão excluídos, pois estão ligados à posição aberta e não podem existir sem ela. * Ao executar uma negociação segundo um símbolo pelo qual já existe uma posição, na janela de colocação de ordens são automaticamente colocados os valores atuais de Stop Loss e Take Profit da posição aberta. Isso se destina a que você não apague acidentalmente a atual ordem stop. * Ao executar uma negociação em um clique (através da Barra no gráfico ou da Observação de mercado) segundo um símbolo, pelo qual já há posição, os valores atuais de Stop Loss e Take Profit da posição aberta não se alteram. * No mercado de balcão (Forex, Futures), ao transferir uma posição para o dia de negociação seguinte (swap), e mesmo o caminho de reabertura, os níveis Stop Loss e Take Profit são salvos. * No mercado de bolsa, ao transferir uma posição para o dia de negociação seguinte (swap), ou transferir para outra conta ou fornecer uma, os níveis Stop Loss e Take Profit são apagados. * Termos da herança de Stop Loss e Take Profit (cobertura): * Se houver um fechamento parcial da posição, Stop Loss e Take Profit não são alterados para uma nova ordem. * Quando houver fechamento total de posições, os níveis Stop Loss e Take Profit serão excluídos, pois estão ligados à posição aberta e não podem existir sem ela. * Ao executar uma operação de negociação em um clique (através da barra no grafico ou no Livro de ofertas), não são colocados Stop Loss e Take Profit. * Esses termos são váildos tanto para a negociação manual como para a colocação de ordens por experts (programas MQL5).  {{% note %}} * Para automatizar a deslocação da ordem Stop Loss seguindo o preço, você pode utilizar o Trailing Stop. * A ativação de ordens Take Profit e Stop Loss leva ao total fechamento da posição. * Para instrumentos com modo de cálculos Exchange Stocks, Exchange Futures e Futures Forts, todos os tipos de ordens Stop Loss e Take Profit são executados de acordo com as regras no mercado de bolsa, onde é realizada a operação. Comumente é usado o preço Last (preço da última transação). Em outras palavras, uma ordem stop funciona uma vez que o preço Last roçar o preço indicado. No entanto, você deve levar em conta que a compra ou venda realizada como resultado da execução de ordens stop, ocorre, em qualquer caso, segundo os preços Bid e Ask. {{% /note %}}  ## Trailing Stop  \"Stop Loss\" é projetado para minimizar as perdas, se o preço de um instrumento financeiro começar a se mover em uma direção desfavorável. Quando a posição aberta se torna rentável, o \"Stop Loss\" pode ser movido manualmente para um nível favorável. Para automatizar esse processo é usado o Trailing Stop. Esse instrumento é particularmente útil quando existe um forte movimento do preço em uma direção, e nos casos em que não é possível acompanhar de perto a evolução do estado do mercado.  O Trailing Stop está sempre associado a uma posição aberta ou a uma ordem pendente. Ele é executado na plataforma de negociação, e não no servidor, como \"Stop Loss\". Para o instalar, clique em \"Trailing stop\" no menu de contexto da posição ou ordem na guia \"Negociação\":  ## Referências * [Princípios gerais](https://www.metatrader5.com/pt/terminal/help/trading/general_concept) ","title":"Trader - ordens"},{"id":131,"location":"/til/git-gitmoji.html","tags":["git","emoji","gitmoji"],"text":" ## Mensagem padrão de commit  Para definir um modelo para as mensagens de commit use:  ```bash git config commit.template /absolute/path/to/file git config commit.template relative-path-from-repository-root git config commit.template ~/commit.template.txt ```  ## Emojis selecionados  * ✨ `sparkles` Novas funcionalidades * 💄 `lipstick` Atualização de UI e arquivos de estilo * 🎉 `tada` Commit inicial * 🐛 `bug` Correção de bug * ⚡️ `zap` Melhoria de performance * ✅ `white_check_mark` Testes adicionados * 🚑 `ambulance` Hotfix crítico * 🚀 `rocket` Deploy * 🚧 `construction` trabalho em progresso * 🏁 `checkered_flag` Feature implementada * 🙈 `see_no_evil` Atualizando .gitignore * 📝 `memo` Documentação * 🔧 `wrench` Mudança em arquivos de configuração * ✏️  `pencil2` Corrigindo ortografia * ♻️  `recycle` Refactoring code * 🚚 `truck` Movendo ou renomeando arquivos * 👽 `alien` Atualizando código devido a mudança de API externa  ## Outro emojis  * 🎨 `art` Improving structure / format of the code. * 🔥 `fire` Removing code or files. * 🔒 `lock` Fixing security issues. * 🍎 `apple` Fixing something on macOS. * 🐧 `penguin` Fixing something on Linux. * 🍏 `green_apple` Fixing something on iOS. * 🔖 `bookmark` Releasing / Version tags. * 🚨 `rotating_light` Removing linter warnings. * 💚 `green_heart` Fixing CI Build. * ⬇️  `arrow_down` Downgrading dependencies. * ⬆️  `arrow_up` Upgrading dependencies. * 📌 `pushpin` Pinning dependencies to specific versions. * 👷 `construction_worker` Adding CI build system. * 📈 `chart_with_upwards_trend` Adding analytics or tracking code. * 🐳 `whale` Work about Docker. * ➕ `heavy_plus_sign` Adding a dependency. * ➖ `heavy_minus_sign` Removing a dependency. * 🌐 `globe_with_meridians` Internationalization and localization. * 💩 `hankey` Writing bad code that needs to be improved. * ⏪ `rewind` Reverting changes. * 🔀 `twisted_rightwards_arrows` Merging branches. * 📦 `package` Updating compiled files or packages. * 📄 `page_facing_up` Adding or updating license. * 💥 `boom` Introducing breaking changes. * 🍱 `bento` Adding or updating assets. * 👌 `ok_hand` Updating code due to code review changes. * ♿️ `wheelchair` Improving accessibility. * 💡 `bulb` Documenting source code. * 🍻 `beers` Writing code drunkenly. * 💬 `speech_balloon` Updating text and literals. * 🔇 `mute` Removing logs. * 👥 `busts_in_silhouette` Adding contributor(s). * 🚸 `children_crossing` Improving user experience / usability. * 📱 `iphone` Working on responsive design. * 🥚 `egg` Adding an easter egg. * 🔍 `mag` Improving SEO  ## Não suportado pelo gogs  * ⚗  `alembic` Experimenting new things * 🏗 `building_construction` Mudanças arquiteturais * 📸 `camera_flash` Adding or updating snapshots * 🗃 `card_file_box` Performing database related changes. * 🤡 `clown_face` Mocking things. * 🔊 `loud_sound` Adding logs. * 🤖 `robot` Fixing something on Android.  ## Outros  * 🎨 improving structure / format of the code. * ⚡️ improving performance. * 🔥 removing code or files. * 🐛 fixing a bug. * 🚑 critical hotfix. * ✨ introducing new features. * 📝 writing docs. * 🚀 deploying stuff. * 💄 updating the ui and style files. * 🎉 initial commit. * ✅ adding tests. * 🔒 fixing security issues. * 🍎 fixing something on macos. * 🐧 fixing something on linux. * 🏁 fixing something on windows. * 🤖 fixing something on android. * 🍏 fixing something on ios. * 🔖 releasing / version tags. * 🚨 removing linter warnings. * 🚧 work in progress. * 💚 fixing ci build. * ⬇️ downgrading dependencies. * ⬆️ upgrading dependencies. * 📌 pinning dependencies to specific versions. * 👷 adding ci build system. * 📈 adding analytics or tracking code. * ♻️ refactoring code. * 🐳 work about docker. * ➕ adding a dependency. * ➖ removing a dependency. * 🔧 changing configuration files. * 🌐 internationalization and localization. * ✏️ fixing typos. * 💩 writing bad code that needs to be improved. * ⏪ reverting changes. * 🔀 merging branches. * 📦 updating compiled files or packages. * 👽 updating code due to external api changes. * 🚚 moving or renaming files. * 📄 adding or updating license. * 💥 introducing breaking changes. * 🍱 adding or updating assets. * 👌 updating code due to code review changes. * ♿️ improving accessibility. * 💡 documenting source code. * 🍻 writing code drunkenly. * 💬 updating text and literals. * 🗃 performing database related changes. * 🔊 adding logs. * 🔇 removing logs. * 👥 adding contributor(s). * 🚸 improving user experience / usability. * 🏗 making architectural changes. * 📱 working on responsive design. * 🤡 mocking things. * 🥚 adding an easter egg. * 🙈 adding or updating a .gitignore file * 📸 adding or updating snapshots * ⚗ experimenting new things * 🔍 improving seo * ☸️ work about kubernetes * 🏷️ adding or updating types (flow, typescript)  ## CLI  ```bash npm i -g gitmoji-cli ```  ## Referências  * https://gitmoji.carloscuesta.me/ * https://gist.github.com/parmentf/035de27d6ed1dce0b36a * https://stackoverflow.com/questions/21998728/how-to-specify-a-git-commit-message-template-for-a-repository-in-a-file-at-a-rel * https://github.com/stormslowly/git-emoji-commit-message-template/blob/master/emoji.git.commit.message.txt * https://hackernoon.com/using-github-as-a-team-the-holy-grail-of-commit-messages-f5b10c925d62   ","title":"Como inserir emojis na mensagem de commit"},{"id":132,"location":"/til/git-log.html","tags":["git"],"text":" ```bash $ git log --pretty=format:\"%h - %an, %ar : %s\" 7e3b253 - Geraldo Ribeiro, 4 days ago : git diff 8ec026a - Geraldo Ribeiro, 4 days ago : git b341291 - Geraldo Luis Da Silva Ribeiro, 3 weeks ago : Mode de exibição com 1 ou 3 imagens 3b9ca24 - Geraldo Luis Da Silva Ribeiro, 3 weeks ago : Diff de imagem a8a92a7 - Geraldo Ribeiro, 5 weeks ago : C++ constexpr, jwt, packt 00d5dce - Geraldo Ribeiro, 7 weeks ago : keycloak; covid 490f763 - Geraldo Luis Da Silva Ribeiro, 7 weeks ago : Dart start b37beb4 - Geraldo Ribeiro, 7 weeks ago : keycloak ce29e4f - Geraldo Ribeiro, 8 weeks ago : keycloak 1c14961 - Geraldo Ribeiro, 8 weeks ago : Keycloak 8b8a2b5 - Geraldo Ribeiro, 10 weeks ago : Design mode e atualização covid f18e6d2 - Geraldo Ribeiro, 3 months ago : Descrição d9bb267 - Geraldo Ribeiro, 3 months ago : Refactoração ```  ```bash $ git log --all --graph --decorate --oneline --abbrev-commit * 7e3b253 (HEAD -> master, origin/master, origin/HEAD) git diff * 8ec026a git * b341291 Mode de exibição com 1 ou 3 imagens * 3b9ca24 Diff de imagem * a8a92a7 C++ constexpr, jwt, packt * 00d5dce keycloak; covid * 490f763 Dart start * b37beb4 keycloak * ce29e4f keycloak * 1c14961 Keycloak * 8b8a2b5 Design mode e atualização covid * f18e6d2 Descrição * d9bb267 Refactoração ```  `--all` lista commit de todos os branches  ```bash $ git log --oneline --all 7e3b253 (HEAD -> master, origin/master, origin/HEAD) git diff 8ec026a git b341291 Mode de exibição com 1 ou 3 imagens 3b9ca24 Diff de imagem a8a92a7 C++ constexpr, jwt, packt 00d5dce keycloak; covid 490f763 Dart start b37beb4 keycloak ce29e4f keycloak 1c14961 Keycloak 8b8a2b5 Design mode e atualização covid f18e6d2 Descrição d9bb267 Refactoração  ```  ## Referências  * []()  ","title":"git log"},{"id":133,"location":"/til/cpp-cracking-the-c++-interview.html","tags":["cpp"],"text":" Estudar  ## Referências  * [Cracking the C++ Interview — Part 1](https://medium.com/c-programming-language/cracking-the-c-interview-part-1-1b01879779e9) * [Cracking the C++ Interview — Part 2](https://medium.com/c-programming-language/cracking-the-c-interview-part-2-1e35d0e3fa83) ","title":"Cracking the C++"},{"id":134,"location":"/til/git-remover-arquivos-e-preservar-copia-local.html","tags":["git"],"text":" As vezes é necessário remover arquivos apenas do controle de versão preservando cópia local do arquivo.  1. Acrescente o arquivo ao `.gitignore` 2. Remova do **git** com `git rm --cached nome/do/arquivo`  A flag `--cached` vai manter a cópia local.  ## Referências  * [How To Remove Committed Files From Git Version Control](https://betterprogramming.pub/how-to-remove-committed-files-from-git-version-control-b6533b8f9044) ","title":"Como remover arquivos do controle de versão preservando cópia local"},{"id":135,"location":"/til/trader-simbolos.html","tags":["trader"],"text":" ## Variante 1  O preço tomou uma direção e voltou ao nível do preço de abertura. Assim, a barra terá apenas o valor High (o preço mais alto) ou apenas o valor Low (o preço mais baixo).  ![tick_generation_1_variant_down.webp](img/tick_generation_1_variant_down.webp)  ![tick_generation_1_variant_up.webp](img/tick_generation_1_variant_up.webp)  ## Variante 2  O preço tomou uma direção e voltou, atingindo o nível de abertura. Nesse caso, a barra terá apenas o valor High (o preço mais alto) ou apenas o valor Low (o preço mais baixo), embora os preços de abertura e de fechamento não sejam iguais.  ![tick_generation_2_variant_down.webp](img/tick_generation_2_variant_down.webp)  ![tick_generation_2_variant_up.webp](img/tick_generation_2_variant_up.webp)  ## Variante 3  O preço tomou uma direção, mas não atingiu o preço de abertura ao regressar.  ![tick_generation_3_variant_down.webp](img/tick_generation_3_variant_down.webp)  ![tick_generation_3_variant_up.webp](img/tick_generation_3_variant_up.webp)  ## Variante 4  O preço deslocou-se apenas alguns pontos para um lado. Nesse caso, a barra não terá os valores High e Low.  ![tick_generation_4_variant_down.webp](img/tick_generation_4_variant_down.webp)  ![tick_generation_4_variant_up.webp](img/tick_generation_4_variant_up.webp)  ## x  ![tick_generation_candle.webp](img/tick_generation_candle.webp)  ## Vela altista ideal  Descrever pontos de apoio  ![tick_generation_ideal_bull.webp](img/tick_generation_ideal_bull.webp)  ## Vela baixista ideal  Descrever pontos de apoio  ![tick_generation_ideal_bear.webp](img/tick_generation_ideal_bear.webp)  ## Velas doji  (Close = Open)  ![tick_generation_doji.webp](img/tick_generation_doji.webp)  ## Referências  * [Ticks reais e gerados](https://www.metatrader5.com/pt/terminal/help/algotrading/tick_generation)  ","title":"Símbolos para traders"},{"id":136,"location":"/til/vim-argdo.html","tags":["vim","args","argdo"],"text":" O editor vim nos ajuda muito quando precisamos editar uma grande quantidade de arquivos para realizar uma refatoração ou realizar modificações em lote.  ## Carregamento de arquivos por condição  Carregar todos os arquivos `md`.  ``` :args `find . -name '*.md'` ```  Carregar todos os arquivos que são rastreados pelo controle de versão que contenham a palavra `Apple`.  ``` :args `git grep -l Apple` ```  o `-l` do `git-grep` faz listar somente os arquivos sem o texto que faz match.  ## Operar nos arquivos carregados  Vai executar o `comando` em cada arquivo aberto!  ``` :argdo %s/Apple/Orange/gc ```  ","title":"Vim args, argdo"},{"id":137,"location":"/til/vim-with-python.html","tags":["vim"],"text":" ```bash apt install vim-nox ou apt install vim-gtk ```  ","title":"Vim com python habilitado"},{"id":138,"location":"/til/como-instalar-o-flameshot-no-debian-stable.html","tags":["backports","flameshot","screenshot","annotation","debian","linux"],"text":" O `flameshot` é um excelente utilitário para tirar screenshots e já realizar as anotações no mesmo momento.  {{< img src=\"https://github.com/lupoDharkael/flameshot/raw/master/img/preview/animatedUsage.gif\" alt=\"Demonstração de uso do flameshot\" >}}  {{< notice tip >}} **Atualização:** Agora que o **Debian 10** foi lançado não é mais necessário recorrer ao **backports**, então basta usar `apt install flameshot`. {{< /notice >}}  O `flameshot` já está disponível no `Debian 10`, mas enquanto aguardamos a versão nova do Debian ser lançada é preciso utilizar a versão do `stretch-backports`.  Primeiramente vamos acrescentar o repositório backports:  ```bash echo \"deb http://deb.debian.org/debian stretch-backports main\" \\      >> /etc/apt/sources.list.d/backports.list ```  Atualizar a lista de pacotes disponíveis:  ```bash apt update ```  Instalar usando a opção `-t stretch-backports` para indicar que deve ser utilizado o repositório backports:  ```bash apt install -t stretch-backports flameshot ```  ## Referências  * [Github do projeto flameshot](https://github.com/lupoDharkael/flameshot) * [Tool to add shapes, annotations and text using templates to images](https://askubuntu.com/questions/3578/tool-to-add-shapes-annotations-and-text-using-templates-to-images/3584) ","title":"Como instalar o flameshot no Debian stretch"},{"id":139,"location":"/til/diferencas-entre-mtime-ctime-atime.html","tags":["find","mtime","ctime","atime"],"text":" Adaptado de um post do [Quora](https://www.quora.com/What-is-the-difference-between-mtime-atime-and-ctime).  O comando `find` pode parecer um pouco complicado se alguns conceitos não forem entendidos antes de sua utilização. Quando procuramos por arquivos com **critérios de tempo** é fundamental saber a diferença entre `mtime`, `atime` e `ctime`.  De maneira muito breve:  * `mtime` é o momento de modificação do conteúdo * `atime` é o momento que o arquivo foi acessado (lido) * `ctime` é o momento que o arquivo teve algum atributo modificado  ## `mtime`  `mtime` (*modification time*) indica o momento que o conteúdo do arquivo mudou. Mas atenção, **somente alteração do conteúdo** vai mudar o `mtime`. Mudanças nos atributos ou nos metadados não alteram o `mtime`, somente o `ctime`.  ## `atime`  atime atime (access time) is the timestamp that indicates the time that a file has been accessed. The file may have been opened by you, or may have been accessed by some other program or a remote machine. Anytime a file has been accessed, its access time changes.  ctime ctime (change time) is the timestamp of a file that indicates the time that it was changed. Now, the modification can be in terms of its content or in terms of its attributes. Whenever anything about a file changes (except its access time), its ctime changes.  Let me demonstrate it by the following example. On a Unix-like system, lets create a file and check its atime, mtime and ctime. We can see, all the timestamps are same.  Now, let us print its contents. Since the text file was blank, it didn't print anything. But looking at its stats, we see the access time has changed, while the others remain unchanged.  Now, let us write something into the file. Notice how all of its timestamps have changed! Since the file had to be accessed to modify it, the atime has changed. And since the contents of the file changed, its mtime and ctime both changed.  Now, instead of contents, what happens if we change its attributes? Say, file permissions? We added the 'execute' permission to the file and see how its atime and ctime changes! As is obvious, to make any changes to the file, you have to access it. Hence the changes to atime. Also, since only the attributes were changed and not the contents, the ctime changed while mtime remained as it is.  In general, this is how the timestamps behave:                                      mtime <= ctime <= atime    ","title":"Diferenças entre mtime ctime atime"},{"id":140,"location":"/til/eclipse-java-window-listener.html","tags":["java","dispose-window"],"text":" ## Referências  * [Dispose](https://www.guj.com.br/t/dispose/103690)   ```java import java.awt.event.WindowEvent; import java.awt.event.WindowListener;  import javax.swing.JFrame; import javax.swing.JOptionPane;  public class Teste extends JFrame implements WindowListener{ \tpublic Teste(){ \t\tsuper(\"algo\"); \t\tsetSize(200,200); \t\tsetVisible(true); \t\tsetLocationRelativeTo(null); \t\tsetDefaultCloseOperation(EXIT_ON_CLOSE); \t\taddWindowListener(this); \t}  \tpublic void windowClosing(WindowEvent arg0) { \t\tJOptionPane.showMessageDialog(null, \t\t\t\t\"A janela está fechando!\", \t\t\t\t\"Dúvida\", \t\t\t\tJOptionPane.ERROR_MESSAGE); \t} \t \tpublic void windowOpened(WindowEvent arg0){ \t\tJOptionPane.showMessageDialog(null, \t\t\t\t\"A janela abriu!\", \t\t\t\t\"Dúvida\", \t\t\t\tJOptionPane.ERROR_MESSAGE); \t}  \tpublic void windowClosed(WindowEvent arg0) {}  \tpublic void windowIconified(WindowEvent arg0) {}  \tpublic void windowDeiconified(WindowEvent arg0) {}  \tpublic void windowActivated(WindowEvent arg0) {}  \tpublic void windowDeactivated(WindowEvent arg0) {} \t \tpublic static void main(String[] args) { \t\tnew Teste(); \t} } ```  Entendeu? Lembrando que você pode criar outra classe que implemente WindowListener e nela você definir os comandos necessários. Exemplo:  ```java import java.awt.event.WindowEvent; import java.awt.event.WindowListener; import javax.swing.JFrame;  public class Tal implements WindowListener {  \tJFrame []s; \tpublic Tal(JFrame [] s){ \t\tthis.s = s; \t} \t \tpublic void windowOpened(WindowEvent arg0) {}  \tpublic void windowClosing(WindowEvent arg0) { \t\tfor(int i=0;i<s.length;i++) \t\t\ts[i].dispose(); \t}  \tpublic void windowClosed(WindowEvent arg0) {}  \tpublic void windowIconified(WindowEvent arg0) {}  \tpublic void windowDeiconified(WindowEvent arg0) {}  \tpublic void windowActivated(WindowEvent arg0) {}  \tpublic void windowDeactivated(WindowEvent arg0) {}  } ```  Aí você faz no construtor da sua janela:  addWindowListener(new Tal(arrayDeJframes)); sendo que arrayDeJFrames são as janelas que você deseja que fechem após fechar essa principal.  Espero ter ajudado. Abraço   ","title":"Dispose window"},{"id":141,"location":"/til/grafana-reset-senha-do-admin.html","tags":["grafana","docker"],"text":" Iniciar os containers  ```bash cd /opt/docker/docker-compose-influxdb-grafana docker-compose up -d ```  Localizar o id do container do '/run.sh'  ```bash docker ps -a CONTAINER ID IMAGE                  COMMAND                  CREATED       ... 265059f8820a grafana/grafana:latest \"/run.sh\"                6 seconds ago ... 637c3d25845f chronograf:latest      \"/entrypoint.sh chro…\"   6 seconds ago ... 21b3a8d77cae influxdb:latest        \"/entrypoint.sh infl…\"   7 seconds ago ... ```  Abrir um shell no container do `run.sh` (`265059f8820a`)  ```bash docker exec -ti 265059f8820a bash ```  Trocar a senha usando o `grafana-cli`  ```bash     bash-5.0$ grafana-cli admin reset-admin-password aqui-vai-a-nova-senha INFO[01-03|16:34:42] Connecting to DB      logger=sqlstore dbtype=sqlite3 INFO[01-03|16:34:42] Starting DB migration logger=migrator  Admin password changed successfully ✔ ```  ## Referências  * [Reset Grafana password when running in Docker on Raspberry Pi](https://community.grafana.com/t/reset-grafana-password-when-running-in-docker-on-raspberry-pi/7070)  ","title":"Grafana --- Reset da senha do admin"},{"id":142,"location":"/til/java-reflection.html","tags":["java"],"text":" `SomeClass.class` obtém o tipo `Class<SomeClass>` que é um objeto que representa o nome da classe em tempo de execução e é o mesmo objeto retornado pelo `getClass`.  ```java NombreClase obj = new NombreClase(); System.out.println(NombreClase.class.getName()); System.out.println(obj.getClass().getName()) ```  ## Referências  * [What does .class mean after a class name](https://stackoverflow.com/questions/15101794/what-does-class-mean-after-a-class-name)  ","title":"Java Reflection"},{"id":143,"location":"/til/cpp-thread.html","tags":["C++","cpp","thread"],"text":" ## Thread com função sem argumentos  ```c++ void foo() {   cout << \"Corpo da função: \" << this_thread::get_id() << endl; }  void run () {   thread t1( foo );   // Algum processamento...   t1.join(); } ```  ## Thread com função passando parâmetros por valor  ```c++ void fooByRef( int & a ) {   while( true ) {     cout << \"O valor é \" << a << endl;     this_thread::sleep_for( chrono::milliseconds( 1000 ) );   } }  void run () {   int p = 9;   thread t2( fooByRef, std::ref( p ) ); // usar o wrapper ref para não passar por valor   // Algum processamento...   this_thread::sleep_for( chrono::milliseconds( 5000 ) );   p = 30;   t1.join(); } ```  ## Thread com função passando parâmetros por referência  ```c++ void foo( int a, int b ) { }  void run () {   int p = 9;   int q = 8;   thread t1( foo, p, q );   // Algum processamento...   t1.join(); } ```  ## Thread com classe callable  ```c++ class CallableClass {   public:     void operator()() {       cout << \"Corpo da função: \" << this_thread::get_id() << endl;     } };  void run() {   CallableClass obj;   thread t2( obj );   // Algum processamento...   t2.join(); } ```  ## Thread com lambda  ```c++ // Sintaxe // [capture-list]( params ) /*mutable*/ /*constexpr*/ /*exception attribute*/ -> ret { body } // [capture-list]( params ) -> ret { body } // [capture-list]( params ) { body } // [capture-list]{ body }  void run() {   thread t3( []{     cout << \"Corpo da função: \" << this_thread::get_id() << endl;   } );   // Algum processamento...   t3.join(); } ```  ## Join, detach e terminate  * Uma thread representa um objeto de execução em nível de hardware e está num estado chamado *joinable* * A opções no estado *joinable* são:   * `join` - introduz um ponto de sincronismo e bloqueia a execução   * `detach` - faz a execução continuar em modo independente * Após esta escolha a thread se torna *non joinable* * Se esquecer de realizar o join ou detach a função `std::terminate` será chamada pelo destrutor * Um programa com `std::terminate` é considerado não seguro.  ## Tratamento de exceção  Para evitar problemas caso uma exceção for lançada antes do `join` use **RAII - Resource acquisition is initialization**.  RAII:  * *Construtor adquire os recursos* * *Destrutor libera os recursos*  Exemplo de código com problema:  ```c++ void run() {   thread t4( foo );   throw runtime_error( \"Algum erro antes do join/detach\" );   t4.join(); // esta linha nunca vai ser executada } ```  A classe `ThreadGuard` fornece um auxiliar para garantir que o `join` será sempre executado quando o objeto sair do contexto.   ```c++ {hl_lines=[6,9]} class ThreadGuard {   thread & mThread;    public:     // garantir que não haverá conversões implícitas     explicit ThreadGuard( thread & t ) : mThread( t ) {  }      // realiza o join pelo destrutor     ~ThreadGuard() { if( mThread.joinable() ) { mThread.join(); } }      // não permite o uso dos contrutores de cópia e atribuição     ThreadGuard( const ThreadGuard & ) = delete;     ThreadGuard & operator= ( const ThreadGuard & ) = delete; };  void run() {   thread t4( foo );   ThreadGuard tg( t4 ); // quando sair do escopo o join será chamado   throw runtime_error( \"Este erro não afeta a thread acima\" ); } ```  ## Transferindo a posse das threads  ```c++ void foo() { } void bar() { }  void run() {   thread t1( foo );   // thread t2 = t1; // Se fizer isso vai gerar erro de compilação    // usar move para transferir a posse da thread   thread t2 = std::move( t1 ); // t1 não é mais dono da thread   t1 = thread( bar ); // t1 tem nova thread    t1.join();   t2.join(); } ```  ## thread::get_id()  * retorna um id único para cada thread ativa em execução * retorna 0 para todas as threads não ativas  ```c++ void run() {   thread t1( foo );   thread t2( foo );   thread t3;    cout << t1.get_id() << endl; // 1234   cout << t2.get_id() << endl; // 5678   cout << t3.get_id() << endl; // 0    t1.join();   t2.join();    cout << t1.get_id() << endl; // 0   cout << t2.get_id() << endl; // 0 } ```  ## sleep_for  ## `std::this_thread::yield()`  * retorna a fatia de tempo * reinsere a thread na fila de execução  ## `std::thread::hardware_concurrency()`  * retorna o número de thread concorrentes suportado pela implementação do sistema * considere este valor apenas como uma dica * é usualmente o número de cores lógicos    ## Referências  * [Modern C++ Concurrency in Depth](https://www.udemy.com/course/modern-cpp-concurrency-in-depth/)  ","title":"Thread em C++"},{"id":144,"location":"/til/yad-yet-another-dialog.html","tags":["console"],"text":"  ```bash action=$(yad \\     --width 300 --entry --title \"System Logout\" \\     --image=gnome-shutdown                      \\     --button=\"_Switch User:2\"                   \\     --button=\"gtk-ok:0\"                         \\     --button=\"gtk-close:1\"                      \\     --text \"Choose action:\"                     \\     --entry-text                                \\     \"Power Off\" \"Reboot\" \"Suspend\" \"Logout\")  # Captura o status do último comando ret=$?  [[ $ret -eq 1 ]] && exit 0  if [[ $ret -eq 2 ]]; then   gdmflexiserver --startnew &   exit 0 fi  case $action in   Power*)   cmd=\"sudo /sbin/poweroff\" ;;   Reboot*)  cmd=\"sudo /sbin/reboot\" ;;   Suspend*) cmd=\"sudo /bin/sh -c 'echo disk > /sys/power/state'\" ;;   Logout*)     case $(wmctrl -m | grep Name) in       *Openbox)  cmd=\"openbox --exit\" ;;       *FVWM)     cmd=\"FvwmCommand Quit\" ;;       *Metacity) cmd=\"gnome-save-session --kill\" ;;       *) exit 1 ;;     esac ;;   *) exit 1 ;; esac  eval exec $cmd ```  ![img](/til/yad-01.webp)   ```bash yad --form                                              \\     --image logo-dicas-l.webp                            \\     --image-on-top                                      \\     --title \"Dicas-L/Livra-TE ensino profissional\"      \\     --text \"Demo do YAD para Livra-TE/Dicas-L\"          \\     --field Nome 'Juliana'                              \\     --field Nascimento:DT 01/01/2000                    \\     --field \"Há quantos anos usa Linux:NUM\" '1!0..25!1' \\     --field \"Sites preferidos:CB\"                       \\         'BR-Linux!^Dicas-l!Viva o Linux!Outros'         \\     --field \"Vou passar a usar o yad:CHK\" TRUE          \\     --field \"Vou continuar usando zenity:CHK\" ```  ![img](/til/yad-02.webp)  * `DT` abre um calendário * `NUM` define uma spinbox * `CB` define um combobox   * `^` valor default   * `!` separador   Lançador de aplicações  ```bash yad --icons                            \\     --read-dir=/usr/share/applications \\     --width 670 --height 400           \\     --no-buttons ```  Clique em algum ícone para lançar a aplicação  ![img](/til/yad-03.webp)  ```bash yad exval=$? case $exval in    1) echo \"You pressed Cancel\";;    0) echo \"You pressed OK\";;    252) echo \"You pressed ESCAPE key or closed the window.\";; esac ```  ```bash # Collect the YAD options cmd=$(     yad --center --borders=20     --title=\"YAD Custom Dialog Buttons\"     --button=\"Browser\":\"firefox\"     --button=\"Announce\":\"bash -c announce\"     --button=\"Exit\" )  export -f announce \"${cmd[@]}\" unset announce ```  ## Referências  Tem mais exemplos no yaddemo Importar dos dois primeiros links  * [The buttons of YAD](https://www.thelinuxrain.com/articles/the-buttons-of-yad) * [YAD Button Processing](https://cjungmann.github.io/yaddemo/docs/yadbuttons.html) * [yad - Examples.wiki](https://code.google.com/archive/p/yad/wikis/Examples.wiki) * [YAD - Yet Another Dialog](https://www.dicas-l.com.br/arquivo/yad_yet_another_dialog.php)  ","title":"YAD - Yet Another Dialog"},{"id":145,"location":"/til/clangd.html","tags":["clangd"],"text":" ```bash echo -e 'deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-8 main\\ndeb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-8 main\\n' \\   > /etc/apt/sources.list.d/llvm-toolchain.list  apt install clang-8 clang-tools-8 clang-format-8 apt install libc++-8-dev libclang-8-dev libc++abi-8-dev update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 100 update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-8 100 update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-8 100 update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-8 100 ```  ## Referências  * [Install Clang-8 on Debian Stretch](https://gist.github.com/binshengliu/3d3fba46471d1fa42fa5a2070abf52e0)  ","title":"Clangd + vim"},{"id":146,"location":"/til/vim-run-tests.html","tags":["vim"],"text":" Test driven development thrives on a tight feedback loop but switching from the editor to the shell to manually run specs is inefficient.  Tools such as `autotest` and `guard` run specs whenever a file gets saved. Although an improvement over a manual workflow, those approaches often run the suite when not needed and run too many or too few specs.  Enter [vim-rspec], a lightweight Vim plugin that runs specs directly from within Vim with the press of a key.  [vim-rspec]: https://github.com/thoughtbot/vim-rspec  It exposes methods such as `RunNearestSpec()`, `RunCurrentSpecFile()`, and `RunLastSpec()`, which can be bound to a key mapping of your choice. In [thoughtbot/dotfiles][dotfiles], we bind those methods to `<Leader>s`, `<Leader>t`, and `<Leader>l`.  [dotfiles]: https://github.com/thoughtbot/dotfiles/blob/master/vimrc  Cursor over any line within an RSpec spec like this:  ```ruby describe RecipientInterceptor do   it 'overrides to/cc/bcc fields' do     Mail.register_interceptor RecipientInterceptor.new(recipient_string)      response = deliver_mail      expect(response.to).to eq [recipient_string]     expect(response.cc).to eq []     expect(response.bcc).to eq []   end end ```  Type `<Leader>s`:  ``` rspec spec/recipient_interceptor_spec.rb:4 .  Finished in 0.03059 seconds 1 example, 0 failures ```  The screen is overtaken by a shell that runs only the focused spec. Developers using tmux with vim-rspec and tslime sometimes send the output to a nearby shell so the code and spec output display on the screen at the same time.  Feeling good that this new spec passes, run the whole file's specs with `<Leader>t` to make sure the class's entire functionality is still intact:  ``` rspec spec/recipient_interceptor_spec.rb ......  Finished in 0.17752 seconds 6 examples, 0 failures ```  Red, green, refactor. From within the application's or library's code:  ```ruby def delivering_email(message)   add_custom_headers message   add_subject_prefix message   message.to = @recipients   message.cc = []   message.bcc = [] end ```  Run `<Leader>l` without having to switch back to the spec:  ``` rspec spec/recipient_interceptor_spec.rb ......  Finished in 0.17752 seconds 6 examples, 0 failures ```  These tight feedback loops make Test-Driven Development easier by eliminating the switching cost between editor to the shell when running specs.  ","title":"Run Tests in Vim"},{"id":147,"location":"/til/vim-abolish.html","tags":["vim"],"text":" * <https://github.com/tpope/vim-abolish>  * `crm` - `MixedCase` * `crc` - `camelCase` * `crs` - `snake_case` * `cru` - `UPPER_CASE` * `cr-` - `dash-case` * `cr.` - `dot.case` * `cr<space>` - `space case` * `crt` - `Title Case`  ","title":"Vim plugin coersion: snake_case, MixedCase, camelCase, UPPER_CASE, dash-case, dot.case, space case, Title Case"},{"id":148,"location":"/til/cpp-sort.html","tags":["C++","cpp","ordenação","sort"],"text":" ## Estatísticas  Método               | Comparações | Swaps     | Escrita   | Escrita auxiliar | Tempo ms ---------------------|------------:|-----------|-----------|------------------|------ Bubble sort          |   2.096.128 | 1.001.372 | 2.002.744 | 0                | 110 Cocktail Shaker sort |   2.097.152 | 1.010.635 | 2.021.270 | 0                | 109 Gnome sort           |   2.002.322 | 1.000.141 | 2.000.282 | 0                | 106 Odd-Even sort        |   2.057.262 | 1.047.262 | 2.094.524 | 0                | 112 Comb sort            |      58.752 |    10.198 |    20.396 | 0                |   6  Os dados desta tabela forma tirados do vídeo https://www.youtube.com/watch?v=FZ8FaztJGEo   ## Bubble sort  {{% youtube lyZQPjUT5B4 %}}  ## Quick sort  {{% youtube ywWBy6J5gz8 %}}  ## Select sort  {{% youtube Ns4TPTC8whw %}}  ## Shell sort  {{% youtube CmPA7zE8mx0 %}}  ## Merge sort  {{% youtube XaqR3G_NVoo %}}   ## Insert sort  {{% youtube ROalU379l3U %}}  ## Heap sort  {{% youtube Xw2D9aJRBY4 %}}   ## Binary search  {{% youtube iP897Z5Nerk %}}  ## Comparação  {{% youtube DSMCZZGbZo4 %}}  ## Referências  * [Fast and stable sort algorithm that uses O(1) memory. Public domain.](https://github.com/BonzaiThePenguin/WikiSort)  ","title":"C++ - Ordenação"},{"id":149,"location":"/til/xfce-xfconf-query.html","tags":["xfce","debian","linux","composite"],"text":" ## Referências  xfconf-query -c xfwm4 -p /general/use_compositing  xfconf-query -c xfwm4 -p /general/use_compositing -t bool --toggle xfconf-query -c xfwm4 -p /general/use_compositing -s true xfconf-query -c xfwm4 -p /general/use_compositing -s false   * [Alternando o compositor do Xfce via script em shell](https://www.youtube.com/watch?v=jR9NtwMDASU) ","title":"Habilitando e desabilitando o modo composite no Xfce"},{"id":150,"location":"/til/windows-key.html","tags":["windows"],"text":" To find your original Windows 10 product key from Linux:  1. Open the terminal application. 2. You must run the Linux command as the root user. 3. Type ‘sudo strings /sys/firmware/acpi/tables/MSDM‘ to print Windows 10 or Windows 8 OEM product key 4. You can also use the acpidump command to get the same information under Linux.  Let us see all the commands and examples in detail.  ```bash strings /sys/firmware/acpi/tables/MSDM  ```  ```bash MSDMU ACRSYSACRPRDCT 1025 00000-00000-00000-00000-XD4FC ```   ## Referências  * [Linux find Windows 10 OEM product key command](https://www.cyberciti.biz/faq/linux-find-windows-10-oem-product-key-command/)  ","title":"Obtendo key do windows a partir do linux"},{"id":151,"location":"/til/socialsizeio.html","tags":["social"],"text":" ## Referências  * [Image and Video sizes for Social Media. Templates for Sketch, Figma, Adobe XD & Photoshop.](https://socialsizes.io/) ","title":"Tamanhos de imagens e vídeos para redes sociais"},{"id":152,"location":"/til/pdfjs.html","tags":["pdfjs"],"text":" ## Referências  * [Custom PDF Rendering in JavaScript with Mozilla's PDF.Js](https://www.sitepoint.com/custom-pdf-rendering/) * [How to Enable Annotations in PDF.JS](https://usefulangle.com/post/94/javascript-pdfjs-enable-annotation-layer) * [How to Display PDF in HTML Page using Javascript PDF.JS Library](https://usefulangle.com/post/20/pdfjs-tutorial-1-preview-pdf-during-upload-wih-next-prev-buttons) ","title":"Pdf.js"},{"id":153,"location":"/til/como-trocar-hostname-sem-reiniciar.html","tags":["sysadmin","linux","debian","hostname"],"text":" Como um **Administrador de Sistemas**, as vezes, você precisa alterar o nome da máquina. Seja porque digitou o nome errado durante a instalação, ou se a política de nomes da empresa mudou ou se o nome já estava sendo utilizado por outra máquina.  **Nota:** O procedimento que veremos a seguir vale para as distribuições Linux derivadas do [Debian](https://www.debian.org), tais como [Mint](https://linuxmint.com), [Ubuntu](https://www.ubuntu.com), e outras 130 (segundo o [distrowatch](https://distrowatch.com/search.php?basedon=Debian)).  O arquivo de sistema que guarda o nome da máquina para ser usado a cada boot é o `/etc/hostname`, então basta trocar seu conteúdo que no **próximo boot** a máquina terá outro nome.  Uma opção bem simples de edição, já que o conteúdo deste arquivo é somente uma palavra, é enviar através do comando `echo` o novo nome para o arquivo `/etc/hostname`:  ```bash echo \"novo-nome\" > /etc/hostname ```  **Para o próximo boot está tudo OK!**  Se verificarmos a configuração a com o comando `hostname` veremos que ainda mostra o nome antigo. Mas a máquina já está rodando e não posso parar os serviços agora para fazer o reboot, então precisamos alterar o *kernel* em execução.  Sem pânico! Felizmente existe um modo muito simple editar variáveis do *kernel*. Ele expõe muitas de suas configurações através de um *sistema de arquivos* montado em `/proc/sys/kernel`. Vamos usar o mesmo comando `echo` para alterar o arquivo `/proc/sys/kernel/hostname`.  ```bash echo \"novo-nome\" > /proc/sys/kernel/hostname ```  Agora se lançarmos o comando `hostname` novamente veremos o novo nome e sem que seja preciso reiniciar a máquina.  Verifique se no arquivo `/etc/hosts` não existe nenhuma menção ao antigo nome, se existir atualize este arquivo. Para atualizar o `/etc/hosts` pela linha de comando faça o seguinte:  ```bash sed -i \"s/antigo-nome/novo-nome/g\" /etc/hosts ```  O `sed` é um editor de fluxo de texto que utiliza expressões regulares para editar textos de forma automatizada. Uma explicação muito breve sobre o comando acima:  * `-i`: modo de edição `inline` (abre, edita e fecha o arquivo) * `s`: comando de substituição no formato `/de/para/` * `g`: substitui todas as ocorrências de `antigo-nome` por `novo-nome`   {{< comment >}} This is a comment that will not be rendered.  {{< /comment >}} ","title":"Como trocar o nome do servidor sem reiniciar"},{"id":154,"location":"/til/bash-trap.html","tags":["bash","trap"],"text":" ## EXIT  ```bash #!/bin/bash -x  # O arquivo será removido quando o script finalizar tempfile=/tmp/tmpdata trap \"rm -f $tempfile\" EXIT  # ...  echo \"Fim\" ```   ```bash #!/bin/bash -x  tempfile=/tmp/tmpdata  # Função chamada quando o script finalizar function cleanup {   rm -f $tempfile }  trap cleanup EXIT  # ...  echo \"Fim\" ```    ## Referências  Tem muita coisa para extrair deste artigo * [The Bash Trap Command](https://www.linuxjournal.com/content/bash-trap-command)  ","title":"Bash - trap"},{"id":155,"location":"/til/sbe.html","tags":["sbe","zeromq","nanomsg"],"text":" * ~25X greater throughput than Google Protocol Buffers (GPB) with very low and predictable latency. * A typical market data message can be encoded, or decoded, in ~25ns compared   to ~1000ns for the same message with GPB on the same hardware. XML and FIX   tag value messages are orders of magnitude slower again.  NOTE: Parece que o artigo do Mechanical Sympathy está melhor revisado  ## Referências  * [github: Simple Binary Encoding (SBE) - High Performance Message Codec](https://github.com/real-logic/simple-binary-encoding) * [DZone: Simple Binary Encoding](https://dzone.com/articles/simple-binary-encoding) * [Mechanical Sympathy: Simple Binary Encoding](https://mechanical-sympathy.blogspot.com/2014/05/simple-binary-encoding.html) * [Cap'n Proto, FlatBuffers, and SBE](https://capnproto.org/news/2014-06-17-capnproto-flatbuffers-sbe.html) ","title":"SBE - Simple Binary Encoding"},{"id":156,"location":"/til/eclipse-swtbot.html","tags":["swtbot"],"text":" ## Referências  * [Building Reusable Eclipse UI Test Automation Framework with SWTBot](https://www.ibm.com/developerworks/community/blogs/c914709e-8097-4537-92ef-8982fc416138/entry/building_reusable_eclipse_ui_test_automation_framework_with_swtbot?lang=en)  ","title":"SWTBot"},{"id":157,"location":"/til/corba.html","tags":["corba","IDL","C++","Python"],"text":" ::: toc  ## Introdução  ### O que é CORBA?  * é o acrônimo para **Common Object Request Broker Architecture** * é um framework para construção de sistemas distribuídos orientados a objetos * é multiplataforma * é independente de linguagem * é um padrão aberto e extensível definido pela *Object Management Group* * clientes e servidores estão em diferentes máquinas * programas clientes enviam mensagens para servidores remotos como se este estivesse locais (*location transparency*)  ::: adsense_in_article  ### O que é a OMG?  * www.omg.org * fundada em 1989 * somente provê especificações * não provê implementações * todas as especificações são free  ### CORBA vs SOAP/XML-RPC  * `SOAP` e `XML-RPC` são protocolos wire * `CORBA` inclui:   * um protocolo wire   * `GIOP`   * object model   * `IDL`   * mapeamento de linguagem   * serviços   * códigos de cliente e servidor portáveis  entre implementações CORBA  ### CORBA é pesado?  * uma arquitetura mínima requer algumas dezenas de kB (segundo [CORBA? Isn’ t that Obsolete ?][ACCU2003_PDF])  ## ORB - Object Request Broker  * é o núcleo da *Object Management Architecture* * integra:   * diferentes linguagens   * diferentes arquiteturas   * diferentes sistemas operacionais * é responsável por:   * encontrar uma implementação para uma requisição   * preparar implementações para receber requisições   * comunicar dados das requisições   ## Clientes  * possuem referências para objetos e invocam operações nestes objetos * conhecem apenas a interface dos objetos do servidor * não conhecem a implementação dos objetos nem os adaptadores utilizados por estas implementações * invocam interfaces definidas por uma IDL * invocam as implementações através de:   * proxies (*IDL generated stubs*)   * DII (*Dynamic Invocation Interface*)  ## Servidores  * se registram no ORB * se disponibilizam para aceitar requisições * implementam uma IDL  ## IDL  * provê interfaces independente de linguagem e sistema operacional * é puramente declarativa (não provê detalhes de implementação) * é fortemente tipada * especificações podem ser escritas e invocadas em qualquer linguagem  ### IDL Features  * modules * interfaces * operations * attributes * inheritance * basic types * arrays * sequences * struct, enum, union * typedef * consts * exceptions  ### Tipos básicos  * float * double * long * short * unsigned long * unsigned short * char * boolean * octet * any  ### Direções dos parâmetros  * `in` - do cliente para o servidor * `out` - do servidor para o cliente * `inout` - do cliente para o servidor e de volta para o cliente  ### Exceções  CORBA define dois tipos de exceções:  * **system exceptions**: exceções padrões definidas pelo CORBA * **user defined exceptions**: exceções definidas pelo usuário através da IDL  * Implicitamente, todas as operações definidas na IDL podem lançar qualquer uma das exceções padrão do sistema CORBA * Nenhuma referência para exceções padrão devem aparecer na especificação da IDL * para especificar que uma operação **pode** lançar uma exceção definida pelo usuário você deve:   * primeiro definir a estrutura da exceção   * incluir `raises` à definição da operação  * uma exceção da IDL pode conter membros  ```text Interface Bank {   exception Reject {     string reason; // membro da exceção   };   exception TooMany {}; // exceção sem membros    Account newAccount( in string name ) raises (Reject, TooMany); }; ```  ### Operações oneway  ```text Interface Account {   oneway void notice( in string notice ); }; ```  * não bloqueantes * não aceitam parâmetros `out` ou `inout` * não lançam exceções (não aceitam `raise`)  The OMG CORBA specification defines the following exceptions:  * `BAD_CONTEXT` - if a request does not contain a correct context this exception is raised. * `BAD_INV_ORDER` - this exception indicates that operations has been invoked operations in the wrong order, which would cause, for example, a dead-lock. * `BAD_OPERATION` - raised if the target object exists, but that the invoked operation is not supported. * `BAD_PARAM` - is thrown if, for example, a parameter is out of range or otherwise considered illegal. * `BAD_TYPECODE` - if illegal type code is passed, for example, encapsulated in an any data type the 'BAD_TYPECODE' exception will be raised. * `BAD_QOS` - raised whenever an object cannot support the required quality of service. * `CODESET_INCOMPATIBLE` - raised if two ORB's cannot communicate due to different representation of, for example, char and/or wchar. * `COMM_FAILURE` - raised if an ORB is unable to setup communication or it is lost while an operation is in progress. * `DATA_CONVERSION` - raised if an ORB cannot convert data received to the native representation. See also the 'CODESET_INCOMPATIBLE' exception. * `FREE_MEM` - the ORB failed to free dynamic memory and failed. * `IMP_LIMIT` - an implementation limit was exceeded in the ORB at run time. A object factory may, for example, limit the number of object clients are allowed to create. * `INTERNAL` - an internal failure occurred in an ORB, which is unrecognized. You may consider contacting the ORB providers support. * `INTF_REPOS` - the ORB was not able to reach the interface repository, or some other failure relating to the interface repository is detected. * `INITIALIZE` - the ORB initialization failed due to, for example, network or configuration error. * `INVALID_TRANSACTION` - is raised if the request carried an invalid transaction context. * `INV_FLAG` - an invalid flag was passed to an operation, which caused, for example, a connection to be closed. * `INV_IDENT` - this exception indicates that an IDL identifier is incorrect. * `INV_OBJREF` - this exception is raised if an objet reference is malformed or a nil reference (see also corba:create_nil_objref/0). * `INV_POLICY` - the invocation cannot be made due to an incompatibility between policy overrides that apply to the particular invocation. * `MARSHAL` - this exception may be raised by the client- or server-side when either ORB is unable to marshal/unmarshal requests or replies. * `NO_IMPLEMENT` - if the operation exists but no implementation exists, this exception is raised. * `NO_MEMORY` - the ORB has run out of memory. * `NO_PERMISSION` - the caller has insufficient privileges, such as, for example, bad SSL certificate. * `NO_RESOURCES` - a general platform resource limit exceeded. * `NO_RESPONSE` - no response available of a deferred synchronous request. * `OBJ_ADAPTER` - indicates administrative mismatch; the object adapter is not able to associate an object with the implementation repository. * `OBJECT_NOT_EXIST` - the object have been disposed or terminated; clients should remove all copies of the object reference and initiate desired recovery process. * `PERSIST_STORE` - the ORB was not able to establish a connection to its persistent storage or data contained in the the storage is corrupted. * `REBIND` - a request resulted in, for example, a 'LOCATION_FORWARD' message; if the policies are incompatible this exception is raised. * `TIMEOUT` - raised if a request fail to complete within the given time-limit. * `TRANSACTION_MODE` - a transaction policy mismatch detected. * `TRANSACTION_REQUIRED` - a transaction is required for the invoked operation but the request contained no transaction context. * `TRANSACTION_ROLLEDBACK` - the transaction associated with the request has already been rolled back or will be. * `TRANSACTION_UNAVAILABLE` - no transaction context can be supplied since the ORB is unable to contact the Transaction Service. * `TRANSIENT` - the ORB could not determine the current status of an object since it could not be reached. The error may be temporary. * `UNKNOWN` - is thrown if an implementation throws a non-CORBA, or unrecognized, exception.  ### Estruturas  ```text struct PersonalDetails {   string name;   short age; };  interface Bank {   PersonalDetails getPerDet(in string name); }; ```  ### Arrays  * podem ser multidimensionais * precisam ter tamanho fixo (*conhecido em tempo de definição*)  ```text Account bankAccounts[100]; short matrix[10][20]; // 2D array ```  ### Constantes  ```text Interface Bank {   const long MaxAccounts = 10000; }; ```  Contantes dos tipos `long`, `float` e `string` podem ser declarada.   ### Typedef  ```text typedef short size; size i;  typedef Account Accounts[100]; // acho que está invertido aqui Accounts bankAccounts; ```  ### Módulos  ```text Module Finance {   interface Bank { ... };   interface Account { ... }; }; ```  * são usados para agrupar interfaces em unidades lógicas * utilize nomes completos (p.e. `Finance::Account *a;`)  ### Preprocessador  * baseado no preprocessador do C++ * substituição de macro * compilação condicional * inclusão de IDL * `#include` * `#define` * `#if` * `#ifdef` * `#defined`  ### Mapeamento para linguagem  * linguagens *OO* e *non-OO* acessam de modos diferentes * tipos específicos da linguagem * estrutura do *stub* cliente (somente para *non-OO*) * interface de invocação dinâmica * esqueleto de implementação * adaptadores de objeto * interface direta ao ORB  ### Mapeamento de identificadores  * usa o mesmo nome * se for uma palavra reservada do C++ receberá um `_` como prefixo (p.e. `_new`)  ### Mapeamento de interface  * são mapeadas para classes * uma IDL mapeada para uma classe C++ não pode ser instanciada  ```text Interface Account { ... } ```  será mapeado para:  ```c++ class Account : public virtual CORBA::Object { ... } ```  ### Mapeamento de escopo  #### Interface para classe  ```text Interface Bank {   struct Details { ... }; }; ```  será mapeado para:  ```c++ class Bank {   public:     struct Details { ... }; }; ```  #### Module para namespace  ```text Module M {   Interface A { ... };   Interface B { ... }; }; ```  será mapeado para:  ```c++ namespace M {   class A { ... };   class B { ... }; }; ```  Acessíveis via `M::A` e `M::B`.  ### Mapeamento do módulo padrão do CORBA  Será mapeado para:  ```c++ namespace CORBA { ... } ```  Utilize os membros como:  ```c++ CORBA::ORB_init( ... ); ```  ### Mapeamento de tipos  IDL                | C++               | Tamanho e faixa -------------------|-------------------|--------------------------------------------------- short              | CORBA::Short      | 16 bit: $-2^{15} \\ldots +2^{15} - 1$ long               | CORBA::Long       | 32 bit: $-2^{31} \\ldots +2^{31} - 1$ long long          | CORBA::LongLong   | 64 bit: $-2^{63} \\ldots +2^63 - 1$ unsigned short     | CORBA::UShort     | 16 bit: $0 \\ldots 2^{16} - 1$ unsigned long      | CORBA::ULong      | 32 bit: $0 \\ldots 2^{32} - 1$ unsigned long long | CORBA::ULongLong  | 64 bit: $0 \\ldots 2^{64}$ float              | CORBA::Float      | 32 bit IEEE single precision floating point number double             | CORBA::Double     | 64 bit IEEE double precision floating point number long double        | CORBA::LongDouble | -- char               | CORBA::Char       | 8 bit wchar              | CORBA::WChar      | -- (Wide Char) string             | CORBA::char *     | -- wstring            | CORBA::WChar *    | -- boolean            | CORBA::Boolean    | true/false octet              | CORBA::Octet      | (unsigned char)  8 bit raw. Sem conversão any                | CORBA::Any        | Arbitrary   ## Repositório de interfaces  * provê armazenamento para informações da IDL * um programa pode referenciar objetos cuja interface será conhecida em tempo de execução * estas informações podem ser usadas pelo ORB para realizar requisições * pode armazenar outras informações sobre interfaces:   * debugging   * info   * browser routines  ## Repositório de implementação  * informações que o ORB utiliza para localizar e ativar implementações de um servidor de objetos * armazena informações de ativação:   * máquina onde um servidor pode ser iniciado a partir de uma requisição do cliente  ## Dynamic Invocation Interface  * Em vez de chamar um stub específico de uma operação, é possível especificar um objeto, operação e parâmetros para através de uma chamada ou sequência de chamadas * o cliente precisa fornecer os tipos dos parâmetros passados  ## Interoperabilidade  * suporta rede de objetos distribuídos em múltiplos ORBs (heterogêneos) * *InterORBability* * `GIOP`: (General Inter-ORB Protocol) sintaxe padrão de transferência e conjunto de formato de mensagens * ESIOP: (Environment Specific Inter-ORB Protocol) protocolo especializado * `IIOP`: mapeamento `TCP/IP` para `GIOP`  ## COSS - Common Object Service Specification  * naming * events * life cycle * time * transactions * concurrency * persistence * query * security * licensing * relationships * properties * externalization * collection  ## OA - Object Adapter  * Conectam implementações de objetos ao ORB * Ativam os múltiplos objetos implementados por um servidor * Encaminhamento de requisições de serviço * Geram *object references*   * Para ter o status de **CORBA Object** o objeto deve ser registrado com o adaptador  ## BOA - Basic Object Adapter  * Presente na especificação CORBA até a revisão 2.1 * CORBA 2.2 substituiu o BOA pelo POA * ORB com BOA significa que os servidores não são portáveis  ## POA Portable Object Adapter  * O POA (*Portable Object Adapter*) auxilia o ORB (*Object Request Broker*) na   passagem das requisições do clientes para a implementação do servidor   (servant). * O POA interpreta a requisição, empacota a passagem de parâmetros e então   localiza o servant e os tratadores de recuperação erros e de segurança. * Isto habilita portabilidade, independência de fabricantes e extensibilidade   compatível com a especificação da OMG (Object Management Group) * POA também habilita a persistência de objetos bem como dá suporte a ciclo de   vida do serviço * Identificadores de objetos automaticamente gerados ou especificados pelo usuário * Ativação explícita ou por demanda * Relação: um servant <-> um ou mais objetos CORBA * Aplicação tem total controle sobre o comportamento e sobre a existência dos objetos CORBA * *Servants* podem usar esqueletos estáticos ou dinâmicos  ### Identificador de Objeto  * Valor usado para identificar um objeto no contexto de um POA   * Não é um identificador globalmente único! * Pode ser determinado pela aplicação ou gerado pelo POA   * `typedef sequence<octet> ObjectID;` * O POA coloca esse valor no campo *object id* da IOR  ### O Campo Object Id da IOR  ![](/img/corba-ior-object-id.webp)   ## Instalação do omniORB no Debian  ```bash apt install libomniorb4-dev omniidl omniorb omniorb-doc omniorb-nameserver omniidl-python python-omniorb ```  ## Iniciar o servidor de nomes  ### OmniORB  Incluir no arquivo `/etc/omniORB.cfg` a seguinte linha:  ```text InitRef = OmniNameService=corbaname::localhost ```  ::: note O nome **OmniNameService** deve ser conhecido pelo **servidor** e pelo **cliente**.  Para iniciar o servidor de nomes do **OmniORB** use:  ```bash omniNames -start ```  Exemplo de saída do comando acima:  ```text omniNames: (0) 2019-12-30 15:36:29.516974: Data file: '/var/lib/omniorb/omninames-erebo.dat'. omniNames: (0) 2019-12-30 15:36:29.517058: Starting omniNames for the first time. omniNames: (0) 2019-12-30 15:36:29.517348: Wrote initial data file '/var/lib/omniorb/omninames-erebo.dat'. omniNames: (0) 2019-12-30 15:36:29.517444: Read data file '/var/lib/omniorb/omninames-erebo.dat' successfully. omniNames: (0) 2019-12-30 15:36:29.517529: Root context is IOR:010000002b00000049444c3a6f6d672e6f72672f436f734e616d696e672f4e616d696e67436f6e746578744578743a312e300000010000000000000070000000010102000d0000003139322e3136382e302e31330000f90a0b0000004e616d6553657276696365000300000000000000080000000100000000545441010000001c000000010000000100010001000000010001050901010001000000090101000354544108000000ad430a5e010075e0 omniNames: (0) 2019-12-30 15:36:29.517600: Checkpointing Phase 1: Prepare. omniNames: (0) 2019-12-30 15:36:29.517703: Checkpointing Phase 2: Commit. omniNames: (0) 2019-12-30 15:36:29.517802: Checkpointing completed. ```  A porta padrão é a `2809`.  Os arquivos de controle serão criados por padrão no diretório `/var/lib/omniorb/`:  * `/var/lib/omniorb/omninames-nome-da-maquina.dat` * `/var/lib/omniorb/omninames-nome-da-maquina.bak`  Para especificar um diretório diferente use a opção `-logdir`:  ```bash omniNames -logdir /tmp -start ```  ### MICO  Para iniciar o servidor de nomes do **MICO** use:  ```bash nsd -ORBIIOPAddr inet:localhost:2809 ```  Veja exemplo em [Connecting 3 ORBs][CONNECTING_3_ORBS].   ## Exemplo  ![Componentes do exemplo](/til/corba-01.webp)  ### Criando a IDL  Arquivo de interface `Data.idl`:  ```c++ {linenos=true} #ifndef __DATADIST_IDL__ #define __DATADIST_IDL__ module Data {   interface ServiceA {     boolean CallServiceRoutineA (         in    long num1,         inout long num2,         out   long retNum );     boolean CallServiceRoutineB (         inout long num1,         inout long num2);   }; }; #endif ```  ### Gerando backend a partir da IDL  Use a opção `-b` para escolher o `backend` a ser gerado.  ```bash omniidl -bcxx    Data.idl omniidl -bpython Data.idl omniidl -bdump   Data.idl ```  #### Gerando Python  ```bash omniidl -bpython Data.idl ```  Os arquivos abaixo são criados:  * `Data_idl.py` * `Data__POA/__init__.py` * `Data/__init__.py`  ::: fixme Descrever os arquivos **gerados** em `python`.  ::: warning lorem ipsum  ::: tip lorem ipsum  ::: info lorem ipsum  ::: note lorem ipsum  #### Gerando C++  Ao executar o seguinte comando:  ```bash omniidl -bcxx Data.idl ```  os arquivos abaixo são criados:  * `Data.hh` - cabeçalho que será usado pelo cliente e pelo servidor * `DataSK.cc` - deve ser compilado e lincado com o programa que proverá a infraestrutura de comunicação  Contendo os seguintes items:  * classe `ServiceA` contendo funções estáticas e definições de tipos * `ServiceA_ptr` - um ponteiro para o tipo do objeto de referência * `ServiceA_var` - um helper para gerenciamento de memória usado por `ServiceA_ptr` * classe `POA_Service!` - a classe esqueleto para o servidor  ##### Data.hh  ```c++ {show-line-numbers data-ln-start-from=85}   // interface ServiceA   class ServiceA {   public:     // Declarations for this interface type.     typedef ServiceA_ptr _ptr_type;     typedef ServiceA_var _var_type;     static _ptr_type _duplicate(_ptr_type);     static _ptr_type _narrow(::CORBA::Object_ptr);     static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);     static _ptr_type _nil(); ```  ##### DataSK.cc  ```c++ // This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.  #include \"Data.hh\" #include <omniORB4/IOP_S.h> #include <omniORB4/IOP_C.h> #include <omniORB4/callDescriptor.h> #include <omniORB4/callHandle.h> #include <omniORB4/objTracker.h>  OMNI_USING_NAMESPACE(omni) ... ```  ## Criando o servidor  ### Server.cc  Código do servidor:  1. Iniciar o ORB 2. Obter a referência para o POA raiz para registra-se 3. Vincular com o serviço de nomes 4. Iniciar o servidor de objetos  ```c++ // Server.cc  #include <assert.h> #include <iostream> #include <signal.h> #include <stdlib.h> #include <string> #include <unistd.h> #include \"CServiceA_i.hh\" #include \"Data.hh\"  using namespace std;  int main( int argc, char **argv ) {   try { ```  ```c++ {show-line-numbers data-ln-start-from=17}     // (1) Iniciar o ORB     CORBA::ORB_var orb = CORBA::ORB_init( argc, argv ); ```  ```c++ {show-line-numbers data-ln-start-from=19}     // (2) Obter a referência para o POA raiz para registra-se para ficar disponível para os clientes     CORBA::Object_var       obj  = orb->resolve_initial_references( \"RootPOA\" );     PortableServer::POA_var _poa = PortableServer::POA::_narrow( obj.in() ); ```  ```c++ {show-line-numbers data-ln-start-from=22}     // As operações definidas na interface são invocadas pelo objeto de referência.     // Um instância de CRequestSocketStream_i é iniciada     PortableServer::Servant_var<CServiceA_i> myRequestServiceA = new CServiceA_i(); ```  ```c++ {show-line-numbers data-ln-start-from=25}     // o servidor e objetos é ativado no RootPOA     PortableServer::ObjectId_var myRequestServiceA_oid = _poa->activate_object( myRequestServiceA ); ```  ```c++ {show-line-numbers data-ln-start-from=27}     // Obtêm o objeto de referência do servidor e registra no servidor de nome     CORBA::Object_var SA_obj = myRequestServiceA->_this(); ```  ```c++ {show-line-numbers data-ln-start-from=29}     // Obtêm uma referência para o objeto e imprime seu IOR como string     CORBA::String_var sior( orb->object_to_string( SA_obj.in() ) );     cerr << \"'\" << (char *)sior << \"'\" << endl; ```  ::: note Aqui você deve utilizar o mesmo nome do servidor de nomes definido no arquivo `/etc/omniORB.cfg`.  ```c++ {show-line-numbers data-ln-start-from=32}     // (3) Vincular com o serviço de nomes     // o serviço é definido pela diretiva InitRef e pelo identificador     // \"OmniNameService\" no arquivo omniORB.cfg     CORBA::Object_var obj1 = orb->resolve_initial_references( \"OmniNameService\" );     assert( !CORBA::is_nil( obj1.in() ) ); ```  ```c++ {show-line-numbers data-ln-start-from=37}     CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj1.in() );     assert( !CORBA::is_nil( nc.in() ) ); ```  ```c++ {show-line-numbers data-ln-start-from=39}     CosNaming::Name name;     name.length( 1 );     name[0].id = CORBA::string_dup( \"DataServiceName1\" );     nc->rebind( name, SA_obj.in() ); ``` ```c++ {show-line-numbers data-ln-start-from=43}     //========================================================================     myRequestServiceA->_remove_ref();     //     PortableServer::POAManager_var pmgr = _poa->the_POAManager();     pmgr->activate();     // (4) Iniciar o servidor de objetos para aceitar requisições dos clientes     orb->run();     //     // Se o ORB deixar o loop de tratamento de eventos     // Atualmente está configurado para nunca dar timeout     orb->destroy();     //     free( name[0].id ); // str_dup realiza um malloc internamente   } ```  Tratar as exceções:  ```c++ {show-line-numbers data-ln-start-from=57}   catch( CORBA::TRANSIENT & ) {     cerr << \"Caught system exception TRANSIENT -- unable to contact the server.\" << endl;   }   catch( CORBA::OBJECT_NOT_EXIST & ) {     cerr << \"Caught system exception OBJECT_NOT_EXIST\" << endl;   }   catch( CORBA::SystemException & ) {     cerr << \"Caught CORBA::SystemException.\" << endl;   }   catch( CORBA::Exception & ) {     cerr << \"Caught CORBA::Exception.\" << endl;   }   catch( omniORB::fatalException &fe ) {     cerr << \"Caught omniORB::fatalException:\" << endl;     cerr << \"  file: \" << fe.file() << endl;     cerr << \"  line: \" << fe.line() << endl;     cerr << \"  mesg: \" << fe.errmsg() << endl;   }   catch( ... ) {     cerr << \"Caught unknown exception.\" << endl;   }    return 0; } ```  ## Implementação do Servant  São denotados pelo sufixo `_i`.  ### CServiceA_i.hh  ```c++ // CServiceA_i.hh #include \"Data.hh\"  class CServiceA_i : public POA_Data::ServiceA, public PortableServer::RefCountServantBase { public:   CServiceA_i();   virtual ~CServiceA_i();   virtual CORBA::Boolean CallServiceARoutineA(     /*in*/    CORBA::Long num1,     /*inout*/ CORBA::Long &num2,     /*out*/   CORBA::Long &retNum );   virtual CORBA::Boolean CallServiceARoutineB(     /*inout*/ CORBA::Long &num1,     /*inout*/ CORBA::Long &num2 ); }; ```  ### CServiceA_i.cc  ```c++ // CServiceA.cc  #include <fstream> #include <iostream> #include <stdio.h> #include <stdlib.h> #include <string.h> #include <string> #include <sys/types.h> #include <unistd.h> #include <vector>  #include \"CServiceA_i.hh\"  using namespace Data;  #include <sys/wait.h>  CServiceA_i::CServiceA_i() { }  CServiceA_i::~CServiceA_i( void ) { }  CORBA::Boolean CallServiceARoutineA(     /*in*/    CORBA::Long num1,     /*inout*/ CORBA::Long &num2,     /*out*/   CORBA::Long &retNum ) {   num2   = num2 + num1;   retNum = 10;   return true; }  CORBA::Boolean CallServiceARoutineB(     /*inout*/ CORBA::Long &num1,     /*inout*/ CORBA::Long &num2 ) {   num1++;   num2++;   return true; } ```  ## Cliente CORBA  ![Cliente CORBA](/img/corba-client.webp)  ### Client.cc  ```c++ // Client.cc #include \"CRequestServiceA.hh\"  int main( int argc, char **argv ) {   // O construtor estabelece o link como o servidor CORBA.   CRequestServiceA requestServiceA;    if( requestServiceA.RequestServiceARoutineA() ) {     cout << \"ServiceA RoutineA: True\" << endl;   }   if( requestServiceA.RequestServiceARoutineB() ) {     cout << \"ServiceA RoutineB: True\" << endl;   }   return 0; } ```  ### CRrquestServiceA.hh  ```c++ // CRrquestServiceA.hh #include \"Data.hh\" #include <cassert> #include <fstream> #include <iostream>  using namespace std;  class CRequestServiceA { public:   CRequestServiceA();   ~CRequestServiceA();   bool RequestServiceARoutineA();   bool RequestServiceARoutineB();    CosNaming::Name m_corbaCosName;    // CORBA ORB   CORBA::ORB_var m_orb;    CORBA::Object_var m_obj;  // ORB Object   CORBA::Object_var m_obj1; // Resolved id to object reference    // Resolved and narrowed CORBA object for proxy calls   Data::ServiceA_var m_Data; };  class DS_ServerConnectionException { public:   DS_ServerConnectionException()   {     cerr << \"CORBA COMM_FAILURE\" << endl;   }; };  class DS_SystemException { public:   DS_SystemException()   {     cerr << \"CORBA Exception\" << endl;   }; };  class DS_FatalException { public:   DS_FatalException()   {     cerr << \"CORBA Fatal Exception\" << endl;   }; };  class DS_Exception { public:   DS_Exception()   {     cerr << \"Exception\" << endl;   }; }; ```  ### CRequestServiceA.cc  ```c++ // CRequestServiceA.cc  #include \"CRequestServiceA.hh\" using namespace Data;  CRequestServiceA::CRequestServiceA() {   try {     // Inicia o objeto ORB     int            argc = 0; // Variáveis dummy.     char **        argv = 0;     CORBA::ORB_var orb  = CORBA::ORB_init( argc, argv );      // Vincula o objeto ORB ao servidor de nome     // Deve ser o mesmo nome definido em /etc/omniORB.cfg     CORBA::Object_var obj = orb->resolve_initial_references( \"OmniNameService\" );     assert( !CORBA::is_nil( obj.in() ) );      CosNaming::NamingContext_var nc = CosNaming::NamingContext::_narrow( obj.in() );     assert( !CORBA::is_nil( nc.in() ) );      CosNaming::Name _corbaCosName;     _corbaCosName.length( 1 );     _corbaCosName[0].id = CORBA::string_dup( \"DataServiceName1\" );      CORBA::Object_var obj1 = nc->resolve( _corbaCosName );     assert( !CORBA::is_nil( obj1.in() ) );      m_Data = ServiceA::_narrow( obj1.in() );     if( CORBA::is_nil( m_Data.in() ) ) {       cerr << \"IOR is not an SA object reference.\" << endl;     }   }   catch( CORBA::COMM_FAILURE &ex ) {     cerr << \"Caught system exception COMM_FAILURE -- unable to contact the \"          << \"object.\" << endl;     throw DS_ServerConnectionException();     return;   }   catch( CORBA::SystemException & ) {     cerr << \"Caught a CORBA::SystemException.\" << endl;     throw DS_SystemException();     return;   }   catch( CORBA::Exception & ) {     cerr << \"Caught CORBA::Exception.\" << endl;     throw DS_Exception();     return;   }   catch( omniORB::fatalException &fe ) {     cerr << \"Caught omniORB::fatalException:\" << endl;     cerr << \"  file: \" << fe.file() << endl;     cerr << \"  line: \" << fe.line() << endl;     cerr << \"  mesg: \" << fe.errmsg() << endl;     throw DS_FatalException();     return;   }   catch( ... ) {     cerr << \"Caught unknown exception.\" << endl;     throw DS_Exception();     return;   }   return; }  CRequestServiceA::~CRequestServiceA() {   // ... }  bool CRequestServiceA::RequestServiceARoutineA() {   CORBA::Long num1 = 4;   CORBA::Long num2 = 5;   CORBA::Long retNum;    cout << \"Valores de entrada para a rotina A do serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;    // Esta chamada CORBA será executada remotamente   if( m_Data->CallServiceRoutineA( num1, num2, retNum ) ) {     cout << \"Valores retornados pelo serviço A: \" << num1 << \" \" << num2 << \" \" << retNum << endl;     return true;   }   return false; }  bool CRequestServiceA::RequestServiceARoutineB() {   CORBA::Long num1 = 0;   CORBA::Long num2 = 50;    cout << \"Valores de entrada para a rotina B do serviço A: \" << num1 << \" \" << num2 << endl;    // Esta chamada CORBA será executada remotamente   if( m_Data->CallServiceRoutineB( num1, num2 ) ) {     cout << \"Valores retornados pelo serviço B: \" << num1 << \" \" << num2 << endl;     return true;   }   return false; } ```  ## Makefile  ```makefile # Makefile LDFLAGS+=-lomniORB4 -lomnithread -lomniDynamic4 CXXFLAGS+=-Wall  all: server client  server: DataSK.o CServiceA_i.o Server.o \t$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)  client: DataSK.o Client.o CRequestServiceA.o \t$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)  clean: \trm -f *.o \trm -f server \trm -f client ```   This is the value of CORBA. This is why we use CORBA. Look at how simple the program looks. The constructor establishes the link with the CORBA server. The subsequent calls to Routine A and B are processed remotely on the CORBA server but called like any other local function call.  ## Todo  * https://www.grisby.org/presentations/py10tut.pdf * https://www.grisby.org/presentations/CORBAControls2002.pdf * https://xennis.org/wiki/CORBA <- tutorial que parece muito interessante * http://www.mario-konrad.ch/blog/programming/connect_orbs.html * https://docs.oracle.com/cd/E13203_01/tuxedo/tux100/pdf/naming.pdf  ## Referências  * [Introduction to Distributed Computing using CORBA](https://www.cse.iitb.ac.in/~rkj/talks/corba-tutorial.pdf) * [CORBA, C++ and Linux](http://www.yolinux.com/TUTORIALS/CORBA.html) * [O Adaptador de Objetos e Interoperabilidade CORBA](https://www.cin.ufpe.br/~cagf/sdgrad/aulas/POA+GIOP.pdf) * [CORBA Tutorial: Connecting 3 ORBs][CONNECTING_3_ORBS] * [CORBA? Isn’ t that Obsolete ?][ACCU2003_PDF] * (local) [The omniORB IDL Compiler](file:///usr/share/doc/omniorb-doc/omniidl.html) * (local) [The omniNames CORBA Naming Service](file:///usr/share/doc/omniorb-doc/omniNames.html) * (local) [The OMNI Thread Abstraction](file:///usr/share/doc/omniorb-doc/omnithread.html) * (local) [The omniORB utilities](file:///usr/share/doc/omniorb-doc/utilities.html) * (local) [The omniORB version 4.2 Users’ Guide](file:///usr/share/doc/omniorb-doc/omniORB/index.html) * [Mapping of OMG IDL Statements to C++](https://docs.oracle.com/cd/E13211_01/wle/cref/member.htm) * [Raising Exceptions in IDL Operations](http://www.cs.rpi.edu/~musser/dsc/idl/idl-overview_5.html) * [O Portable Object Adapter](https://www.ime.usp.br/~reverbel/SMW-07/Slides/POA.pdf) * [CORBA System and User Defined Exceptions](http://erlang.org/documentation/doc-5.7/lib/orber-3.6.11/doc/html/ch_exceptions.html)  [CONNECTING_3_ORBS]: http://www.mario-konrad.ch/blog/programming/connect_orbs.html [ACCU2003_PDF]: https://www.grisby.org/presentations/accu2003.pdf ","title":"CORBA"},{"id":158,"location":"/til/cpp-clant-tidy.html","tags":["C++","cpp","clang-tidy"],"text":" ## Instalação  ```bash apt-get install clang-tidy ```  ## Verificadores disponíveis  ```bash clang-tidy --list-checks -checks='*' | grep \"modernize\"     modernize-avoid-bind     modernize-deprecated-headers     modernize-loop-convert     modernize-make-shared     modernize-make-unique     modernize-pass-by-value     modernize-raw-string-literal     modernize-redundant-void-arg     modernize-replace-auto-ptr     modernize-replace-random-shuffle     modernize-return-braced-init-list     modernize-shrink-to-fit     modernize-unary-static-assert     modernize-use-auto     modernize-use-bool-literals     modernize-use-default-member-init     modernize-use-emplace     modernize-use-equals-default     modernize-use-equals-delete     modernize-use-noexcept     modernize-use-nullptr     modernize-use-override     modernize-use-transparent-functors     modernize-use-uncaught-exceptions     modernize-use-using ```  ## Uso  ```bash clang-tidy -checks='modernize-use-override' -fix test.cpp -- -std=c++11 ```  ## Referências  * [Extra Clang Tools 10 documentation - CLANG-TIDY](http://clang.llvm.org/extra/clang-tidy/) * [How to use Clang Tidy to automatically correct code](https://github.com/KratosMultiphysics/Kratos/wiki/How-to-use-Clang-Tidy-to-automatically-correct-code) ","title":"Otimizando código com clang-tidy"},{"id":159,"location":"/til/fontconfig.html","tags":["font","fontconfig"],"text":" Após a instalação do LaTeX muitas fontes matemáticas e algumas muito estranhas ficaram sendo listadas no inkscape, libreoffice, ...  É possível especificar quais fontes devem ser listadas pelos programas através do arquivo `~/.config/fontconfig/fonts.conf`.  Para obter o caminho das fontes para remoção use `fc-list | grep -i \"parte do nome da fonte\"`.  ```bash $ fc-list | grep -i \"noto\" /home/geraldo/.fonts/Noto/Noto-Mono-for-Powerline.ttf: Noto Mono for Powerline:style=Regular /usr/share/fonts/truetype/noto/NotoSans-Bold.ttf: Noto Sans:style=Bold /usr/share/fonts/truetype/noto/NotoSans-Italic.ttf: Noto Sans:style=Italic /usr/share/fonts/truetype/noto/NotoSerif-Regular.ttf: Noto Serif:style=Regular /usr/share/fonts/truetype/noto/NotoSerif-Italic.ttf: Noto Serif:style=Italic /usr/share/fonts/truetype/noto/NotoMusic-Regular.ttf: Noto Music:style=Regular /usr/share/fonts/truetype/noto/NotoSerif-BoldItalic.ttf: Noto Serif:style=Bold Italic /usr/share/fonts/truetype/noto/NotoSans-BoldItalic.ttf: Noto Sans:style=Bold Italic /usr/share/fonts/truetype/noto/NotoMono-Regular.ttf: Noto Mono:style=Regular /usr/share/fonts/truetype/noto/NotoSerif-Bold.ttf: Noto Serif:style=Bold /usr/share/fonts/truetype/noto/NotoColorEmoji.ttf: Noto Color Emoji:style=Regular /usr/share/fonts/truetype/noto/NotoSans-Regular.ttf: Noto Sans:style=Regular ```  ## Meu fonts.conf  ```xml <?xml version='1.0'?> <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'> <!--  # Como pesquisar os caminhos das fontes  fc-list | less fc-list | grep -i \"kacs\" fc-match 'Font Name'  # Comando para limpeza do cache  fc-cache -f -v  --> <selectfont>   <rejectfont>     <!-- FONTES QUE NÃO SERÃO LISTADAS MAIS -->     <glob>/usr/share/fonts/truetype/*/GFS*</glob>     <glob>/usr/share/fonts/opentype/ipafont*</glob>     <glob>/usr/share/fonts/truetype/fonts-ukij-uyghur/*</glob>     <glob>/usr/share/fonts/opentype/mathjax/*</glob>     <glob>/usr/share/fonts/opentype/stix*</glob>     <glob>/usr/share/fonts/truetype/arphic/*</glob>     <glob>/usr/share/fonts/truetype/fonts-bpg-georgian/*</glob>     <glob>/usr/share/fonts/truetype/kacst/*</glob>     <glob>/usr/share/fonts/truetype/khmeros/*</glob>     <glob>/usr/share/fonts/truetype/lohit-*</glob>     <glob>/usr/share/fonts/truetype/lyx/*</glob>     <!-- FONTES DO TeX -->     <glob>/usr/share/texlive/*</glob>     <glob>/usr/share/texmf/*</glob>     <!-- REMOVE UM CENTENA DE NOTOS -->     <glob>/usr/share/fonts/truetype/noto/NotoKufi*</glob>     <glob>/usr/share/fonts/truetype/noto/NotoNaskh*</glob>     <glob>/usr/share/fonts/truetype/noto/NotoNastaliq*</glob>     <glob>/usr/share/fonts/truetype/noto/NotoSans*</glob>     <glob>/usr/share/fonts/truetype/noto/NotoSerif*</glob>   </rejectfont>   <acceptfont>     <!-- PERMITE APENAS ALGUMAS NOTOS FILTRADOS ACIMA -->     <glob>/usr/share/fonts/truetype/noto/NotoSans-Regular.ttf</glob>     <glob>/usr/share/fonts/truetype/noto/NotoSans-Bold.ttf</glob>     <glob>/usr/share/fonts/truetype/noto/NotoSans-BoldItalic.ttf</glob>     <glob>/usr/share/fonts/truetype/noto/NotoSans-Italic.ttf</glob>     <glob>/usr/share/fonts/truetype/noto/NotoSerif-Regular.ttf</glob>     <glob>/usr/share/fonts/truetype/noto/NotoSerif-Bold.ttf</glob>     <glob>/usr/share/fonts/truetype/noto/NotoSerif-BoldItalic.ttf</glob>     <glob>/usr/share/fonts/truetype/noto/NotoSerif-Italic.ttf</glob>     <glob>/usr/share/fonts/noto/NotoSans-*</glob>     <glob>/usr/share/fonts/noto/NotoSerif-*</glob>   </acceptfont> </selectfont> ```  ## Referências  * [Reject all fonts from a directory except one with fontconfig](https://unix.stackexchange.com/questions/534284/reject-all-fonts-from-a-directory-except-one-with-fontconfig) * [How to disable unwanted fonts on Linux](https://phoikoi.io/2018/04/27/disable-unwanted-fonts-linux.html)   ","title":"Fontconfig - escondendo fontes"},{"id":160,"location":"/til/vim-substituicao-de-texto-avancada.html","tags":["vim"],"text":" ## Como substituir texto em todos os buffers abertos  ``` :bufdo %s/pattern/replace/ge | update ```  * O `e` server para não gerar erro quando o padrão não for encontrado em algum dos buffers. * o comando `update` salva os buffers modificados.  ## Como substituir texto em um padrão  ``` :arg *.cpp :argadd ../include/*.hpp ... :argdo %s/search/replace/ge | update ```  ## Referências  * [Search and replace in multiple buffers](http://vim.wikia.com/wiki/Search_and_replace_in_multiple_buffers)  ","title":"Substituição de texto avançada no Vim"},{"id":161,"location":"/til/git-limpeza.html","tags":["git"],"text":" Para listar todos os branch locais que já formam mergeados no `dev`:  ``` git branch --merged dev   ajuste-cabecalho-inclui-guarda-de-formatacao   dev   fix-270B   fix-86   fix-gitignore   fix-wakeup   hotfix-import-faltando * test-naming-service   testar-xml-gerado-contra-dtd   teste-funcional   teste-funcional-com-geracao-de-screenshot   update-documentation-from-testlink ```  Nota: O branch marcado com `*` é o branch atual e não deve ser removido se estiver dentro dele.  ``` $ git branch --merged dev | egrep -v \"\\*\"   ajuste-cabecalho-inclui-guarda-de-formatacao   dev   fix-270B   fix-86   fix-gitignore   fix-wakeup   hotfix-import-faltando   testar-xml-gerado-contra-dtd   teste-funcional   teste-funcional-com-geracao-de-screenshot   update-documentation-from-testlink ```  Passando esta lista para um `xargs` fica fácil executar o `git branch -d` para cada um dos branches mergeados.  ``` $ git branch --merged dev | egrep -v \"\\*\" | xargs git branch -d Deleted branch ajuste-cabecalho-inclui-guarda-de-formatacao (was 712f81f5). Deleted branch dev (was d4ab4ffd). Deleted branch fix-270B (was 93b8a3c2). Deleted branch fix-86 (was 65a930a7). Deleted branch fix-gitignore (was 459db686). Deleted branch fix-wakeup (was eda4a648). Deleted branch hotfix-import-faltando (was d17fe5ae). Deleted branch testar-xml-gerado-contra-dtd (was 1d3b0381). Deleted branch teste-funcional (was 0967bcdd). Deleted branch teste-funcional-com-geracao-de-screenshot (was 0967bcdd). Deleted branch update-documentation-from-testlink (was cae58772). ```  ## Referências  * [Git Tip: Deleting Old Local Branches](https://erikaybar.name/git-deleting-old-local-branches) * [Git Tips #5 - Prune branches to keep your repro in good shape](https://www.kevinkuszyk.com/2016/08/17/git-tips-5-prune-branches-to-keep-your-repro-in-good-shape/) * [How can I delete all Git branches which have been merged?](https://stackoverflow.com/questions/6127328/how-can-i-delete-all-git-branches-which-have-been-merged)  ","title":"Git - Limpando o repositório"},{"id":162,"location":"/til/como-programar-para-nxt-no-debian.html","tags":["debian","linux","lego","nxt"],"text":" TBD ","title":"Como programar para Lego NXT no Debian - parte 1"},{"id":163,"location":"/til/deb-empacotamento.html","tags":["debian"],"text":" Tem muito material para assistir aqui  ## Referências  * [TBD](http://eriberto.pro.br/wiki/index.php?title=Algumas_coisas_sobre_Debian...)  ","title":"Empacotamento no Debian"},{"id":164,"location":"/til/docker-acesso-ssh-tunelado-para-localhost.html","tags":["docker","ssh","xgd-open","túnel"],"text":" Para acessar uma interface de administração que só está disponível para localhost remotamente você pode usar uma conexão SSH através de um túnel.   ```bash # Iniciar um tunel para redirecionamento de porta # localhost:porta remoto aponta para localhost:porta local ssh -fNTL localhost:8080:$(ssh nome-ou-ip-do-servidor \\   \"docker inspect --format '{{ .NetworkSettings.IPAddress }}' \\     nome-do-container\"):8080 nome-ou-ip-do-servidor  # Abrir o navegador para acessar através do tunel xdg-open http://localhost:8080  # Terminar o tunel kill $(lsof -t -i @localhost:8080 -sTCP:listen) ```   ## Referências  * [Connecting to the web admin interface on a remote / virtual host via SSH](https://hub.docker.com/_/rethinkdb)  ","title":"Acessar uma aplicação rodando em 'localhost' remoto via túnel SSH"},{"id":165,"location":"/til/vim-webvim.html","tags":["vim"],"text":" TODO: Estudar webvim https://github.com/vim-dist/webvim  ","title":"Webvim"},{"id":166,"location":"/til/sca-corba.html","tags":["sca"],"text":" A bem estabelecida tecnologia **CORBA** permitiu ao **SCA** atingir portabilidade e independência de plataforma.  CORBA foi desenvolvido para sistemas distribuídos consistindo de centenas ou até milhares de nós que podem estar entrando e saindo do domínio a qualquer momento. CORBA foi projetado para trabalhar num ambiente de comunicação assíncrona e fracamente acoplado no tempo.  De outro lado, os software de radio tipicamente são executados num número limitado de nós e até pouco tempo as DSPs e FPGAs não eram capazes de executar CORBA. Os nós são estaticamente definidos dentro do ciclo de funcionamento.  O discurso original do SCA prevaga que habilitaria qualquer aplicação a rodar em qualquer arquitetura com uma portabilidade extrema. Executaar uma aplicação para realizar uma impressão em batch é bem diferente de executar uma aplicação que precisa multiplexar várias mensagens em um frame de 40ms do TDMA.     ## Referências  * Livro *Software Defined Radio: The Software Communication Architecture*  ","title":"SCA e CORBA"},{"id":167,"location":"/til/vim-single-instance.html","tags":["vim"],"text":" * <http://unix.stackexchange.com/questions/23162/how-to-run-gvim-in-a-single-instance> * <http://www.phacks.net/open-multiple-text-files-as-tabs-gvim-kde4/>   ","title":"VIM single instance"},{"id":168,"location":"/til/hugo-adsense.html","tags":["adsense","hugo"],"text":" ## Referências  * [Adding Google Analytics and AdSense to a Hugo website](https://bash-prompt.net/guides/custom-html-jugo/)  ","title":"Adicionando adsense no hugo"},{"id":169,"location":"/til/nginx-cgi.html","tags":["nginx","cgi","debian","linux"],"text":" apt-get install fcgiwrap  Fcgiwrap is another CGI wrapper that should work also for complex CGI scripts and - like Simple CGI - can be used for shared hosting environments because it allows each vhost to use its own cgi-bin directory.  After the installation, the fcgiwrap daemon should already be started; its socket is /var/run/fcgiwrap.socket. If it is not running, you can use the /etc/init.d/fcgiwrap script to start it.  Now open your vhost configuration file...  vi /etc/nginx/sites-enabled/www.example.com.vhost ... and add a location /cgi-bin {} section to the server {} container:  server { [...]    location /cgi-bin/ {      # Disable gzip (it makes scripts feel slower since they have to complete      # before getting gzipped)      gzip off;      # Set the root to /usr/lib (inside this location this means that we are      # giving access to the files under /usr/lib/cgi-bin)      root  /var/www/www.example.com;      # Fastcgi socket      fastcgi_pass  unix:/var/run/fcgiwrap.socket;      # Fastcgi parameters, include the standard ones      include /etc/nginx/fastcgi_params;      # Adjust non standard parameters (SCRIPT_FILENAME)      fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;    } [...] } Reload nginx:  /etc/init.d/nginx reload Next we create our cgi-bin directory - /var/www/www.example.com/cgi-bin because we defined root /var/www/www.example.com; in the location /cgi-bin {} container:  mkdir /var/www/www.example.com/cgi-bin Now we place our CGI scripts in it and make them executable. For testing purposes I will create a small Hello World Perl script (instead of hello_world.cgi you can also use the extension .pl -> hello_world.pl):  vi /var/www/www.example.com/cgi-bin/hello_world.cgi #!/usr/bin/perl -w      # Tell perl to send a html header.      # So your browser gets the output      # rather then <stdout>(command line      # on the server.) print \"Content-type: text/html\\n\\n\";      # print your basic html tags.      # and the content of them. print \"<html><head><title>Hello World!! </title></head>\\n\"; print \"<body><h1>Hello world</h1></body></html>\\n\"; chmod 755 /var/www/www.example.com/cgi-bin/hello_world.cgi Open a browser and test the script:  http://www.example.com/cgi-bin/hello_world.cgi If all goes well, you should get the following output:  https://www.howtoforge.com/images/serving_cgi_scripts_with_nginx_debian_squeeze_ubuntu_11.04/1.png  ## Referências  * [Serving CGI Scripts With Nginx On Debian Squeeze/Ubuntu 11.04 - Page 3] (https://www.howtoforge.com/serving-cgi-scripts-with-nginx-on-debian-squeeze-ubuntu-11.04-p3)  ","title":"Servindo CGI com NGINX no Debian"},{"id":170,"location":"/til/nnn.html","tags":["nnn"],"text":" ## Referências  * [nnn – Fast, Free and Friendly Terminal File Browser for Linux](https://www.fossmint.com/nnn-linux-terminal-file-browser/)  ","title":"Gerenciador de arquivos nnn"},{"id":171,"location":"/til/vim-makeprg.html","tags":["vim","makepkg","metatrader"],"text":" ## Configurando comando com espaços  ```vim set makeprg=cd\\ cmt\\ &&\\ make \" ou let &makeprg = \"cd cmt && make\" ```  ## Baseado no tipo de arquivo  ```vim autocmd Filetype foo setlocal makeprg=/bin/foo_compiler % ```  ## Metatrader  ```vim \" Vim compiler file \" Compiler:     MQL4 \" Maintainer: Me \" Last Change:  2017 Apr 20  if exists(\"current_compiler\")   finish endif let current_compiler = \"mql4\"  CompilerSet makeprg=mkmql4\\ %  let &errorformat='%f(%l\\,%c) : %m'  let &cpo = s:cpo_save unlet s:cpo_save  \" vim: sw=2 ts=2 et ```  Onde o comando mkmql4 é  ```bash path=\"Z:${1//\\//\\\\}\" wine /mt4/metaeditor.exe /compile: $path /log:\"Z:\\mt4\\errors.log\" ```  ## Referências  * [Vim makeprg with multiple commands (cd + make)](https://superuser.com/questions/839516/vim-makeprg-with-multiple-commands-cd-make) * [How to set makeprg based on filetype in Vim](https://codeyarns.com/2015/05/04/how-to-set-makeprg-based-on-filetype-in-vim/) * [Does anyone use Vim for mql development?](https://www.mql5.com/ru/forum/191819) ","title":"vim makepkg"},{"id":172,"location":"/til/testlink.html","tags":["testlink"],"text":" ## Referências  * [TestLink Tutorial: A Layman’s Guide To TestLink Test Management Tool (Tutorial #1)](https://www.softwaretestinghelp.com/testlink-tutorial-1/) * [How To Manage Requirements, Execute Test Cases And Generate Reports Using TestLink – Tutorial #2](https://www.softwaretestinghelp.com/testlink-tutorial-2/) * [How To Update TestLink Test Case Execution Status Remotely Through Selenium – Tutorial #3](https://www.softwaretestinghelp.com/testlink-tutorial-3/) * [TestLink Tutorial 4 – Test Metrics, Keyword Management, Custom Fields And Test Report Charts](https://www.softwaretestinghelp.com/testlink-tutorial-4/) * [Integração Selenium e Testlink](http://sembugs.blogspot.com/2010/10/integracao-selenium-e-testlink.html) ","title":"Testlink"},{"id":173,"location":"/til/figma-xfce-alt-disable.html","tags":["xfce","figma"],"text":" ## Introdução  O Figma utiliza a tecla alt para copiar elementos e o xfce4 também utiliza a mesma tecla para mover janelas.  ### Alterando comportamento do alt pela interface gráfica  Para liberar a tecla **Alt** para uso pelo **Figma** acesse o painel de **Configurações** e depois vá em **Ajustes do gerenciador de janelas**:  ![Painel de Configurações](/til/xfce-disable-alt-01.webp)  Na aba **Acessibilidade** escolha **None** para a tecla de captura de janelas:  ![Escolher none para tecla de captura.](/til/xfce-disable-alt-02.webp)  ### Alterando comportamento do alt pelo terminal  ```bash xfconf-query -c xfwm4 -p /general/easy_click -s none ```  Para retornar o **Alt** use:  ```bash xfconf-query -c xfwm4 -p /general/easy_click -s Alt ```  ## Referências  * [How do I disable window move with alt + left mouse button in Xubuntu?](https://askubuntu.com/questions/270032/how-do-i-disable-window-move-with-alt-left-mouse-button-in-xubuntu#:~:text=1%20Answer&text=If%20you%20go%20to%20the,be%20just%20what%20you%20want.) ","title":"Liberando o alt do xfce para o figma"},{"id":174,"location":"/til/wget-ignorar-certificado-invalido.html","tags":["wget","bash"],"text":" ## Exemplo do problema  ```bash wget https://softwarepublico.gov.br/social/articles/0000/5871/Cortex_-_Anatomia_de_um_Framework_-_v1_1.pdf --2020-10-06 11:55:36--  https://softwarepublico.gov.br/social/articles/0000/5871/Cortex_-_Anatomia_de_um_Framework_-_v1_1.pdf Resolvendo softwarepublico.gov.br (softwarepublico.gov.br)... 189.9.151.64 Conectando-se a softwarepublico.gov.br (softwarepublico.gov.br)|189.9.151.64|:443... conectado. ERRO: O certificado de “softwarepublico.gov.br” não é confiável. ERRO: O certificado de “softwarepublico.gov.br” expirou. O certificado expirou ```  ## Solução  Basta acrescentar a opção `--no-check-certificate`:  ```bash wget --no-check-certificate https://softwarepublico.gov.br/social/articles/0000/5871/Cortex_-_Anatomia_de_um_Framework_-_v1_1.pdf  --2020-10-06 11:57:35--  https://softwarepublico.gov.br/social/articles/0000/5871/Cortex_-_Anatomia_de_um_Framework_-_v1_1.pdf Resolvendo softwarepublico.gov.br (softwarepublico.gov.br)... 189.9.151.64 Conectando-se a softwarepublico.gov.br (softwarepublico.gov.br)|189.9.151.64|:443... conectado. AVISO: O certificado de “softwarepublico.gov.br” não é confiável. AVISO: O certificado de “softwarepublico.gov.br” expirou. O certificado expirou A requisição HTTP foi enviada, aguardando resposta... 200 OK Tamanho: 953355 (931K) [application/pdf] Salvando em: “Cortex_-_Anatomia_de_um_Framework_-_v1_1.pdf”  Cortex_-_Anatomia_de_um_Framework_-_v1_1.pd 100%[================================================>] 931,01K   279KB/s    em 3,3s  2020-10-06 11:57:40 (279 KB/s) - “Cortex_-_Anatomia_de_um_Framework_-_v1_1.pdf” salvo [953355/953355] ```  ## Referências  * [Skip Certificate Checks with Wget](https://www.jamescoyle.net/how-to/2510-skip-certificate-checks-with-wget)  ","title":"Download com certificado inválido no wget"},{"id":175,"location":"/til/zeromq.html","tags":["zeromq"],"text":" * orientado a transporte de bytes (mensagens) * inspirado no sistema de atores do erlang para trocar mensagens e evitar problemas comuns na programação concorrente * resolve o problema de carregar bytes de um lugar para outro * não é apenas um modelo de socket crú * oferece alguns modelos de programação em cima de uma API baseada em socket   * publish/subscribe   * push/pull   * dealer-router * comunicação entre threads * suporta IPC * suporta TCP * suporta multicast UDP * pattern match * modelo de transporte eficiente * escrito em C++ com API no estilo C * push é um dos modelos mais rápidos, mas é o que demanda mais controle * push usa round-robin para distribuir   * um publisher pode fazer bind com mais de um protocolo a mesmo tempo, assim um único send envia para dois ou mais protocolos   * `publisher_socker.bind(\"tcp://*:60001\");`   * `publisher_socker.bind(\"ipc://pub.ipc\");` * prefira usar um socket só para enviar e outro só para receber * defina afinidades para cada socket * incluir explicação sobre ZMQ_ROUTER_HANDOVER no tempo 40:27  ### Socket types  * **Request/Reply pattern**: usado para enviar uma requisição e receber posteriormente a resposta para cada mensagem enviada. * **Publish/Subscribe pattern**: usado para distribuir dados de um único processo (publisher) para múltiplos destinatários (subscribers). * **Pipeline Pattern**: Usado para distribuir dados entre nós conectados * **Exclusive Pair Pattern**: Usado para conectar dois nós  * REQ: request client * REP: replay server  * PUSH: server * PULL: client (worker)  * DEALER: client * ROUTER: server  ## Tipo de transporte  * In-Process (INPROC): Local (in-process) communication transport. * Inter-Process (IPC): Local (inter-process) communication transport. * TCP: Unicast communication transport using TCP. * PGM: Multicast communication transport using PGM.  ## Veja também  * [nanomsg]({{< ref \"nanomsg\" >}} \"nanomsg\") * [sbe]({{< ref \"sbe\" >}} \"Simple Binary Encoding\")  ## nnd  ## SBE simple binary encoding  * https://github.com/real-logic/simple-binary-encoding * muito usado no mercado financeiro (stock exchanges) * protocolo para mensagens de negócio * Martin Tompson (especialista em desempenho dem JVM)   ## MessagePack  * serializador de alto desempenho   ## Referências  * [Mensagens distribuídas com alto desempenho: ZeroMQ e aplicações financeiras em larga escala](https://www.infoq.com/br/presentations/mensagens-distribuidas-com-alto-desempenho-zeromq-e-aplicacoes-financeiras/) * [Código de exemplo da palestra do Fabio Galuppo](https://github.com/fabiogaluppo/samples/tree/master/events/qconsp2017/code) * [Video: ZeroMQ (ØMQ) Crash Course](https://youtu.be/UrwtQfSbrOs) * [A tour of CPPZMQ, the C++ bindings to libzmq](https://brettviren.github.io/cppzmq-tour/) * [Using ZeroMQ Security (Part 1)](https://jaxenter.com/using-zeromq-security-part-1-119346.html) * [How To Work with the ZeroMQ Messaging Library](https://www.digitalocean.com/community/tutorials/how-to-work-with-the-zeromq-messaging-library) ","title":"ZeroMQ"},{"id":176,"location":"/til/git-auto-formatart-antes-do-commit.html","tags":["git","gitattributes","format"],"text":" Escrever um arquivo `.gitattributes` contendo:  ```text *.java filter=clang-format-java ```  Acrescentar os operações `clean` e `smudge`  ```bash git config --global filter.clang-format-java.clean 'clang-format -assume-filename=test.java' git config --global filter.clang-format-java.smudge cat ```  * `clean` ocorre quando os arquivos são enviados para o `stage` * `smudge` quando os arquivos são enviados para o workspace (checkout)  Quando os arquivos são enviados para *stage* (`git add`) são passados via *stdin* então não dá para saber qual o tipo do arquivo. O uso da opção `-assume-filename=test.java` faz com que o `clang-format` saiba como proceder.   ## Referências  * [clang-format as a git filter](https://ngeor.com/2019/01/27/clang-format-git-filter.html)  ","title":"Formatando o código automaticamente antes do commit"},{"id":177,"location":"/til/lxc.html","tags":["lxc","linux","container"],"text":" ## How to install LXD  ```bash apt install snap snap install lxd ```  http://www.panticz.de/lxd  ## Features  * device pass-through capabilities     * assign hardware directly to the lxc containers * network and storage management capabilities     * storage pooling * snapshot of running container * live migration of running containers between hosts * LXD can also integrate with cloud platform, such OpenStack * improved control over compute resources * clustering  ","title":"LXC - Linux Container"},{"id":178,"location":"/til/rabbitmq.html","tags":["rabbitmq"],"text":" ## Referências  * [Vídeo RabbitMQ in 5 Minutes](https://www.youtube.com/watch?v=deG25y_r6OY) ","title":"RabbitMQ"},{"id":179,"location":"/til/hugo-formatacao.html","tags":["hugo"],"text":"  {{% note %}} Aqui **vai** uma nota com título padrão. {{% /note %}}   {{% note title=\"Título da nota\" %}} Aqui **vai** uma nota com título personalizado. {{% /note %}}   {{% alert %}} Aqui **vai** um alerta com título padrão. {{% /alert %}}  {{% alert title=\"Título do alerta\" %}} Aqui **vai** um alerta com título personalizado. {{% /alert %}}  {{% warning %}} Aqui **vai** um warning com título padrão. {{% /warning %}}  {{% warning title=\"Título do aviso\" %}} Aqui **vai** um warning com título personalizado. {{% /warning %}}   ## Referências   ","title":"Hugo --- formatação"},{"id":180,"location":"/til/cvs-binary.html","tags":["cvs"],"text":" 1. Obter uma cópia do `CVSROOT`  ```bash cvs co CVSROOT ```  2. Editar o `CVSROOT/cvswrappers` para indicar as extensões binárias.  ```bash *.GIF   -k 'b' -m 'COPY' *.JPG   -k 'b' -m 'COPY' *.avi   -k 'b' -m 'COPY' *.bin   -k 'b' -m 'COPY' ```  3. Comitar as mudanças  ```bash cvs commit -m\"added common binary files\" ```  ## Referências  * [Handling Binary Files](https://durak.org/cvswebsites/howto-cvs/node38.html) ","title":"CVS - controlando arquivos binários"},{"id":181,"location":"/til/boleto.html","tags":["draft"],"text":" ## Boletos sem registro  * o boleto precisa estar registrado na Instituição Financeira para permitir a consulta e validação na base centralizada no momento do pagamento * os boletos que não forem encontrados na base centralizada por falta de registro no banco terão seu pagamento recusado na rede bancária. * os boletos que já foram emitidos sem registro podem ser registrados, basta enviar as informações impressas ao banco por arquivo remessa. * o CPF/CNPJ do pagador agora é obrigatório  ## CNAB  CNAB é uma abreviação para Centro Nacional de Automação Bancária, isto é, uma interface para troca de informações entre o emitente de boleto e o banco.  ## Referências  * [Itau - Boletos sem registro serão aceitos?](https://www.itau.com.br/atendimento-itau/para-empresas/cobranca/nova-plataforma-de-cobranca/boletos-sem-registro-serao-aceitos.html) * [CNAB 240 E CNAB 400: ENTENDA OS PADRÕES DE REMESSA E DE RETORNO DOS BOLETOS](https://blog.tecnospeed.com.br/padroes-de-remessa-e-de-retorno/)  ","title":"Boleto"},{"id":182,"location":"/til/widgets.html","tags":["academic","hugo"],"text":" Homepage widgets display as sections on the homepage. They can be enabled/disabled and configured as desired. Academic has the following widgets available to use:  - About/biography - Selected publications - Recent publications - Recent news/blog posts - Projects - Selected talks - Recent talks - Contact - Tag cloud - Custom widget (demonstrated with the *teaching* example)  The example site that you copied to create your site uses all the different types of widget (except talks), so you can generally just delete the widgets you don't need and customize the parameters of the widgets you wish to keep.  The parameters for each widget vary. They can be found in the preamble/frontmatter (between the pair of `---`) for each widget installed in the `content/home/` folder.  GLSR criei um shortcode note  {{% alert note %}} By default, publications will be displayed in a simple list. If you prefer a more detailed list with abstract and image, you can enable the detailed publication list on the homepage by setting `list_format = 2` in `content/home/publications.md`. {{% /alert %}}  ## Add a widget to the homepage  To add a widget manually, copy the relevant widget from `themes/academic/exampleSite/content/home/` to your `content/home/` folder.   Widget identifiers are set to their respective filenames, so a `content/home/about.md` widget can be linked from the navigation bar by setting the relevant URL as `\"#about\"` in `config.toml`.  This means that if you want to use multiple instances of a widget, each widget will be assigned a unique ID based on the filename that you set. You can then use that ID for linking, like in the above example.  ## Using the custom widget  You can use the custom widget to create your own home page sections.  Simply duplicate (copy/paste) and rename the example *teaching* file at `content/home/teaching.md`. Then edit the section title, weight (refer to *Ordering sections* below), and content as desired.  You may also wish to add a navigation link to the top of the page that points to the new section. This can be achieved by adding something similar to the following lines to your `config.toml`, where the URL will consist of the first title word in lowercase:      [[menu.main]]         name = \"Research\"         url = \"#research\"         weight = 10  ## Remove a widget from the homepage  If you do not require a particular widget, you can simply delete any associated files from the `content/home/` folder.  To remove a navigation link from the top of the page, remove the associated `[[menu.main]]` entry in `config.toml`.  ## Ordering widgets  The order that the homepage widgets are displayed in is defined by the `weight` parameter in each of the files in the `content/home/` directory. The widgets are displayed in ascending order of their `weight`, so you can simply edit the `weight` parameters as desired. ","title":"Customizing the homepage with widgets"},{"id":183,"location":"/til/vim-fast-search-vim.html","tags":["vim"],"text":" Projects can be searched for specific text within Vim:  ``` :grep sometext ```  Can we `grep` faster?  ## Override to use The Silver Searcher  `grep` is a built-in command of Vim. By default, it will use the system's `grep` command. We can overwrite it to use [The Silver Searcher](https://github.com/ggreer/the_silver_searcher)'s `ag` command by putting this in [our `~/.vimrc`](https://github.com/statusok/statusok/blob/master/dotfiles/editor/vimrc):  ```vim \" The Silver Searcher if executable('ag')   \" Use ag over grep   set grepprg=ag\\ --nogroup\\ --nocolor    \" Use ag in CtrlP for listing files. Lightning fast and respects .gitignore   let g:ctrlp_user_command = 'ag %s -l --nocolor -g \"\"'    \" ag is fast enough that CtrlP doesn't need to cache   let g:ctrlp_use_caching = 0 endif ```  ## Search for the word under the cursor  This searches for the text under the cursor and shows the results in a \"quickfix\" window:  ```vim \" bind K to grep word under cursor nnoremap K :grep! \"\\b<C-R><C-W>\\b\"<CR>:cw<CR> ```  It looks like this when `K` is typed with the cursor over `SubscriptionMailer`:  {{< img src=\"images/quickfix-under-cursor.webp\" alt=\"''\" >}}  Cursor over each search result, hit `Enter`, and the file will be opened.  ## Using `ag` arguments  This defines a new command `Ag` to search for the provided text and open a \"quickfix\" window:  ```vim \" bind \\ (backward slash) to grep shortcut command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw! ```  Map it to any character, such as `\\`:  ```vim nnoremap \\ :Ag<SPACE> ```  When `\\` is pressed, Vim waits for input:  ```vim :Ag ```  Standard `ag` arguments may be passed in at this point:  ```vim :Ag -i Stripe app/models ```  Hitting `Enter` results in:  {{< img src=\"images/quickfix-custom-command.webp\" alt=\"''\" >}}  ","title":"Fast Search in Vim"},{"id":184,"location":"/til/app-djinni.html","tags":["C++","cpp","Djinni"],"text":" ## Referências  * [Bindings Languages Cross-Platform](https://www.dropbox.com/s/k1b214bsqgpx4e6/Djinni%20Talk%20-%20CppCon%202015.pdf?dl=0) * [Desenvolvendo Aplicativos Mobile com C++ para Android e iOS](https://www.udemy.com/course/desenvolvendo-aplicativos-mobile-com-cpp-para-android-e-ios/) ","title":"Desenvolvendo em C++ para mobile com Djinni"},{"id":185,"location":"/til/npm-check-updates.html","tags":["npm","npm-check-updates"],"text":" ```bash npm install -g npm-check-updates ```  ```bash ncu -u ```  ```bash npm install ``` ","title":"Update all the node.js dependencies to their last version"},{"id":186,"location":"/til/salario-autonomo.html","tags":["salary"],"text":" ## Engenharia  * custo fixo 3500 * salário mínimo 1.039 * min 8,5 salários mínimos para jornada de 8h (CREA) 8831,50 * acrescentar 70% para riscos, FGTS, ... 20.963,55 * 160h mensais x 75% de taxa de ocupação = 120h * valor da hora sem imposto ~ 174.69 * imposto 18% + 3% ISS = 21% * valor da hora com imposto ~ 125,11/(1-0.21) = 221.12 * 5 horas para orçamento * 16 horas para cálculos * 16 horas para detalhamento * 10 horas visitas * ...   ## Referências  * [QUANTO COBRAR POR SERVIÇOS DE ENGENHARIA?](http://calculistadeaco.com.br/quanto-cobrar-por-servicos-de-engenharia/)  ","title":"Salário equivalente para autônomo"},{"id":187,"location":"/til/kafka-intro.html","tags":["kafka"],"text":" ## Introdução  O Apache Kafka é uma **Plataforma distribuída de streaming**.  De forma distribuída ele consegue processar uma grande quantidade de dados entregar em tempo real aos seus consumidores.  Características:  * plataforma * banco de dados * extremamente rápido e baixíssima latência * utiliza o disco ao invés da memória para processar os dados * não é apenas um sistema tradicional de mensageiria como o RabbitMQ * publish & subscriber * processamento em tempo real * armazenamento de streams em um modo seguro, distribuído e replicável * producer * consumer * topic - onde os dados são transmitidos  ## Topic  * é um stream de dados que atua com um banco de dados * um tópico possui diversas partições * diversos consumidores podem ler de modo independente, cada um num offset diferente  ## Cluster  * conjunto de brokers (intermediários) * cada broker é um server * cada broker é responsável por armazenar os dados de uma partição * replication factory  ## Producer  * envia mensagem para os brokers   ## Referências  * [Apache Kafka: Trabalhando com Mensageria e Real Time](https://www.youtube.com/watch?v=LX19wk2B5Ak)  ","title":"Introdução ao Apache Kafka"},{"id":188,"location":"/til/eclipse-emf-xml.html","tags":["eclipse","EMF","XML"],"text":" EMF é uma API Java que permite definir modelos, criar, salvar e carregar suas instâncias em vários formatos (EMF, UML, XSD).  A principal diferença para o Java é que os modelos podem ser definidos tanto estaticamente quanto dinamicamente em tempo de execução.  EMF suporta múltiplos formatos para o modelo e para input e output das intâncias do modelo.  EMF é uma API do tipo reflection e pode ser facilmente utilizada para gerar editores para seus modelos.  O meta-modelo para definição do modelo consiste dos seguintes elementos:  * `EClass` * `EAttribute` * `EOperation` * etc  Estes elementos são agrupados em `EPackages` identificados unicamente por uma URI de namespace que pode ser conhecida através do XSD.  Instâncias do modelo são compostas de `EObjects` (e classes de suporte como `EList`).  Cada um destes elementos é representado por uma classe Java.  ## Configuração do EMF e namespace  Existem três opções:  * namespace com prefixo explícito * namespace sem prefixo (declarado como padrão) * sem namespace  ### Elemento raiz do XML no namespace com prefixo (`xmlns:ns=”…”>`)  ```xml <myRootElement xmlns:ns=\"http://example.com/myXml\" someAttribute=\"value\">    <myAnotherElement anotherAttribute=\"value 2\"/> <myRootElement> ```  Use a API `Resource.save(...)`  ### Elemento raiz do XML no namespace padrão (`<elm xmlns=”…”>`)  ```xml <myRootElement xmlns=\"http://example.com/myXml\" someAttribute=\"value\">    <myAnotherElement anotherAttribute=\"value 2\"/> </myRootElement> ```  Veja esta [dica](http://www.eclipse.org/forums/index.php?t=tree&th=129347&S=4a71b44b5931c4dbe7bac446b6ee10c6)  ### Nenhuma informação sobre namespace no the XML (`<elm>`)  Este é o pior caso pois o XML de entrada não se descreve suficientemente e você precisa conhecer ou chutar o `EPackage` correto para realizar o parser.  Certamente seria melhor se você tivesse informação do namespace. Mas algumas vezes você não terá como influenciar a entrada a ser lida com o EMF.  ```xml <myRootElement someAttribute=\"value\">    <myAnotherElement anotherAttribute=\"value 2\"/> </myRootElement> ```  Se o elemento raiz do XML não possuir prefixo nem namespace então o EMF não será capaz de realizar o match com o `EPackage` e consequentemente não será capaz de carregar apropriadamente a menos que você registre um `EPackage` alvo com o `ResourceSet` global com uma URI nula.  ```java for (EPackage ePackage: eCorePackages) { \tresourceSet.getPackageRegistry().put(null, ePackage); \t// alternatively could call EPackage.Registry.INSTANCE.put(..) } ```  De acordo com a [dica do forum](https://www.eclipse.org/forums/index.php/mv/msg/128831/#msg_397577) você não pode injetar a declaração faltante do XMLNS no XML, mas pode especificar `null` para o namespace e o pacote específico para mapear usando o pacote de registro do `ResourceSet`.  ## Notas gerais sobre salvar e carregar XML pelo EMF  Quando carregar do XML ou salvar para o XML você precisa passar algumas das seguintes opções para os métodos `save` ou `load`:  ```java Map<String, Object> options = new HashMap<String, Object>(); options.put(XMLResource.OPTION_EXTENDED_META_DATA, Boolean.TRUE); // options.put(XMLResource.OPTION_RECORD_UNKNOWN_FEATURE, Boolean.TRUE); options.put(XMLResource.OPTION_ENCODING, \"UTF-8\"); ```  * `OPTION_EXTENDED_META_DATA` - cria elementos aninhados em vez de atributos. Não estou certo se isto influencia no carregamento * `OPTION_RECORD_UNKNOWN_FEATURE` - quando um elemento desconhecido for encontrado no carregamento não será lançada uma exceção de `unknown feature` e o campo será apenas pulado * `OPTION_ENCODING` – é o encoding para geração do XML, onde o padrão é ASCII. Não estou certo se isto influencia no carregamento  Ver capítulo 13 do livro   ## Referências  * [EMF: Reading a Model from XML - How to Correctly Declare the Namespace](https://dzone.com/articles/emf-reading-model-xml-%E2%80%93-how) * [EMF: Reading a model from XML - how to correctly declare its namespace - variants](https://blog.jakubholy.net/2011/01/03/emf-reading-a-model-from-xml-how-to-correctly-delcare-a-namespace-variants/) ","title":"Eclipse Modeling Framework - Lendo e escrevendo XML"},{"id":189,"location":"/til/git-como-limpar-submodulos.html","tags":["git"],"text":" ```bash git submodule foreach --recursive git clean -xfd ```  Para dar reset no repositório e seus submódulos use:  ```bash git clean -xfd git submodule foreach --recursive git clean -xfd git reset --hard git submodule foreach --recursive git reset --hard git submodule update --init --recursive ```  Dependendo da configuração pode ser necessário incluir mais um `-f`  > If the Git configuration variable `clean.requireForce` is not set to false, `git clean` will refuse to delete files or directories unless given `-f`, `-n` or `-i`. Git will refuse to delete directories with `.git` sub directory or file unless a second `-f` is given. > Use force twice to clean directorise with `.git` subdirectories: `git clean -xfdf`. I had some tangling submodules that would not get deleted with just `git clean -xfd`.  ## Referências  * [Cleans and resets a git repo and its submodules](https://gist.github.com/nicktoumpelis/11214362)   ","title":"git - como limpar submódulos"},{"id":190,"location":"/til/vim-formatar-xml.html","tags":["vim"],"text":" ``` :'<,'>!xmllint --format - ```  ","title":"Formatar XML no vim"},{"id":191,"location":"/til/virtualbox.html","tags":["virtualbox","debian","linux"],"text":" O VirtualBox foi removido dos repositórios Debian Buster no dia 15/04/2019.  ```bash # Passo um atualizar o seu sistema apt update apt upgrade apt autoremove  echo \"deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian bionic contrib\" \\   > /etc/apt/sources.list.d/virtualbox.list  wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- \\   | apt-key add -  wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- \\   | apt-key add -  apt update  # Para listar as versões disponíveis apt search virtualbox-  apt install dkms linux-headers-$(uname -r) apt install virtualbox-6.1  cd ~/ wget https://download.virtualbox.org/virtualbox/6.1.2/Oracle_VM_VirtualBox_Extension_Pack-6.1.2.vbox-extpack  # uma vez baixado clique no arquivo (ver procedimento no link 2) ```  ## Referências  * [VirtualBox no Debian 10 Buster](https://linuxdicasesuporte.blogspot.com/2019/04/virtualbox-no-debian-10-buster.html) * [How To Install VirtualBox 6 on Debian 10 (Buster)](https://computingforgeeks.com/install-virtualbox-ubuntu-debian/) ","title":"Instalando virtualbox no debian 10"},{"id":192,"location":"/til/fzf.html","tags":["bash","fzf"],"text":" ## Escolhendo um item  ```bash echo -e \"Um\\nDois\\nTrês\" | fzf ```  ![Exemplo 01](img/fzf-01.webp)   ## Formatação avançada  ```bash  format_info() {   echo xxxx }  # para disponibilizar função para subshell export -f format_info  local opts='--reverse -e -i --tiebreak=begin --prompt=: ' local pwin='--preview-window=down:%40' fzf $opts $pwin --preview='format_info \"$(file {})\"' <<< $(dir_contents $1) ```   ## Referências  * [Além do Bash - #23 - Opções do fzf e preview de informações dos arquivos](https://www.youtube.com/watch?v=dfGQYx-4H1c) * [Vim universe. fzf - command line fuzzy finder](https://youtu.be/qgG5Jhi_Els)  ","title":"Fuzzy finder"},{"id":193,"location":"/til/nanomsg.html","tags":["zeromq","nanomsg"],"text":" ## nanomsg  * olhar nanomsg https://nanomsg.org/gettingstarted/pipeline.html nanomsg   library is MIT-licensed. What it means is that, unlike with ZeroMQ, you can   modify the source code and re-release it under a different license, as   a proprietary product, etc. More reasoning about the licensing can be found   here.  https://staysail.github.io/nng_presentation/nng_presentation.html SCALABILITY PROTOCOLS (nanomsg, nng, mangos, and other critters) February 13, 2018 Importar esta apresentação  ","title":"nanomsg"},{"id":194,"location":"/certificate/1989-09-29_SantaMargarida_Datilografia.html","tags":["typewriting"],"text":" Datilografia ","title":"Datilografia"},{"id":195,"location":"/certificate/1992-12-30_SENAI_Curso_de_Aprendizagem_Industrial.html","tags":["mechanic"],"text":" ``` \f ```  ","title":"Curso de Aprendizagem Industrial"},{"id":196,"location":"/certificate/1997-02-01_IESC_Tecnólogo_em_Mecânica_Modalidade_Projetos.html","tags":["mechanic"],"text":" ``` Nome: GERALDO LUIS DA SILVA RIBEIRO Instituição: FIC FACULDADES INTEGRADAS DE CRUZEIRO Curso: CST MECANICA MODALIDADE PROJETOS Data de Registro: 02/03/1998 Status: Diploma Registrado ```  https://www.sg.unicamp.br/rd/consultar-situacao-de-diplomas?nome=GERALDO+LUIS+DA+SILVA+RIBEIRO ","title":"IESC Tecnólogo em Mecânica Modalidade Projetos"},{"id":197,"location":"/certificate/1997-09-15_INPE_5Ss_uma_opção_para_o_desenvolvimento_profissional.html","tags":["soft-skill"],"text":" ``` \f ```  ","title":"INPE 5Ss uma opção para o desenvolvimento profissional"},{"id":198,"location":"/certificate/1998-02-09_Curso_de_Operadores_de_Caldeira.html","tags":["combustion"],"text":" ```  ```  ","title":"Curso de Operadores de Caldeira"},{"id":199,"location":"/certificate/2001-11-05_INPE_Curso_de_Combustão_I_INPE.html","tags":["combustion"],"text":" ``` \f ```  ","title":"INPE Curso de Combustão I INPE"},{"id":200,"location":"/certificate/2002-10-15_ENCIT_Combustão_Básica.html","tags":["combustion"],"text":" ```  ```  ","title":"ENCIT Combustão Básica"},{"id":201,"location":"/certificate/2005-02-21_HOFR_Requisitos_Gerais_para_Competência_de_Laboratórios_de_Ensaio_e_Calibração_ABNT_ISO_IEC_17025.html","tags":["iso","measure"],"text":" ```  ```  ","title":"Requisitos Gerais para Competência de Laboratórios de Ensaio e Calibração ABNT ISO IEC 17025"},{"id":202,"location":"/certificate/2005-03-01_HOFR_Ciclo_PDCA_e_as_Ferramentas_para_Melhoria_da_Qualidade.html","tags":["quality","pdca"],"text":" ```  ```  ","title":"HOFR Ciclo PDCA e as Ferramentas para Melhoria da Qualidade"},{"id":203,"location":"/certificate/2005-06-25_microsoft_Supporting_Users_Running_the_Microsoft_Windows_XP_Operating_System.html","tags":["microsoft","windows"],"text":" ```  ```  ","title":"Supporting Users Running the Microsoft Windows XP Operating System"},{"id":204,"location":"/certificate/2005-07-01_microsoft_Supporting_users_running_applications_on_a_Microsoft_Windows_XP_Operation_System.html","tags":["microsoft","windows"],"text":" ```  ```  ","title":"Supporting users running applications on a Microsoft Windows XP Operation System"},{"id":205,"location":"/certificate/2005-12-02_4Linux_Pen-Test_Analise_e_Testes_de_Vulnerabilidades_em_Redes_Corporativas.html","tags":["security","pentest"],"text":" ```  ```  ","title":"Pen Test Analise e Testes de Vulnerabilidades em Redes Corporativas"},{"id":206,"location":"/certificate/2006-05-04_INPE_LIT_Cálculo_de_Incerteza_de_Medições.html","tags":["measurement","uncertainty"],"text":" ``` \f ```  ","title":"Cálculo de Incerteza de Medições"},{"id":207,"location":"/certificate/2006-11-28_REMESP_Cálculo_de_incerteza_de_Medições.html","tags":["measurement","uncertainty"],"text":" ``` \f ```  ","title":"Cálculo de incerteza de Medições"},{"id":208,"location":"/certificate/2007-05-13_LPI_LPIC-1.html","tags":["linux"],"text":" ```  ```  ","title":"LPIC 1"},{"id":209,"location":"/certificate/2008-08-08_ESSS_Técnicas_de_Otimização_de_Projetos_de_Engenharia_usando_o_Software_modeFrontier.html","tags":["optimization","modefrontier"],"text":" ```  ```  ","title":"Técnicas de Otimização de Projetos de Engenharia usando o Software modeFrontier"},{"id":210,"location":"/certificate/2008-09-06_TempoReal_Nagios.html","tags":["nagios"],"text":" ```  ```  ","title":"Nagios"},{"id":211,"location":"/certificate/2008-10-31_PLM_Introduction_to_Pro_Engineer_Wildfire_4.0.html","tags":["ptc"],"text":" ```  ```  ","title":"PLM Introduction to Pro Engineer Wildfire 4.0"},{"id":212,"location":"/certificate/2008-11-10_PLM_Detailing_with_Pro_Engineer_Wildfire_4.0.html","tags":["ptc"],"text":" ```  ```  ","title":"PLM Detailing with Pro Engineer Wildfire 4.0"},{"id":213,"location":"/certificate/2009-01-12_PLM_Advanced_Assembly_Management_with_Pro_Engineer_Wildfire_4.0_e_Top_Down_Design_with_Pro_Engineer_Wildfire_3.0.html","tags":["ptc"],"text":" ```  ```  ","title":"PLM Advanced Assembly Management with Pro Engineer Wildfire 4.0 e Top Down Design with Pro Engineer Wildfire 3.0"},{"id":214,"location":"/certificate/2009-08-18_ESSS_Técnicas_de_Otimização_de_Projetos_de_Engenharia_usando_o_Software_modeFrontier.html","tags":["optimization","modefrontier"],"text":" ```  ```  ","title":"Técnicas de Otimização de Projetos de Engenharia usando o Software modeFrontier"},{"id":215,"location":"/certificate/2010-01-12_INPE_LIT_Curso_de_Engenharia_de_Sistemas.html","tags":["system-engineering"],"text":" ``` \f ```  ","title":"Curso de Engenharia de Sistemas"},{"id":216,"location":"/certificate/2010-02-22_Applied_Systems_Engineering.html","tags":["system-engineering"],"text":" ``` \f ```  ","title":"Applied Systems Engineering"},{"id":217,"location":"/certificate/2010-08-14_TempoReal_7o_Encontro_de_programadores_C++_Brasil.html","tags":["C++"],"text":" ```  ```  ","title":"7o Encontro de programadores C++ Brasil"},{"id":218,"location":"/certificate/2011-08-25_QPB_FMEA_Analise_de_modo_e_efeitos_de_falha.html","tags":["fmea"],"text":" ```  ```  ","title":"QPB FMEA Analise de modo e efeitos de falha"},{"id":219,"location":"/certificate/2013-06-05_UFRJ_Curso_de_Extensão_Programação_de_GPU_utilizando_CUDA.html","tags":["nvidia","gpu"],"text":" ``` \f ```  ","title":"UFRJ Curso de Extensão Programação de GPU utilizando CUDA"},{"id":220,"location":"/certificate/2013-09-10_VALE_Curso_de_Motores.html","tags":["engine","combustion"],"text":" ```  ```  ","title":"VALE Curso de Motores"},{"id":221,"location":"/certificate/2014-02-15_TempoReal_Analise_Mapeamento_e_Modelagem_de_Processos_de_Negocio.html","tags":["process","mapping"],"text":" ```  ```  ","title":"TempoReal Analise Mapeamento e Modelagem de Processos de Negocio"},{"id":222,"location":"/certificate/2016-05-01_mectron_OOD_Object_Oriented_Design_UML.html","tags":["uml"],"text":" ``` \f ```  ","title":"OOD Object Oriented Design UML"},{"id":223,"location":"/certificate/2018-07-12_linkedin_CPP_Move_Semantics.html","tags":["C++"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   C++: Move Semantics Course completed on Jul 12, 2018 at 09:57PM UTC • 32 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AcHOaGj2zwg9fcljWS5hxRR1iH4A  ```  ","title":"CPP Move Semantics"},{"id":224,"location":"/certificate/2018-07-14_linkedin_CPP_Smart_Pointers.html","tags":["C++"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   C++: Smart Pointers Course completed on Jul 14, 2018 at 10:24PM UTC • 29 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AXj_9FqQSYhZogq2h9Gg49vV2nVL  ```  ","title":"CPP Smart Pointers"},{"id":225,"location":"/certificate/2018-07-26_linkedin_Developing_a_Style_Guide_2012.html","tags":["adobe-illustrator"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Developing a Style Guide (2012) Course completed on Jul 26, 2018 at 06:54PM UTC • 23 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Aa28Vwh1bbLFFCayD_4c6R0rdjId  ```  ","title":"Developing a Style Guide 2012"},{"id":226,"location":"/certificate/2018-10-28_Introdução_a_linguagem_Javascript.html","tags":["javascript"],"text":" ```   Geraldo Luis da Silva Ribeiro                                   CONCLUIU O CURSO                 Introdução à linguagem JavaScript                          COM CARGA HORÁRIA DE 1H                                 NA DATA DE 28/10/2018     U3HSRZ  ```  ","title":"Introdução a linguagem Javascript"},{"id":227,"location":"/certificate/2018-10-28_Programação_em_Perl.html","tags":["perl"],"text":" ```   Geraldo Luis da Silva Ribeiro                                 CONCLUIU O CURSO                    Curso de programação com Perl                         COM CARGA HORÁRIA DE 2H                               NA DATA DE 28/10/2018     9RYNHK  ```  ","title":"Programação em Perl"},{"id":228,"location":"/certificate/2018-10-30_treinaweb_Facebook_Marketing_Como_colocar_sua_empresa_no_Facebook.html","tags":["marketing","facebook"],"text":" ```                                          Geraldo Luis da Silva Ribeiro                                                  portador(a) do CPF                                                 055.593.028-99                                              participou e concluiu o curso                           Facebook Marketing - Como colocar sua empresa no facebook    com carga horária de                                                                   no período de    4 horas                                                                   30/10/2018 a 27/04/2020     Código: HAQEVRYSBTKK  ```  ","title":"Facebook Marketing Como colocar sua empresa no Facebook"},{"id":229,"location":"/certificate/2018-10-30_treinaweb_Marketing_Digital_Fundamentos.html","tags":["marketing"],"text":" ```                            Geraldo Luis da Silva Ribeiro                                    portador(a) do CPF                                   055.593.028-99                                participou e concluiu o curso                           Marketing Digital - Fundamentos    com carga horária de                                                     no período de    10 horas                                                    30/10/2018 a 30/10/2018     Código: ZOHDQUMSPIS2  ```  ","title":"Marketing Digital Fundamentos"},{"id":230,"location":"/certificate/2018-10-31_treinaweb_Digital_Ocean_Gerenciamento_de_Servidores_e_Servicos.html","tags":["digitalocean"],"text":" Geraldo Luis da Silva Ribeiro portador(a) do CPF xxx.xxx.xxx-xx participou e concluiu o curso **Digital Ocean - Gerenciamento de Servidores e Serviços** com carga horária de 16 horas no período de 31/10/2018 a 01/11/2018  Código: O7T61SXRKXHE ","title":"Digital Ocean Gerenciamento de Servidores e Serviços"},{"id":231,"location":"/certificate/2018-10-31_treinaweb_Facebook_Ads_Como_anunciar,_monitorar_e_potencializar_suas_campanhas.html","tags":["marketing","facebook"],"text":" ```                                        Geraldo Luis da Silva Ribeiro                                                portador(a) do CPF                                               055.593.028-99                                            participou e concluiu o curso                   Facebook Ads - Como anunciar, monitorar e potencializar suas campanhas    com carga horária de                                                                    no período de    6 horas                                                                  31/10/2018 a 31/10/2018     Código: BFSOJYQYZXJM  ```  ","title":"Facebook Ads Como anunciar, monitorar e potencializar suas campanhas"},{"id":232,"location":"/certificate/2018-10-31_treinaweb_RxJS_Programação_reativa.html","tags":["rxjs"],"text":" ```                           Geraldo Luis da Silva Ribeiro                                   portador(a) do CPF                                  055.593.028-99                               participou e concluiu o curso                           RxJS - Programação reativa    com carga horária de                                                    no período de    12 horas                                                   31/10/2018 a 31/10/2018     Código: LEXSAW8WUCND  ```  ","title":"RxJS Programação reativa"},{"id":233,"location":"/certificate/2018-11-01_treinaweb_Certificado_Tributação_para_desenvolvedores_na_NFe_4.0.html","tags":["money"],"text":" ```                                  Geraldo Luis da Silva Ribeiro                                          portador(a) do CPF                                         055.593.028-99                                      participou e concluiu o curso                           Tributação para desenvolvedores na NFe 4.0    com carga horária de                                                             no período de    10 horas                                                            01/11/2018 a 01/11/2018     Código: NJIT7SYLVZKX  ```  ","title":"Certificado Tributação para desenvolvedores na NFe 4.0"},{"id":234,"location":"/certificate/2019-08-02_stefanini_Design_Thinking.html","tags":["design-thinking"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:                DESIGN THINKING                   Concluído em:                  2/Agosto/2019  ```  ","title":"Design Thinking"},{"id":235,"location":"/certificate/2020-02-17_linkedin_Go_Essential_Training.html","tags":["go"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Go Essential Training Course completed on Feb 17, 2021 at 02:14AM UTC • 1 hour 56 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AVNcsD3GVxpak-Ot_RW4_TyHIla7  ```  ","title":"Go Essential Training"},{"id":236,"location":"/certificate/2020-03-30_stefanini_Steftalk.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:                   STEFTALKS                   Concluído em:                  30/Março/2020  ```  ","title":"Steftalk"},{"id":237,"location":"/certificate/2020-05-23_linkedin_Flutter_Part_03_Flutter_Widgets.html","tags":["flutter"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Flutter: Part 03 Flutter Widgets Course completed on May 23, 2020 at 02:55PM UTC • 1 hour 30 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AZirtpDMHi41U3MzqwehDQbIMwhk  ```  ","title":"Flutter Part 03 Flutter Widgets"},{"id":238,"location":"/certificate/2020-05-23_linkedin_Flutter_Part_04_Building_an_App_with_State_br.html","tags":["flutter"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Flutter: Part 04 Building an App with State Curso concluído em mai 23, 2020 at 03:43PM UTC • 1 hora 38 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AQvsvp-n0SrupH0mZilHFNG4icvb  ```  ","title":"Flutter Part 04 Building an App with State br"},{"id":239,"location":"/certificate/2020-05-23_linkedin_Flutter_Part_04_Building_an_App_with_State.html","tags":["flutter"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Flutter: Part 04 Building an App with State Course completed on May 23, 2020 at 03:43PM UTC • 1 hour 38 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AQvsvp-n0SrupH0mZilHFNG4icvb  ```  ","title":"Flutter Part 04 Building an App with State"},{"id":240,"location":"/certificate/2020-05-23_linkedin_Flutter_Part_05_Flutter_and_Dart_Packages.html","tags":["flutter"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Flutter: Part 05 Flutter and Dart Packages Curso concluído em mai 23, 2020 at 06:02PM UTC • 1 hora 26 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                      LinkedIn Learning Líder de Estratégia de                            1000 W Maude Ave Conteúdo, Learning                                Sunnyvale, CA 94085     Código do certificado: AZkX6H7vaibhHMGvMbbkdr2KDb8J  ```  ","title":"Flutter Part 05 Flutter and Dart Packages"},{"id":241,"location":"/certificate/2020-05-23_linkedin_Flutter_Part_06_Modularizing_and_Organizing_Flutter_Code.html","tags":["flutter"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Flutter: Part 06 Modularizing and Organizing Flutter Code Curso concluído em mai 23, 2020 at 07:09PM UTC • 2 horas 44 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AQtVvXVFE1-Esf3aes4_iuY1gZVZ  ```  ","title":"Flutter Part 06 Modularizing and Organizing Flutter Code"},{"id":242,"location":"/certificate/2020-09-14_nodestudio_criando_sites_profissionais.html","tags":["html"],"text":" ``` Node Studio Treinamentos tem a honra de conferir a                  Geraldo Luis Da Silva Ribeiro            O certificado por sua participação no        Criando Sites Profissionais                           Carga horária: 2 hora(s)                              Data: 14/09/2020     O presente certificado poderá ser validado no endereço: http://www.nodestudio.com.br              Para realizar a validação, informe o código do certificado: 58783259  ```  ","title":"criando sites profissionais"},{"id":243,"location":"/certificate/2020-09-14_nodestudio_design_responsivo.html","tags":["responsive-design"],"text":" ``` Node Studio Treinamentos tem a honra de conferir a                  Geraldo Luis Da Silva Ribeiro            O certificado por sua participação no      Curso de Design Responsivo                           Carga horária: 1 hora(s)                              Data: 14/09/2020     O presente certificado poderá ser validado no endereço: http://www.nodestudio.com.br              Para realizar a validação, informe o código do certificado: 58783257  ```  ","title":"design responsivo"},{"id":244,"location":"/certificate/2020-11-10_linkedin_Developing_Distributed_Applications_with_Cshap_and_ZeroMQ.html","tags":["csharp","zeromq"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Developing Distributed Applications with C# and ZeroMQ Course completed on Nov 10, 2020 at 09:59PM UTC • 1 hour 1 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AUy_mv706tzMDHB_39OJKuyuO5Ys  ```  ","title":"Developing Distributed Applications with Cshap and ZeroMQ"},{"id":245,"location":"/certificate/2020-11-10_linkedin_Flutter_Part_02_Building_Apps.html","tags":["flutter"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Flutter: Part 02 Building Apps Course completed on Nov 10, 2020 at 07:00PM UTC • 1 hour 23 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AT1mxF2pw2LtJcjSkuuNACWL-XkD  ```  ","title":"Flutter Part 02 Building Apps"},{"id":246,"location":"/certificate/2020-11-10_linkedin_Flutter_Part_07_Building_the_UI_or_Flutter_Part_07_Building_UIs_br.html","tags":["flutter"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Flutter: Part 07 Building the UI or Flutter: Part 07 Building UIs Curso concluído em nov 10, 2020 at 05:57PM UTC • 4 horas 23 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: Ad8vys4HC0ZcTdRuxa7-Mrx0a788  ```  ","title":"Flutter Part 07 Building the UI or Flutter Part 07 Building UIs br"},{"id":247,"location":"/certificate/2020-11-10_linkedin_Flutter_Part_07_Building_the_UI_or_Flutter_Part_07_Building_UIs.html","tags":["flutter"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Flutter: Part 07 Building the UI or Flutter: Part 07 Building UIs Course completed on Nov 10, 2020 at 05:57PM UTC • 4 hours 23 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Ad8vys4HC0ZcTdRuxa7-Mrx0a788  ```  ","title":"Flutter Part 07 Building the UI or Flutter Part 07 Building UIs"},{"id":248,"location":"/certificate/2020-11-10_linkedin_Learning_RabbitMQ.html","tags":["rabbitmq"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Learning RabbitMQ Course completed on Nov 10, 2020 at 08:26PM UTC • 1 hour 22 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AUreFFyuIkBynvpJk2IcSh2dTBmn  ```  ","title":"Learning RabbitMQ"},{"id":249,"location":"/certificate/2020-11-11_linkedin_Learning_JUnit_5.html","tags":["junit","testing"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Learning JUnit 5 Course completed on Nov 11, 2020 at 08:41PM UTC • 1 hour 5 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: ATJToE4o3tH8e-fAYio-FRS1mL6I  ```  ","title":"Learning JUnit 5"},{"id":250,"location":"/certificate/2020-11-11_linkedin_Software_Architecture_DomainDriven_Design.html","tags":["ddd"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Software Architecture: Domain-Driven Design Course completed on Nov 11, 2020 at 07:57PM UTC • 1 hour 19 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AZzJJs2fNa7Nb4L63gnwLT5sWkVR  ```  ","title":"Software Architecture DomainDriven Design"},{"id":251,"location":"/certificate/2020-11-13_linkedin_Learning_Java_8.html","tags":["java"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Learning Java 8 Course completed on Nov 13, 2020 at 09:46PM UTC • 3 hours 9 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AaRn0KHvOnCD_dVRnBKijnlOFRNM  ```  ","title":"Learning Java 8"},{"id":252,"location":"/certificate/2020-11-25_RLSystem_Flutter_primeiros_passos.html","tags":["flutter"],"text":" ```  ```  ","title":"RLSystem Flutter primeiros passos"},{"id":253,"location":"/certificate/2020-11-25_RLSystem_VueJS_primeiros_passos.html","tags":["vue"],"text":" ```  ```  ","title":"RLSystem VueJS primeiros passos"},{"id":254,"location":"/certificate/2020-11-26_stefanini_Antifrágil.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:                   ANTIFRÁGIL                   Concluído em:                26/Novembro/2020  ```  ","title":"Antifrágil"},{"id":255,"location":"/certificate/2020-11-28_linkedin_Como_Escutar_de_Forma_Eficaz.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Como Escutar de Forma Eficaz Curso concluído em nov 28, 2020 at 08:15PM UTC • 1 hora 9 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: ASqZHVXHt_8DZST9qVlI9c_cpz0Z  ```  ","title":"Como Escutar de Forma Eficaz"},{"id":256,"location":"/certificate/2020-11-28_linkedin_Construindo_Confiança_en.html","tags":["soft-skill"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Construindo Confiança Course completed on Nov 28, 2020 at 08:54PM UTC • 1 hour 0 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AWBTMKZwkH67hluFKQcZXLdUDLUD  ```  ","title":"Construindo Confiança en"},{"id":257,"location":"/certificate/2020-11-28_linkedin_Construindo_Confiança_pt.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Construindo Confiança Curso concluído em nov 28, 2020 at 08:54PM UTC • 1 hora 0 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                     LinkedIn Learning Líder de Estratégia de                           1000 W Maude Ave Conteúdo, Learning                               Sunnyvale, CA 94085     Código do certificado: AWBTMKZwkH67hluFKQcZXLdUDLUD  ```  ","title":"Construindo Confiança pt"},{"id":258,"location":"/certificate/2020-11-28_linkedin_Demonstrating_Accountability_as_a_Leader.html","tags":["soft-skill"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Demonstrating Accountabilty as a Leader Course completed on Nov 28, 2020 at 07:10PM UTC • 15 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AdrlVZ_vdZBHPgj44Olxwcz18qWo  ```  ","title":"Demonstrating Accountability as a Leader"},{"id":259,"location":"/certificate/2020-11-28_linkedin_Designing_RESTful_APIs.html","tags":["rest"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Designing RESTful APIs Course completed on Nov 28, 2020 at 06:52PM UTC • 1 hour 24 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AUxEKMZ_pUGHmpMyssqdhA4OdvhX  ```  ","title":"Designing RESTful APIs"},{"id":260,"location":"/certificate/2020-11-28_linkedin_Transforme-se_com_a_Inovação_Disruptiva.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Transforme-se com a Inovação Disruptiva Curso concluído em nov 28, 2020 at 07:26PM UTC • 24 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                      LinkedIn Learning Líder de Estratégia de                            1000 W Maude Ave Conteúdo, Learning                                Sunnyvale, CA 94085     Código do certificado: ATQosyQQCpFPEwtayMrQfSpBPPOS  ```  ","title":"Transforme se com a Inovação Disruptiva"},{"id":261,"location":"/certificate/2020-11-28_linkedin_Web_Security_OAuth_and_OpenID_Connect.html","tags":["security"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Web Security: OAuth and OpenID Connect Course completed on Nov 28, 2020 at 05:47PM UTC • 1 hour 44 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AcrpqMxNnErzDjdwh6DgxHAvxEjv  ```  ","title":"Web Security OAuth and OpenID Connect"},{"id":262,"location":"/certificate/2020-12-05_linkedin_Fundamentos_de_Liderança.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Fundamentos de Liderança Curso concluído em dez 05, 2020 at 08:13PM UTC • 1 hora 24 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AZKriuoj5h3MjOg36AcGR_F1_9ll  ```  ","title":"Fundamentos de Liderança"},{"id":263,"location":"/certificate/2020-12-05_linkedin_Gestão_Ágil_no_Trabalho_Como_Tornar_as_Reuniões_Ágeis_mais_Produtivas.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Gestão Ágil no Trabalho: Como Tornar as Reuniões Ágeis mais Produtivas Curso concluído em dez 05, 2020 at 07:12PM UTC • 1 hora 8 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: Af0_z__U8_swgm3g4Yl7sxkXiJFv  ```  ","title":"Gestão Ágil no Trabalho Como Tornar as Reuniões Ágeis mais Produtivas"},{"id":264,"location":"/certificate/2020-12-06_linkedin_Desenvolvendo_sua_Filosofia_de_Liderança.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Desenvolvendo sua Filosofia de Liderança Curso concluído em dez 06, 2020 at 06:09PM UTC • 1 hora 23 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AT-B80r4MojZJuu4KsE8Al8eUHnO  ```  ","title":"Desenvolvendo sua Filosofia de Liderança"},{"id":265,"location":"/certificate/2020-12-15_linkedin_Como_Dar_Feedback_aos_Funcionários.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Como Dar Feedback aos Funcionários Curso concluído em dez 15, 2020 at 12:49PM UTC • 1 hora 7 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                      LinkedIn Learning Líder de Estratégia de                            1000 W Maude Ave Conteúdo, Learning                                Sunnyvale, CA 94085     Código do certificado: AbhQ_Q8PaZYkWesh3nj0HkWex36F  ```  ","title":"Como Dar Feedback aos Funcionários"},{"id":266,"location":"/certificate/2020-12-15_linkedin_Como_Passar_De_Gerente_a_Lider.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Como Passar De Gerente a Líder Curso concluído em dez 15, 2020 at 12:49PM UTC • 1 hora 0 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AeyeRjmlzHVz6K4kaXvUxSP-xEa2  ```  ","title":"Como Passar De Gerente a Lider"},{"id":267,"location":"/certificate/2020-12-15_linkedin_Desenvolvimento_da_Inteligencia_Intercultural.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Desenvolvimento da Inteligência Intercultural Curso concluído em dez 15, 2020 at 12:50PM UTC • 1 hora 14 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                     LinkedIn Learning Líder de Estratégia de                           1000 W Maude Ave Conteúdo, Learning                               Sunnyvale, CA 94085     Código do certificado: AccJg0S5ST5D1yWpUMikzsRawmNH  ```  ","title":"Desenvolvimento da Inteligencia Intercultural"},{"id":268,"location":"/certificate/2020-12-15_linkedin_Liderança_com_Inteligencia_Emocional.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Liderança com Inteligência Emocional Curso concluído em dez 15, 2020 at 12:49PM UTC • 1 hora 46 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AYhLx7GF_zqYsimN5NGNyjEn1Hxl  ```  ","title":"Liderança com Inteligencia Emocional"},{"id":269,"location":"/certificate/2020-12-15_linkedin_Liderança_Inclusiva.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Liderança Inclusiva Curso concluído em dez 15, 2020 at 12:50PM UTC • 59 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AbyaBWYtyMI8RZvJkhYlAt5Fq5wY  ```  ","title":"Liderança Inclusiva"},{"id":270,"location":"/certificate/2020-12-15_linkedin_Liderança_sem_Autoridade_Formal.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Liderança sem Autoridade Formal Curso concluído em dez 15, 2020 at 12:50PM UTC • 1 hora 4 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AY_1TCmuG1z-CG-h1SZ9xfqxvMIo  ```  ","title":"Liderança sem Autoridade Formal"},{"id":271,"location":"/certificate/2020-12-15_linkedin_Liderando_Mudanças.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Liderando Mudanças Curso concluído em dez 15, 2020 at 12:49PM UTC • 1 hora 44 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                      LinkedIn Learning Líder de Estratégia de                            1000 W Maude Ave Conteúdo, Learning                                Sunnyvale, CA 94085     Código do certificado: Af8MqODomttVNvEaMfQ89Nuc1HN-  ```  ","title":"Liderando Mudanças"},{"id":272,"location":"/certificate/2020-12-15_linkedin_O_Poder_do_Coaching_no_Desenvolvimento_dos_Colaboradores.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   O Poder do Coaching no Desenvolvimento dos Colaboradores Curso concluído em dez 15, 2020 at 12:49PM UTC • 1 hora 4 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AeOvNu05pv6g8nYXe90nhxVk6NyR  ```  ","title":"O Poder do Coaching no Desenvolvimento dos Colaboradores"},{"id":273,"location":"/certificate/2020-12-15_linkedin_Transforme-se_num_Líder_Disruptivo.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Transforme-se num Líder Disruptivo Rota de aprendizagem concluída em dez 15, 2020 at 12:50PM UTC • 15 horas 23 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.  Principais competências abordadas Inteligência emocional, Liderança, Desenvolvimento pessoal                                                       LinkedIn Learning Líder de Estratégia de                            1000 W Maude Ave Conteúdo, Learning                                Sunnyvale, CA 94085     Código do certificado: ATmPvXTRmssMqd8_WtIf9WnKv6Qr  ```  ","title":"Transforme se num Líder Disruptivo"},{"id":274,"location":"/certificate/2020-12-15_rocketseat_dowhile.html","tags":["javascript"],"text":" ```                                 /certificado     Rocketseat parabeniza   Geraldo Luis da Silva Ribeiro pela participação no evento DoWhile2020, que aconteceu nos dias 14 e 15 de dezembro de 2020 e incluiu palestras, workshops, painéis e talks sobre o ecossistema de tecnologia, com carga horária de 16 horas.  ```  ","title":"dowhile"},{"id":275,"location":"/certificate/2020-12-16_linkedin_Code_Clinic_CPP.html","tags":["C++"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Code Clinic: C++ Curso concluído em dez 16, 2020 at 06:56PM UTC • 1 hora 39 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AVqcCPw2IC_Fx-2IakZYODuCyZY7  ```  ","title":"Code Clinic CPP"},{"id":276,"location":"/certificate/2020-12-16_linkedin_CPP_Best_Practices_for_Developers.html","tags":["C++"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   C++ Best Practices for Developers Course completed on Dec 16, 2020 at 10:09PM UTC • 50 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AeiGnjm5zCCiM75IbMp23lUw2cH2  ```  ","title":"CPP Best Practices for Developers"},{"id":277,"location":"/certificate/2020-12-16_linkedin_Introducing_Functional_Programming_in_CPP.html","tags":["C++"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Introducing Functional Programming in C++ Course completed on Dec 17, 2020 at 12:59AM UTC • 1 hour 15 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AQyg6uoBo2tkThZP18_FxNc_BFke  ```  ","title":"Introducing Functional Programming in CPP"},{"id":278,"location":"/certificate/2020-12-16_linkedin_Web_Servers_and_APIs_using_CPP.html","tags":["C++"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Web Servers and APIs using C++ Course completed on Dec 16, 2020 at 08:57PM UTC • 2 hours 34 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AYXsOB0CYZKat4BgLJaCDIq--g72  ```  ","title":"Web Servers and APIs using CPP"},{"id":279,"location":"/certificate/2020-12-17_linkedin_Code_Clinic_CPP.html","tags":["C++"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Code Clinic: C++ (2014) Course completed on Dec 17, 2020 at 07:27PM UTC • 2 hours 4 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AaZzbCmo6GxfFLYawB2WsH4m-mg0 \f ```  ","title":"Code Clinic CPP"},{"id":280,"location":"/certificate/2020-12-19_linkedin_Learning_COBIT.html","tags":["cobit"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Learning COBIT Course completed on Dec 19, 2020 at 09:13PM UTC • 1 hour 32 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AUDM73TmLYwoEIyG_JA51CP56Dxq  ```  ","title":"Learning COBIT"},{"id":281,"location":"/certificate/2020-12-31_linkedin_Agile_at_Work_Building_Your_Agile_Team.html","tags":["agile"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Agile at Work: Building Your Agile Team Curso concluído em dez 31, 2020 at 01:21PM UTC • 55 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                     LinkedIn Learning Líder de Estratégia de                           1000 W Maude Ave Conteúdo, Learning                               Sunnyvale, CA 94085     Código do certificado: AbE2JtzW9vWuN1o3GB1RYhExdQM4  ```  ","title":"Agile at Work Building Your Agile Team"},{"id":282,"location":"/certificate/2020-12-31_linkedin_Agile_at_Work_Building_Your_Agile_Team_PMI.html","tags":["agile"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Agile at Work: Building Your Agile Team Curso concluído em dez 31, 2020 at 01:21PM UTC  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                                     LinkedIn Learning Líder de Estratégia de                                           1000 W Maude Ave Conteúdo, Learning                                               Sunnyvale, CA 94085                        A logomarca da PMI Registered Education Provider é marca registrada do Project Management Institute, Inc.     Programa: PMI® Registered Education Provider | Proveedor ID: nº4101 Nº do certificado: AbE2JtzW9vWuN1o3GB1RYhExdQM4 PDUs/ContactHours: 1.00 | Actividad #: 4101X1JZKX  ```  ","title":"Agile at Work Building Your Agile Team PMI"},{"id":283,"location":"/certificate/2020-12-31_linkedin_Agile_at_Work_Planning_with_Agile_User_Stories_PMI.html","tags":["agile"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Agile at Work: Planning with Agile User Stories Curso concluído em dez 31, 2020 at 01:40PM UTC  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                                     LinkedIn Learning Líder de Estratégia de                                           1000 W Maude Ave Conteúdo, Learning                                               Sunnyvale, CA 94085                        A logomarca da PMI Registered Education Provider é marca registrada do Project Management Institute, Inc.     Programa: PMI® Registered Education Provider | Proveedor ID: nº4101 Nº do certificado: AQ7PS0Su-E8lnYhUuVf4JG8tyP4e PDUs/ContactHours: 1.00 | Actividad #: 4101ECBBFV  ```  ","title":"Agile at Work Planning with Agile User Stories PMI"},{"id":284,"location":"/certificate/2021-01-29_linkedin_Microservices_Asynchronous_Messaging.html","tags":["microservice"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Microservices: Asynchronous Messaging Course completed on Jan 29, 2021 at 01:13AM UTC • 1 hour 43 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Aca7lL-0BbElEf6v71stKTa3mS77  ```  ","title":"Microservices Asynchronous Messaging"},{"id":285,"location":"/certificate/2021-02-15_linkedin_Técnicas_de_Persuasão_em_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Técnicas de Persuasão em Vendas Curso concluído em fev 26, 2021 at 02:12AM UTC • 1 hora 0 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AThtPMbBuXxgkvC3cP3Vt9HW4j-G  ```  ","title":"Técnicas de Persuasão em Vendas"},{"id":286,"location":"/certificate/2021-02-24_linkedin_Com_Fazer_Perguntas_Poderosas_para_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Como Fazer Perguntas Poderosas para Vendas Curso concluído em fev 24, 2021 at 11:22PM UTC • 27 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: Adz7-nDnMZuFipuB4fX1o4P0d-te  ```  ","title":"Com Fazer Perguntas Poderosas para Vendas"},{"id":287,"location":"/certificate/2021-02-24_linkedin_Como_Melhorar_a_Prospecção_de_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Como Melhorar a Prospecção de Vendas Curso concluído em fev 25, 2021 at 01:02AM UTC • 33 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                      LinkedIn Learning Líder de Estratégia de                            1000 W Maude Ave Conteúdo, Learning                                Sunnyvale, CA 94085     Código do certificado: AT4Vd70NTOARkTDmdGRheikQEeLy  ```  ","title":"Como Melhorar a Prospecção de Vendas"},{"id":288,"location":"/certificate/2021-02-24_linkedin_Técnicas_de_Comunicação_Interpessoal.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Técnicas de Comunicação Interpessoal Curso concluído em fev 24, 2021 at 07:05PM UTC • 36 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                      LinkedIn Learning Líder de Estratégia de                            1000 W Maude Ave Conteúdo, Learning                                Sunnyvale, CA 94085     Código do certificado: AR707uKOOQS1DDx1HFXZ8srzmqe0  ```  ","title":"Técnicas de Comunicação Interpessoal"},{"id":289,"location":"/certificate/2021-02-25_linkedin_A_Ciência_das_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   A Ciência das Vendas Curso concluído em fev 25, 2021 at 07:11PM UTC • 58 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                      LinkedIn Learning Líder de Estratégia de                            1000 W Maude Ave Conteúdo, Learning                                Sunnyvale, CA 94085     Código do certificado: Ad_7qyX5npIh7Rd7mhrUBmBxsyb5  ```  ","title":"A Ciência das Vendas"},{"id":290,"location":"/certificate/2021-02-25_linkedin_Fundamentos_de_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Fundamentos de Vendas Curso concluído em fev 26, 2021 at 01:37AM UTC • 58 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AXk6Ej525vyZIa5l_Ij1fnP4dC01  ```  ","title":"Fundamentos de Vendas"},{"id":291,"location":"/certificate/2021-02-25_linkedin_Técnicas_de_Fechamento_de_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Técnicas de Fechamento de Vendas Curso concluído em fev 26, 2021 at 02:37AM UTC • 38 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: ASW5r0E73vREIjh8QlpxP-o1a3nN  ```  ","title":"Técnicas de Fechamento de Vendas"},{"id":292,"location":"/certificate/2021-02-26_linkedin_Técnicas_de_Fechamento_de_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Técnicas de Fechamento de Vendas Curso concluído em fev 26, 2021 at 02:37AM UTC • 38 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: ASW5r0E73vREIjh8QlpxP-o1a3nN  ```  ","title":"Técnicas de Fechamento de Vendas"},{"id":293,"location":"/certificate/2021-02-26_stefanini_Estrategia_Emocional.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:30 horas o curso:            ESTRATÉGIA EMOCIONAL                    Concluído em:                 26/Fevereiro/2021  ```  ","title":"Estrategia Emocional"},{"id":294,"location":"/certificate/2021-02-26_stefanini_Métricas_Ágeis.html","tags":["agile"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:                  Métricas Ágeis                    Concluído em:                 26/Fevereiro/2021 DESCRIÇÃO   Apresentar como as métricas ágeis podem ajudar na análise dos resultados e entender a evolução das entregas.     Apresentar o que é a metodologia XP.              Apresentação Conceitos Pode onde começar Manifesto das Métricas Ágeis Por onde começar a medir Lead Time Throughput WIP  ```  ","title":"Métricas Ágeis"},{"id":295,"location":"/certificate/2021-02-26_stefanini_Resiliência.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:                  RESILIÊNCIA                    Concluído em:                 26/Fevereiro/2021  ```  ","title":"Resiliência"},{"id":296,"location":"/certificate/2021-02-27_linkedin_O_Poder_das_Historias_no_Contexto_das_Vendas_Parte_2_Historias_que_Fazem_Sucesso.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   O Poder das Histórias no Contexto das Vendas, Parte 2: Histórias que Fazem Sucesso Curso concluído em fev 28, 2021 at 01:26AM UTC • 1 hora 29 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AfwMF6RRDK3icMor9hQzRIZRiO_1  ```  ","title":"O Poder das Historias no Contexto das Vendas Parte 2 Historias que Fazem Sucesso"},{"id":297,"location":"/certificate/2021-02-27_linkedin_Poder_das_Historias_no_Contexto_das_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   O Poder das Histórias no Contexto das Vendas Curso concluído em fev 27, 2021 at 08:36PM UTC • 1 hora 17 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                    LinkedIn Learning Líder de Estratégia de                          1000 W Maude Ave Conteúdo, Learning                              Sunnyvale, CA 94085     Código do certificado: ASCwmpmZs986P7KazHGRDdR99nnD  ```  ","title":"Poder das Historias no Contexto das Vendas"},{"id":298,"location":"/certificate/2021-02-27_linkedin_Quarta_Revolução_Industrial_Novos_Modelos_de_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Quarta Revolução Industrial: Novos Modelos de Vendas Curso concluído em fev 27, 2021 at 11:23PM UTC • 49 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AdX0pF67DVwrnBsnL6bhJGax1wz8  ```  ","title":"Quarta Revolução Industrial Novos Modelos de Vendas"},{"id":299,"location":"/certificate/2021-02-27_linkedin_Torne-se_um_Profissional_de_Vendas.html","tags":["sell","marketing","soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Torne-se um Profissional de Vendas Rota de aprendizagem concluída em fev 28, 2021 at 01:26AM UTC • 7 horas 23 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.  Principais competências abordadas Processo de venda, Eficácia de vendas, Vendas, Narração de histórias, Negociação                                                           LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: Ac6MAt0dCZlnR0FPwH5Y8Fdb8zX_  ```  ","title":"Torne se um Profissional de Vendas"},{"id":300,"location":"/certificate/2021-02-28_linkedin_Como_Preparar_e_Fazer_Apresentações_de_Negócios.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Como Preparar e Fazer Apresentações de Negócios Curso concluído em mar 01, 2021 at 12:55AM UTC • 1 hora 32 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: Adqc1mnireWXxtw9AlXSRm2ggf8z  ```  ","title":"Como Preparar e Fazer Apresentações de Negócios"},{"id":301,"location":"/certificate/2021-02-28_linkedin_Designing_a_Letterhead_System.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Designing a Letterhead System Curso concluído em fev 28, 2021 at 04:26PM UTC • 23 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: Ac-rTCitV0CalTHK8VqrtKQbw5hv  ```  ","title":"Designing a Letterhead System"},{"id":302,"location":"/certificate/2021-03-09_udemy_vim_moderno_e_VimScript.html","tags":["vim","vimscript"],"text":" ```  ```  ","title":"vim moderno e VimScript"},{"id":303,"location":"/certificate/2021-04-05_certiprof_Cyber_Security_Foundation_certiprof.html","tags":["security"],"text":" ``` Geraldo Luis da Silva Ribeiro                    April 5, 2021                 60977531                April 5, 2023  ```  ","title":"certiprof Cyber Security Foundation certiprof"},{"id":304,"location":"/certificate/2021-04-05_linkedin_Comunicação_na_Liderança_4.0_O_Poder_da_Síntese.html","tags":["soft-skill","leadership"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Comunicação na Liderança 4.0: O Poder da Síntese Course completed on Apr 05, 2021 at 10:33PM UTC • 56 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AeMbG05o9AieUeHkKTXcUb3HL-zp  ```  ","title":"Comunicação na Liderança 4.0 O Poder da Síntese"},{"id":305,"location":"/certificate/2021-04-13_stefanini_Como_a_Inteligencia_Artificial_aprende_e_onde_ela_pode_chegar.html","tags":["artificial-intelligence"],"text":" ```  ```  ","title":"Como a Inteligencia Artificial aprende e onde ela pode chegar"},{"id":306,"location":"/certificate/2021-04-16_stefanini_como_dar_e_receber_feedback.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:       COMO DAR E RECEBER FEEDBACK                   Concluído em:                  16/Abril/2021  ```  ","title":"como dar e receber feedback"},{"id":307,"location":"/certificate/2021-04-16_stefanini_comunicação.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:                 COMUNICAÇÃO                   Concluído em:                  16/Abril/2021  ```  ","title":"comunicação"},{"id":308,"location":"/certificate/2021-04-16_stefanini_foco_no_resultado_sustentável.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:     FOCO NO RESULTADO SUSTENTÁVEL                   Concluído em:                  16/Abril/2021  ```  ","title":"foco no resultado sustentável"},{"id":309,"location":"/certificate/2021-04-16_stefanini_influencia_e_negociação.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:           INFLUÊNCIA E NEGOCIAÇÃO                   Concluído em:                  16/Abril/2021  ```  ","title":"influencia e negociação"},{"id":310,"location":"/certificate/2021-04-16_stefanini_INSTITUCIONAL_STEFANINI.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:            INSTITUCIONAL STEFANINI                   Concluído em:                  16/Abril/2021  ```  ","title":"INSTITUCIONAL STEFANINI"},{"id":311,"location":"/certificate/2021-04-16_stefanini_marketing_pessoal.html","tags":["soft-skill","marketing"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:             MARKETING PESSOAL                   Concluído em:                  16/Abril/2021  ```  ","title":"marketing pessoal"},{"id":312,"location":"/certificate/2021-04-16_stefanini_TRANSFORMAÇÃO_DIGITAL_E_CULTURAL_DO_PAPEL_A_PRÁTICA.html","tags":["soft-skill"],"text":" ```                      Certificamos que:                Geraldo Luis Da Silva Ribeiro        Concluiu com carga horária de 01:00 horas o curso: TRANSFORMAÇÃO DIGITAL E CULTURAL: DO PAPEL À PRÁTICA                        Concluído em:                       16/Abril/2021  ```  ","title":"TRANSFORMAÇÃO DIGITAL E CULTURAL DO PAPEL A PRÁTICA"},{"id":313,"location":"/certificate/2021-05-09_linkedin_Agile_Software_Development_Dealing_with_Legacy_Code_and_Technical_Debt.html","tags":["agile"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Agile Software Development: Dealing with Legacy Code and Technical Debt Course completed on May 09, 2021 at 09:41PM UTC • 1 hour 2 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AT_fy7bEyR_YJ8qwi9mqA4PB3bj_  ```  ","title":"Agile Software Development Dealing with Legacy Code and Technical Debt"},{"id":314,"location":"/certificate/2021-05-12_linkedin_End-to-End_JavaScript_Testing_with_Cypress.io.html","tags":["testing","javascript","cypress"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   End-to-End JavaScript Testing with Cypress.io Course completed on May 12, 2021 at 08:28PM UTC • 1 hour 29 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AZrKnqh_i8b5QrgOmMu8T05quZIw  ```  ","title":"End to End JavaScript Testing with Cypress.io"},{"id":315,"location":"/certificate/2021-05-13_linkedin_Como_Conciliar_o_Trabalho_Remoto_com_a_Vida_Familiar_em_Tempos_de_Crise.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Como Conciliar o Trabalho Remoto com a Vida Familiar em Tempos de Crise Curso concluído em mai 13, 2021 at 06:16PM UTC • 1 hora 3 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: Ab_grwEY-wDXUHy0T-ttKsBhvswO  ```  ","title":"Como Conciliar o Trabalho Remoto com a Vida Familiar em Tempos de Crise"},{"id":316,"location":"/certificate/2021-05-13_linkedin_Computação_em_Nuvem_Noções_Básicas.html","tags":["cloud"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Computação em Nuvem: Noções Básicas Curso concluído em mai 13, 2021 at 03:08AM UTC • 1 hora 43 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                      LinkedIn Learning Líder de Estratégia de                            1000 W Maude Ave Conteúdo, Learning                                Sunnyvale, CA 94085     Código do certificado: ARoQ0zStEObf4uNwH-pCuRDCvFGJ  ```  ","title":"Computação em Nuvem Noções Básicas"},{"id":317,"location":"/certificate/2021-05-14_linkedin_Secure_Coding_in_Java.html","tags":["security","java"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Secure Coding in Java Curso concluído em mai 15, 2021 at 02:07AM UTC • 59 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AdmI4war4PASmiqzXL8Xe_e_H1YZ  ```  ","title":"Secure Coding in Java"},{"id":318,"location":"/certificate/2021-05-15_linkedin_Fundamentos_de_Comunicação.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Fundamentos de Comunicação Curso concluído em mai 16, 2021 at 12:40AM UTC • 1 hora 23 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AXKfRjKzSNRKrdhdSyD3tJNqKGj9  ```  ","title":"Fundamentos de Comunicação"},{"id":319,"location":"/certificate/2021-05-16_linkedin_Como_Desenvolver_a_Resiliência.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Como Desenvolver a Resiliência Curso concluído em mai 16, 2021 at 06:55PM UTC • 41 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: Af0gQEabbZOaMYZXXru1LogXzPfH  ```  ","title":"Como Desenvolver a Resiliência"},{"id":320,"location":"/certificate/2021-05-19_linkedin_Descubra_o_CSS.html","tags":["css"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Descubra o CSS Curso concluído em mai 19, 2021 at 06:44PM UTC • 1 hora 37 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AYokcfDACZI5dIO9IAGgV_ZMb6Dh  ```  ","title":"Descubra o CSS"},{"id":321,"location":"/certificate/2021-05-27_linkedin_Vue.js_3_Essential_Training.html","tags":["vue"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Vue.js 3 Essential Training Course completed on May 27, 2021 at 04:27PM UTC • 5 hours 8 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AWWCYNO8qqjOy21YuQ3K3szevD82  ```  ","title":"Vue.js 3 Essential Training"},{"id":322,"location":"/certificate/2021-05-28_linkedin_Training_Neural_Networks_in_C++.html","tags":["C++"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Training Neural Networks in C++ Course completed on May 29, 2021 at 01:58AM UTC • 1 hour 46 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AQF18zTVsP4He8hR7B5iNRzwMgBs  ```  ","title":"Training Neural Networks in C++"},{"id":323,"location":"/certificate/2021-05-29_stefanini_Technical_Meeting_Stefanini.html","tags":["soft-skill"],"text":" ```  ```  ","title":"Technical Meeting Stefanini"},{"id":324,"location":"/certificate/2021-06-01_linkedin_Project_Management_Simplified.html","tags":["project-management"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Project Management Simplified Course completed on Jun 02, 2021 at 12:45AM UTC  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                                      LinkedIn Learning                                                                    1000 W Maude Ave Head of Content Strategy, Learning                                 Sunnyvale, CA 94085                         The PMI Registered Education Provider logo is a registered mark of the Project Management Institute, Inc.     Program: PMI® Registered Education Provider | Provider ID: #4101 Certificate No: ARe7Cpjx3DB_c9YlCASAbXUBk8Gi PDUs/ContactHours: 1.50 | Activity #: 4101W7SDCV  ```  ","title":"Project Management Simplified"},{"id":325,"location":"/certificate/2021-06-02_linkedin_Learning_Vue.js.html","tags":["vue"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Learning Vue.js Course completed on Jun 03, 2021 at 12:04AM UTC • 1 hour 41 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AYqVCm1rZxKonXvdwcg8LKAsSVI6  ```  ","title":"Learning Vue.js"},{"id":326,"location":"/certificate/2021-06-03_linkedin_Building_Vue_and_Node_Apps_with_Authentication.html","tags":["vue"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Building Vue and Node Apps with Authentication Course completed on Jun 03, 2021 at 12:50PM UTC • 2 hours 18 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AQ6enwEIbpm1DXJCJvN99GiH3pbT  ```  ","title":"Building Vue and Node Apps with Authentication"},{"id":327,"location":"/certificate/2021-06-03_linkedin_Project_Management_Simplified_PMI.html","tags":["project-management"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Project Management Simplified Course completed on Jun 02, 2021 at 12:45AM UTC  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                                      LinkedIn Learning                                                                    1000 W Maude Ave Head of Content Strategy, Learning                                 Sunnyvale, CA 94085                         The PMI Registered Education Provider logo is a registered mark of the Project Management Institute, Inc.     Program: PMI® Registered Education Provider | Provider ID: #4101 Certificate No: ARe7Cpjx3DB_c9YlCASAbXUBk8Gi PDUs/ContactHours: 1.50 | Activity #: 4101W7SDCV  ```  ","title":"Project Management Simplified PMI"},{"id":328,"location":"/certificate/2021-06-18_udemy_Aprenda_a_criar_indicadores_técnicos_de_investimentos_MQL5.html","tags":["mql5","money"],"text":" ```  ```  ","title":"Aprenda a criar indicadores técnicos de investimentos MQL5"},{"id":329,"location":"/certificate/2021-06-18_udemy_Robôs_de_investimentos_MQL5_tópicos_avançados.html","tags":["mql5","money"],"text":" ```  ```  ","title":"Robôs de investimentos MQL5 tópicos avançados"},{"id":330,"location":"/certificate/2021-06-21_udemy_Analise_Técnica_para_investidores_e_analistas_quant.html","tags":["money","investing"],"text":" ```  ```  ","title":"Analise Técnica para investidores e analistas quant"},{"id":331,"location":"/certificate/2021-09-12_linkedin_C++_Design_Patterns_Behavioral.html","tags":["C++"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   C++ Design Patterns: Behavioral Course completed on Sep 12, 2021 at 02:10PM UTC • 3 hours 29 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AVlC7C7QEO5C19Av4e2mojyWOu_X  ```  ","title":"C++ Design Patterns Behavioral"},{"id":332,"location":"/certificate/2021-09-12_linkedin_Design_Patterns_Creational.html","tags":["design-pattern"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Design Patterns: Creational Course completed on Sep 12, 2021 at 02:59PM UTC • 48 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AYwjWh1IlumBtYDwE2Q1svt2jcaL  ```  ","title":"Design Patterns Creational"},{"id":333,"location":"/certificate/2021-09-14_linkedin_Choosing_a_CrossPlatform_Development_Tool.html","tags":["development"],"text":" Certificate of Completion  Congratulations, Geraldo Ribeiro  Choosing a Cross-Platform Development Tool  Course completed on Sep 14, 2021 at 02:56PM UTC • 40 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.  Head of Content Strategy, Learning  LinkedIn Learning 1000 W Maude Ave Sunnyvale, CA 94085  Certificate Id: AXEshNtUCX0Ne0exiDd-jZI0EyuT  ","title":"Choosing a Cross-Platform Development Tool"},{"id":334,"location":"/certificate/2021-09-17_linkedin_Vue.js_Testing_and_Debugging.html","tags":["vue"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Vue.js: Testing and Debugging Course completed on Sep 17, 2021 at 04:11PM UTC • 1 hour 19 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AQuhda57WlP_g7XY3o9o44oHl5P4  ```  ","title":"Vue.js Testing and Debugging"},{"id":335,"location":"/certificate/2021-10-10_TryHackMe_Badge_webbed.html","tags":["security"],"text":" ``` 10/10/2021 15:51                                                              TryHackMe | User Badge                                                                                                            254166                                                            geraldolsribeiro                             Rank                                                                  was awarded a badge                                                                                                          1                                                                                                         Level                                                                         Webbed                                                    Understands how the world wide web works                                                           Come learn all things security at TryHackMe     https://tryhackme.com/geraldolsribeiro/badges/web-fund                                                          1/2 10/10/2021 15:51                                         TryHackMe | User Badge     https://tryhackme.com/geraldolsribeiro/badges/web-fund                            2/2  ```  ","title":"TryHackMe Badge webbed"},{"id":336,"location":"/certificate/2021-10-18_stefanini_aprendendo_a_lidar_com_as_mudanças.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:  APRENDENDO A LIDAR COM AS MUDANÇAS                   Concluído em:                 18/Outubro/2021  ```  ","title":"aprendendo a lidar com as mudanças"},{"id":337,"location":"/certificate/2021-10-18_stefanini_Growth_Mindset.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:               GROWTH MINDSET                   Concluído em:                 18/Outubro/2021  ```  ","title":"Growth Mindset"},{"id":338,"location":"/certificate/2021-10-19_stefanini_AGILE_2.0.html","tags":["agile"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:                    AGILE 2.0                   Concluído em:                 19/Outubro/2021  ```  ","title":"AGILE 2.0"},{"id":339,"location":"/certificate/2021-10-19_stefanini_ERGONOMIA_EM_HOME_OFFICE.html","tags":["ergonomia","home-office"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:         ERGONOMIA EM HOME OFFICE                   Concluído em:                 19/Outubro/2021 Descrição:     Orientações de ergonomia voltado para trabalho home office.   Objetivo:   Orientar os profissionais quanto a ergonomia no seu ambiente home office.     Conteúdo Programático:   •   O que é ergonomia; •   Dicas de ergonomia; •   Como se adaptar em ambiente home office; •   Dicas de alongamento.  ```  ","title":"ERGONOMIA EM HOME OFFICE"},{"id":340,"location":"/certificate/2021-10-19_stefanini_EXCEL_2013-CURSO_BÁSICO.html","tags":["excel","office"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 02:00 horas o curso:          EXCEL 2013 - CURSO BÁSICO                   Concluído em:                 19/Outubro/2021  ```  ","title":"EXCEL 2013 CURSO BÁSICO"},{"id":341,"location":"/certificate/2021-10-19_stefanini_EXCEL_2013-CURSO_INTERMEDIÁRIO.html","tags":["excel","office"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 02:00 horas o curso:     EXCEL 2013 - CURSO INTERMEDIÁRIO                   Concluído em:                 19/Outubro/2021  ```  ","title":"EXCEL 2013 CURSO INTERMEDIÁRIO"},{"id":342,"location":"/certificate/2021-10-19_stefanini_INTRODUÇÃO_AO_SCRUM.html","tags":["scrum"],"text":" ``` 2                        Certificamos que:              Geraldo Luis Da Silva Ribeiro      Concluiu com carga horária de 04:00 horas o curso:                INTRODUÇÃO AO SCRUM                       Concluído em:                     19/Outubro/2021  ```  ","title":"INTRODUÇÃO AO SCRUM"},{"id":343,"location":"/certificate/2021-10-19_stefanini_METODOLOGIA_ÁGIL.html","tags":["agile"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:              METODOLOGIA ÁGIL                   Concluído em:                 19/Outubro/2021  ```  ","title":"METODOLOGIA ÁGIL"},{"id":344,"location":"/certificate/2021-10-19_stefanini_ORIENTAÇÃO_PARA_CLIENTES.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:          ORIENTAÇÃO PARA CLIENTES                   Concluído em:                 19/Outubro/2021  ```  ","title":"ORIENTAÇÃO PARA CLIENTES"},{"id":345,"location":"/certificate/2021-10-19_stefanini_ORIENTAÇÃO_PARA_RESULTADOS.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:       ORIENTAÇÃO PARA RESULTADOS                   Concluído em:                 19/Outubro/2021  ```  ","title":"ORIENTAÇÃO PARA RESULTADOS"},{"id":346,"location":"/certificate/2021-10-20_stefanini_A_agilidade_da_Cloud_no_mundo_Digital.html","tags":["cloud"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:      A agilidade da Cloud no mundo Digital                   Concluído em:                 20/Outubro/2021  ```  ","title":"A agilidade da Cloud no mundo Digital"},{"id":347,"location":"/certificate/2021-10-20_stefanini_COMUNICAÇÃO_DE_ALTO_IMPACTO.html","tags":["soft-skill"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 06:00 horas o curso:       COMUNICAÇÃO DE ALTO IMPACTO                   Concluído em:                 20/Outubro/2021  ```  ","title":"COMUNICAÇÃO DE ALTO IMPACTO"},{"id":348,"location":"/certificate/2021-10-20_stefanini_POWERPOINT_2013-CURSO_BÁSICO.html","tags":["powerpoint","office"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 02:00 horas o curso:      POWERPOINT 2013 - CURSO BÁSICO                   Concluído em:                 20/Outubro/2021  ```  ","title":"POWERPOINT 2013 CURSO BÁSICO"},{"id":349,"location":"/certificate/2021-10-20_stefanini_POWERPOINT_2013-CURSO_INTERMEDIÁRIO.html","tags":["powerpoint","office"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 02:00 horas o curso:  POWERPOINT 2013 - CURSO INTERMEDIÁRIO                   Concluído em:                 20/Outubro/2021  ```  ","title":"POWERPOINT 2013 CURSO INTERMEDIÁRIO"},{"id":350,"location":"/certificate/2021-10-22_stefanini_Testes_Automatizados_WEB.html","tags":["testing","devops"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 02:00 horas o curso:            Testes Automatizados WEB                   Concluído em:                 22/Outubro/2021 Descrição     Objetivo     Conteúdo  ```  ","title":"Testes Automatizados WEB"},{"id":351,"location":"/certificate/2021-11-03_stefanini_Fundamentos_do_GIT_Testes_de_API.html","tags":["git","testing","devops"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:        Fundamentos do GIT Testes de API                    Concluído em:                 3/Novembro/2021 Descrição     Aprenda os principais comandos para o GIT e teste API, monitore e crie documentações.     Objetivo     Demonstrar os objetivos do GIT, principais comandos e criar um projeto de testes automatizados de API com POSTMAN.     Conteúdo     •   Fundamentos e conceitos do GIT •   O que é uma API? •   O que é um Swagger? •   O que são testes de API? •   Como fazer testes de API? •   Postman •   Utilizando o swagger para os testes de API •   Verificando os relatórios  ```  ","title":"Fundamentos do GIT Testes de API"},{"id":352,"location":"/certificate/2021-11-04_stefanini_Tutorial_Sophie_ChatBot.html","tags":["chatbot"],"text":" ```               Certificamos que:         Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 00 horas a trilha:            Tutorial Sophie ChatBot                  Concluído em:  ```  ","title":"Tutorial Sophie ChatBot"},{"id":353,"location":"/certificate/2021-11-14_linkedin_Da_Vitimização_a_Ação.html","tags":["soft-skill"],"text":" ``` Certificado de conclusão Parabéns, Geraldo Ribeiro   Da Vitimização à Ação: Como Assumir o Controle Curso concluído em nov 14, 2021 at 06:05PM UTC • 56 min  Com essa rota de aprendizagem, você expandiu suas habilidades, aperfeiçoou suas competências e ampliou suas perspectivas de carreira.                                                          LinkedIn Learning Líder de Estratégia de                                1000 W Maude Ave Conteúdo, Learning                                    Sunnyvale, CA 94085     Código do certificado: AStee14lyOt1GqO7aIbRsp_lOsKA  ```  ","title":"Da Vitimização a Ação"},{"id":354,"location":"/certificate/2021-11-17_stefanini_Treinamento_SGA_ISO_14001.html","tags":["iso"],"text":" ```                Certificamos que:          Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:           Treinamento SGA ISO 14001                   Concluído em:                17/Novembro/2021     INFORMAÇÕES COMPLEMENTARES   Objetivo:  Dar ciência aos profissionais da Stefanini sobre seus objetivos ambientais.    Conteúdo Programático: •   Politica Ambiental •   Aspectos e Impactos Ambientais dos controles operacionais •   Objetivos e metas ambientais •   Requisitos Legais •   Riscos e Oportunidades     Instrutor:  Washington Andre De Souza  ```  ","title":"Treinamento SGA ISO 14001"},{"id":355,"location":"/certificate/2022-01-11_stefanini_Integração_SMS.html","tags":["soft-skill"],"text":" ```                Certificamos que:           Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 02:00 horas o curso:                  Integração SMS                   Concluído em:                  11/Janeiro/2022 Objetivo: Apresentar o setor de SMS e orientar todos os profissionais recém-contratados sobre as noções básicas de saúde, segurança do trabalho, meio ambiente e inclusão social.     Conteúdo:     • Conhecendo a política de saúde e segurança do trabalho; • Conhecendo a política de meio ambiente; • Conhecendo a comunidade do SMS; • Conhecendo o portal de governança; • Objetvo; • Conhecendo o SMS; • PCMSO; • Fluxograma de realização dos exames ocupacionais; • Procedimento de entrega de atestado médico; • Controle de atestado -CID; • PPRA; • Acidentes de trabalho, e ocorrências em vias públicas; • Segurança no escritório; • Segurança em home office; • Circulação e procedimentos de emergência; • Proteção contra incêndio; • Ergonomia; • Treinamento e capacitação; • Home office: como se adaptar; • Consumo de água, e consumo de papel; • Consumo de energia elétrica; • Redução de emissão de CO2; • Coleta seletiva; • Objetivo da inclusão social; • Acessibilidade; • Telefones de emergência. Instrutor : Paulo Henrique Spercel  ```  ","title":"Integração SMS"},{"id":356,"location":"/certificate/2022-01-11_stefanini_NR1_Ordem_de_Serviço.html","tags":["soft-skill"],"text":" ```                Certificamos que:           Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:           NR 01 - ORDEM DE SERVIÇO                   Concluído em:                  11/Janeiro/2022 Objetivo: Orientar todos os profissionais recém contratados sobre as noções básicas de saúde e segurança do trabalho.   Conteúdo Programático     •   Objetivo da norma; •   Direitos e Deveres; •   Ordem de Serviço; •   Exames Médicos; •   Aplicação da NR; •   EPI; •   Ato faltoso; •   Capacitação e treinamento em Segurança e Saúde do Trabalho  ```  ","title":"NR1 Ordem de Serviço"},{"id":357,"location":"/certificate/2022-04-02_refactoring.guru_certificate-refactoring.html","tags":["development","refactoring","devops"],"text":" ``` CERTIFICATE of COMPLETION  Geraldo Ribeiro on April 2nd, 2022 successfully completed the course “Dive Into Refactoring”                  2022-04-02          Author & Instructor               #000092870          Alexander Shvets  Certificate URL: refactoring.guru/cert/r/OTI4NzA  ```  ","title":"certificate refactoring"},{"id":358,"location":"/certificate/2022-06-02_stefanini_AFL_Academia_de_Formação_de_Líderes.html","tags":["leadership","soft-skill"],"text":" ```                 Certificamos que:            Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 34:40 horas a trilha: AFL - Academia de Formação de Líderes Necxt 2022                    Concluído em:                    02/06/2022  ```  ","title":"AFL Academia de Formação de Líderes"},{"id":359,"location":"/certificate/2022-06-02_stefanini_Crucial_Role_of_Penetration_Testing_and_Vulnerability_Assessments_in_Cybersecurity.html","tags":["security","pentest","owasp"],"text":" ```                     This certificate is proudly presented to:                         Geraldo Luis Da Silva Ribeiro                                   Has completed Crucial role of Penetration Testing & Vulnerability Assessments in Cybersecurity                                       On:                                  Junho/2/2022  ```  ","title":"Crucial Role of Penetration Testing and Vulnerability Assessments in Cybersecurity"},{"id":360,"location":"/certificate/2022-06-02_stefanini_Squads.html","tags":["development","devops"],"text":" ```                  Certificamos que:         Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:                     SQUADS                    Concluído em:                  2/Junho/2022 DESCRIÇÃO:     Apresentar os conceitos de Squads, as suas características, diferenças entre grupo e squads e suas vantagens.   OBJETIVO     Apresentar os conceitos de Squads, as suas características, diferenças entre grupo e squads e suas vantagens.   CONTEÚDO PROGRMÁTICO   Introdução   Squads   Diferença entre Grupos e Squads   Caracteristicas   Vantagens  ```  ","title":"Squads"},{"id":361,"location":"/certificate/2022-06-14_linkedin_AWS_for_Developers_PayPal_Payment_Processing_with_Lambdas.html","tags":["aws","lambda","money"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   AWS for Developers: PayPal Payment Processing with Lambdas Course completed on Jun 14, 2022 at 06:53PM UTC • 1 hour 4 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AW_d_BKD8xtq1B4iJ7sRO-YgD39q  ```  ","title":"AWS for Developers PayPal Payment Processing with Lambdas"},{"id":362,"location":"/certificate/2022-06-23_linkedin_Advanced_SEO_Developing_an_SEO_Friendly_Website.html","tags":["seo"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Advanced SEO: Developing an SEO-Friendly Website Course completed on Jun 23, 2022 at 09:29PM UTC • 2 hours 38 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Ac7O-RXIMWJQmtz-6mc4SUddRrdr  ```  ","title":"Advanced SEO Developing an SEO Friendly Website"},{"id":363,"location":"/certificate/2022-06-23_linkedin_HTML_Metadata_in_the_Head.html","tags":["html","seo"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   HTML: Metadata in the Head Course completed on Jun 23, 2022 at 07:23PM UTC • 1 hour 25 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Af_TpF67WzBO8Z-av88uuABEfS9n  ```  ","title":"HTML Metadata in the Head"},{"id":364,"location":"/certificate/2022-06-23_linkedin_HTML_Structured_Semantic_Data.html","tags":["html","seo"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   HTML: Structured Semantic Data Course completed on Jun 23, 2022 at 06:38PM UTC • 1 hour 34 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Af8GGNmJyrSx4Xh7oTNoajoxSoCf  ```  ","title":"HTML Structured Semantic Data"},{"id":365,"location":"/certificate/2022-06-27_linkedin_Advanced_SEO_Search_Factors.html","tags":["seo"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Advanced SEO: Search Factors Course completed on Jun 27, 2022 at 07:54PM UTC • 1 hour 11 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: ATbcfCTKPe5Q2gxRtq13hp--Ftdn  ```  ","title":"Advanced SEO Search Factors"},{"id":366,"location":"/certificate/2022-06-27_linkedin_Improve_SEO_for_Your_Website.html","tags":["seo"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Improve SEO for Your Website Course completed on Jun 27, 2022 at 08:32PM UTC • 1 hour 10 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AfMkxqrWygJUdrYSljWnNyB3E57a  ```  ","title":"Improve SEO for Your Website"},{"id":367,"location":"/certificate/2022-07-01_kultivi_Oratória_de_alta_performance.html","tags":["oratory"],"text":" ```  CERTIFICADO DE PARTICIPAÇÃO    Geraldo Ribeiro   Concluiu com sucesso o curso Oratória de alta                                                                                      Data de emissão: 01/07/2022 14:27 performance, com carga horária estimada de 3h.                                                                                        efbcf7f3-feab-4353-8a15-03ff9953713d                                   KULTIVI - PRODUCAO E EDICAO DE CONTEUDO LTDA - CNPJ: 28.186.806/0001-35  ```  ","title":"Oratória de alta performance"},{"id":368,"location":"/certificate/2022-07-20_appsecengineer_DevSecOps_SAST_and_Code_Review_for_DevSecOps.html","tags":["sast","security","devsecops","code-review","testing"],"text":" ```  ```  ","title":"appsecengineer DevSecOps SAST and Code Review for DevSecOps"},{"id":369,"location":"/certificate/2022-07-20_linkedin_Build_Your_Own_Professional_Training_Quick_Start_Guide.html","tags":["soft-skill"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Build Your Own Professional Training: Quick Start Guide Course completed on Jul 20, 2022 at 06:26PM UTC • 38 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AVTOAoEGttSTa9v7HwdtngXFZSuu  ```  ","title":"Build Your Own Professional Training Quick Start Guide"},{"id":370,"location":"/certificate/2022-07-20_linkedin_Creating_Fun_and_Engaging_Video_Training_The_How.html","tags":["soft-skill","video"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Creating Fun and Engaging Video Training: The How Course completed on Jul 20, 2022 at 05:33PM UTC • 29 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AeeXXV17KfcUDi4--qFnFlGVbqY5  ```  ","title":"Creating Fun and Engaging Video Training The How"},{"id":371,"location":"/certificate/2022-07-20_linkedin_Creating_Fun_and_Engaging_Video_Training_The_Why.html","tags":["soft-skill","video"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Creating Fun and Engaging Video Training: The Why Course completed on Jul 20, 2022 at 05:53PM UTC • 21 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AV9NK5Yw8RMuOnFOKcg6AR2BonbR  ```  ","title":"Creating Fun and Engaging Video Training The Why"},{"id":372,"location":"/certificate/2022-07-20_linkedin_Dynamic_Application_Security_Testing_DAST.html","tags":["dast","security","testing","devsecops"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Dynamic Application Security Testing (DAST) Course completed on Jul 20, 2022 at 07:30PM UTC • 3 hours 19 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AXQC262e1KAeXzepJeiutVrgJg2T  ```  ","title":"Dynamic Application Security Testing DAST"},{"id":373,"location":"/certificate/2022-07-21_linkedin_CSSLP_Cert_Prep_4_Secure_Software_Implementation.html","tags":["isc","security","devsecops"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   CSSLP Cert Prep: 4 Secure Software Implementation Course completed on Jul 21, 2022 at 07:38PM UTC • 1 hour 29 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Aan7EeLSTAuB2dsQFTTr9abtoemC  ```  ","title":"CSSLP Cert Prep 4 Secure Software Implementation"},{"id":374,"location":"/certificate/2022-07-22_linkedin_CSSLP_Cert_Prep_The_Basics.html","tags":["isc","security","devsecops"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   CSSLP Cert Prep: The Basics Course completed on Jul 22, 2022 at 04:36PM UTC • 1 hour 10 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AUuMLDI05LWf4ASs3RK2Y0CALZ3i  ```  ","title":"CSSLP Cert Prep The Basics"},{"id":375,"location":"/certificate/2022-07-25_linkedin_CSSLP_Cert_Prep_2_Secure_Software_Requirements.html","tags":["isc","security","devsecops"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   CSSLP Cert Prep: 2 Secure Software Requirements Course completed on Jul 25, 2022 at 09:17PM UTC • 1 hour 31 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: ATYHXEVyPpxz-NDKFHlaJHLd0pJf  ```  ","title":"CSSLP Cert Prep 2 Secure Software Requirements"},{"id":376,"location":"/certificate/2022-07-27_linkedin_CSSLP_Cert_Prep_3_Secure_Software_Design.html","tags":["isc","security","devsecops"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   CSSLP Cert Prep: 3 Secure Software Design Course completed on Jul 27, 2022 at 07:49PM UTC • 2 hours 6 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Ac2pXj0j7LpHPLVqvgtiauQdm3hu  ```  ","title":"CSSLP Cert Prep 3 Secure Software Design"},{"id":377,"location":"/certificate/2022-07-30_linkedin_Learning_Nuxt.js.html","tags":["nuxt","vue"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Learning Nuxt.js Course completed on Jul 30, 2022 at 11:54PM UTC • 1 hour 32 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: ATSKd9gB_jQpQ7szU19Duy_ipvIq  ```  ","title":"Learning Nuxt.js"},{"id":378,"location":"/certificate/2022-07-30_linkedin_Learning_Vuex.html","tags":["vue"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Learning Vuex Course completed on Jul 30, 2022 at 03:29PM UTC • 1 hour 15 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AYgNzv-VR49yXui1UGOA4gHVq9Kt  ```  ","title":"Learning Vuex"},{"id":379,"location":"/certificate/2022-08-04_stefanini_Nuxt.js_2.html","tags":["nuxt","vue"],"text":" ```              Certificamos que:        Geraldo Luis da Silva Ribeiro  Concluiu com carga horária de 5 horas o curso:               Curso NuxtJS 2                 Concluído em:               04/Agosto/2022  ```  ","title":"Nuxt.js 2"},{"id":380,"location":"/certificate/2022-08-18_stefanini_Tailwind_CSS_2.html","tags":["tailwind"],"text":" ```              Certificamos que:        Geraldo Luis da Silva Ribeiro  Concluiu com carga horária de 4 horas o curso:               Tailwind CSS 2                 Concluído em:               18/Agosto/2022  ```  ","title":"Tailwind CSS 2"},{"id":381,"location":"/certificate/2022-08-31_stefanini_Golang_para_Web.html","tags":["go"],"text":" ```              Certificamos que:        Geraldo Luis da Silva Ribeiro  Concluiu com carga horária de 5 horas o curso:              GoLang para Web                 Concluído em:               31/Agosto/2022  ```  ","title":"Golang para Web"},{"id":382,"location":"/certificate/2022-08-31_stefanini_Python_Machine_Learning.html","tags":["python","machine-learning"],"text":" ``` Declaramos que Geraldo Luis da Silva Ribeiro atendeu o curso: Python Machine Learning com carga horária de 6 horas na data de 31/08/2022  Parabéns por esta conquista!  ```  ","title":"Python Machine Learning"},{"id":383,"location":"/certificate/2022-09-02_linkedin_Creating_Brand_Identity_Assets.html","tags":["marketing"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Creating Brand Identity Assets Course completed on Sep 03, 2022 at 06:48PM UTC • 1 hour 5 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: ASIa4KYSTKSUwTPv5SpduxvKRjZh  ```  ","title":"Creating Brand Identity Assets"},{"id":384,"location":"/certificate/2022-09-02_stefanini_Desenvolvimento_Seguro.html","tags":["security","owasp","owasp-zap","sonarqube","devsecops"],"text":" ```                  Certificamos que:         Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:            Desenvolvimento Seguro                    Concluído em:                2/Setembro/2022  ```  ","title":"Desenvolvimento Seguro"},{"id":385,"location":"/certificate/2022-09-02_stefanini_Redis.html","tags":["redis"],"text":" ``` Declaramos que Geraldo Luis da Silva Ribeiro atendeu o curso: Redis com carga horária de 1 hora na data de 02/09/2022  Parabéns por esta conquista!  ```  ","title":"Redis"},{"id":386,"location":"/certificate/2022-09-02_stefanini_Segurança_da_Informação.html","tags":["security","owasp"],"text":" ```                  Certificamos que:         Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:        SEGURANÇA DA INFORMAÇÃO                    Concluído em:                2/Setembro/2022 •   Apresentação •   O que acontece no mundo? •   O que é a Segurança da Informação? •   ISO 27001 •   Elementos de Segurança da Informação •   CID (CIA) •   Ameaças •   incidentes de Segurança causam... •   Fontes de vulnerabilidade •   Phishing •   Framework •   Política •   Responsável pelo ISMS •   Fluxo Procedimentos Disciplinar •   Como se proteger?  ```  ","title":"Segurança da Informação"},{"id":387,"location":"/certificate/2022-09-02_stefanini_Terraform_com_AWS.html","tags":["terraform","aws","devops"],"text":" ```              Certificamos que:        Geraldo Luis da Silva Ribeiro  Concluiu com carga horária de 4 horas o curso: Curso de Terraform com AWS em Português                 Concluído em:              02/Setembro/2022  ```  ","title":"Terraform com AWS"},{"id":388,"location":"/certificate/2022-09-03_linkedin_Building_a_Home_IT_Lab_2020.html","tags":["lxc","vmware","virtualbox","proxmox","container"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Building a Home IT Lab (2020) Course completed on Sep 02, 2022 at 06:47PM UTC • 51 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AV-Eu3Gl6wCADPceaGRVycyjuXcB  ```  ","title":"Building a Home IT Lab 2020"},{"id":389,"location":"/certificate/2022-09-04_nodestudio_Materialize_CSS_para_Iniciantes.html","tags":["materializecss"],"text":" ``` Node Studio Treinamentos tem a honra de conferir a                  Geraldo Luis Da Silva Ribeiro            O certificado por sua participação no    Materialize CSS para iniciantes                           Carga horária: 3 hora(s)                              Data: 04/09/2022     O presente certificado poderá ser validado no endereço: http://www.nodestudio.com.br              Para realizar a validação, informe o código do certificado: 58785275  ```  ","title":"Materialize CSS para Iniciantes"},{"id":390,"location":"/certificate/2022-09-05_linkedin_Building_a_Home_IT_Lab_2022.html","tags":["lxc","vmware","virtualbox","proxmox","container"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Building a Home IT Lab Course completed on Sep 05, 2022 at 05:34PM UTC • 2 hours 16 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Aay-P-pxtICI1PHVN0rIDseERQmg  ```  ","title":"Building a Home IT Lab 2022"},{"id":391,"location":"/certificate/2022-09-09_stefanini_ISO_27001_Segurança_da_Informação.html","tags":["security","iso"],"text":" ```                  Certificamos que:         Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 00:30 horas o curso:     ISO 27001 - Segurança da Informação                    Concluído em:                  9/Setembro/2022 ```  ","title":"ISO 27001 Segurança da Informação"},{"id":392,"location":"/certificate/2022-09-12_linkedin_Docker_for_Developers.html","tags":["docker","container"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Docker for Developers Course completed on Sep 12, 2022 at 06:31PM UTC • 1 hour 15 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AcRSixl2qnGcUFRe9imgdD8sL3O6 ``` ","title":"Docker for Developers"},{"id":393,"location":"/certificate/2022-09-12_linkedin_Introduction_to_Network_Routing.html","tags":["network","routing"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Introduction to Network Routing Course completed on Sep 12, 2022 at 01:52PM UTC • 1 hour 15 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: ATB67QHmYpwruC7ElpJVBiZvS_Pq \f ``` ","title":"Introduction to Network Routing"},{"id":394,"location":"/certificate/2022-09-16_stefanini_Paradigmas_de_Linguagem_de_Programação.html","tags":["programming"],"text":" ```              Certificamos que:        Geraldo Luis da Silva Ribeiro  Concluiu com carga horária de 6 horas o curso: Paradigmas de Linguagem de Programação                 Concluído em:              16/Setembro/2022 \f ``` ","title":"Paradigmas de Linguagem de Programação"},{"id":395,"location":"/certificate/2022-09-28_linkedin_Gulp.js_Web_Project_Workflows.html","tags":["gulp"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Gulp.js: Web Project Workflows Course completed on Sep 28, 2022 at 07:27PM UTC • 59 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: AXri6yZx33-sjVIDRHmV4O-IDbZr ``` ","title":"Gulp.js Web Project Workflows"},{"id":396,"location":"/certificate/2022-09-16_stefanini_Soft_Skill.html","tags":["soft-skill"],"text":" ```              Certificamos que:        Geraldo Luis da Silva Ribeiro  Concluiu com carga horária de 2 horas o curso:                  Soft Skill                 Concluído em:              16/Setembro/2022 ``` ","title":"stefanini Soft Skill"},{"id":397,"location":"/til/gnuplot-como-criar-animacao.html","tags":["gnuplot","gif","animação"],"text":" A partir da versão 4.6 do [gnuplot](http://www.gnuplot.info/) está bem mais fácil criar uma animação. Algumas vezes uma animação deixa as coisas mais fáceis de serem entendidas.  O segredo está no em configurar a saída para `gif animate` no comando `set term`.  ```bash # Uma animação simples de um sen(x+t) reset set term gif animate set output \"animacao_do_seno.gif\" n=24    # quantidade de frames a serem gerados dt=2*pi/n set xrange [0:4*pi] i=0     # contador de frames load \"animate.gnuplot\" set output ```  O arquivo `animate.gnuplot` contem os comandos:  ```bash # Arquivo animate.gnuplot plot sin(x+i*dt) w l lt 1 lw 1.5 title sprintf(\"t=%i\",i) i=i+1 if (i < n) reread ```  Note que este arquivo irá se recarregar mais 23 vezes através do `reread` para plotar cada um dos 24 frames da animação.  Ao executar o script obteremos a seguinte animação:  ![img](/til/animacao_do_seno.webp)   ## Referências  * [Creating gif animation using gnuplot](http://gnuplot-surprising.blogspot.com/2011/09/creating-gif-animation-using-gnuplot.html) ","title":"Criando um gif animado com o gnuplot"},{"id":398,"location":"/til/english-present-tense.html","tags":["english"],"text":" ## Present Simple  * something that is true in the present * something that happens regularly in the present * something that is always true * we often use *adverbs of frequency* link **sometimes**, **always** and **never** with the present simple * something that is fixed in the future * something in the future after *time words* like **when**, **after**, **before**, **if** and **unless**  ## Present perfect  * `[VERB HAVE] + [PAST PARTICIPLE OF A VERB]` * for something that started in the past and continues in the present * when we are talking about our experience up to the present  ## Present perfect continuous  * `[VERB HAVE] + [-ING FORM]` * we normally use the present perfect continuous to emphasize that something is still continuing in the present  ## Reference  * <https://learnenglish.britishcouncil.org/grammar/english-grammar-reference/present-simple> ","title":"Present Tense"},{"id":399,"location":"/til/xdg-mime.html","tags":["xdg-mime"],"text":" ## Query  ```bash xdg-mime query default inode/directory code.desktop ```  The sample output above indicates that **VS Code** is currently configured as default application to open folders.  ## Set  ```bash xdg-mime default thunar.desktop inode/directory # or xdg-mime default   fman.desktop inode/directory # or xdg-mime default   nemo.desktop inode/directory ```  ## References  * https://www.linuxquestions.org/questions/slackware-14/wrong-application-for-opening-directories-with-xdg-open-4175619886/ ","title":"xdg-mime"},{"id":400,"location":"/til/cpp-libevent.html","tags":["libevent"],"text":"## Asynchronous I/O  ::: youtube id=\"OGJRaUu8_Yw\" title=\"ECE 252 Lecture 29: Asynchronous I/O with libevent\"  ","title":"libevent"},{"id":401,"location":"/til/english-nouns.html","tags":["english","grammar","noun"],"text":"A *noun* is a word used to name a person, place, thing, or idea.  ## Types  * Proper * Common * Concrete * Abstract * Collective * Compound  ::: note **A *noum* can belong to more than one group.** <br> For example, *suntan lotion* is both a common and concrete noun, as well as a compound noun.   ## Singular and Plural  * The plural of most nouns is formed by adding **-s**. * For nouns ending in **s**, **x**, **z**, and **ch**, add **-es**. * Nouns ending in **f** or **fe** form their plural by changing the **f** or   **fe** to **v** and adding **-es**.  ","title":"Nouns"},{"id":402,"location":"/til/update-nginx-on-centos-8.html","tags":["nginx","centos"],"text":" To address the security issue [CVE-2019-20372](https://nvd.nist.gov/vuln/detail/cve-2019-20372) I needed to update the Nginx version to the current stable.  Remove the old nginx:  ```bash sudo systemctl stop nginx sudo dnf remove nginx sudo dnf install dnf-utils ```  Create the repo file:  ```bash cat <<EOF > /etc/yum.repos.d/nginx.repo [nginx-stable] name=nginx stable repo baseurl=http://nginx.org/packages/centos/$releasever/$basearch/ gpgcheck=1 enabled=1 gpgkey=https://nginx.org/keys/nginx_signing.key module_hotfixes=true  [nginx-mainline] name=nginx mainline repo baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/ gpgcheck=1 enabled=0 gpgkey=https://nginx.org/keys/nginx_signing.key module_hotfixes=true EOF ```  Install and enable the nginx again.  ```bash sudo yum-config-manager --enable nginx-mainline sudo dnf install nginx sudo systemctl start nginx sudo systemctl start nginx ```  ## References  * [How to install the latest stable Nginx version on CentOS 8?](https://www.digitalocean.com/community/questions/how-to-install-the-latest-stable-nginx-version-on-centos-8)  ","title":"Update Nginx to the latest stable version on CentOS 8"},{"id":403,"location":"/til/iso-to-usb.html","tags":["iso","dd","boot"],"text":" To install a fresh version of the Debian I need to prepare a bootable USB stick.  First make sure I am writing on the right device. Yes, it is a very old 2GB USB stick.  ```bash fdisk -l | grep sdc Disco /dev/sdc: 1,9 GiB, 2017984000 bytes, 3941375 setores /dev/sdc1   *                0 774143  774144    378M  0 Vazia /dev/sdc2                 4060   9243    5184    2,5M ef EFI (FAT-12/16/32) ```  Then transfer the ISO image bit by bit to the USB stick:  ```bash dd \\    bs=4M \\   if=debian-live-11.5.0-amd64-standard.iso \\   of=/dev/sdc \\   status=progress \\   oflag=sync ```  ## References  * [Create Bootable Debian 10 USB Stick on Linux](https://linuxize.com/post/create-bootable-debian-10-usb-stick-on-linux/)  ","title":"How to create a bootable pendrive from ISO image"},{"id":404,"location":"/til/utterance.html","tags":["comments","github"],"text":" Today I found [utterance](https://utteranc.es/) in the comments section of a blog. Its looks like pretty simple to integrate and I trying it now.  ","title":"Utterance"},{"id":405,"location":"/til/vim-utf-character.html","tags":["vim","utf","digraph"],"text":" Use **Ctrl+V** then **u** and the **4 hex numbers** of the character.  Example 1: to type ■ U+25A0 Black square\t \t  ``` ^vu25a0 or ^vu25A0 ```  Example 2: to type · U+00B7 Middle dot  ``` ^vub7<esc> or ^vu00b7 ```    ","title":"How to type Unicode in Vim"},{"id":406,"location":"/til/pentest-ssh.html","tags":["pentest","ssh"],"text":" ```bash nmap -Pn -p22 --script ssh2-enum-algos 127.0.0.1 ```  ``` Starting Nmap 7.70 ( https://nmap.org ) at 2022-10-27 10:56 -03 Nmap scan report for localhost (127.0.0.1) Host is up (0.00018s latency).  PORT   STATE SERVICE 22/tcp open  ssh | ssh2-enum-algos:  |   kex_algorithms: (11) |       curve25519-sha256 |       curve25519-sha256@libssh.org |       ecdh-sha2-nistp256 |       ecdh-sha2-nistp384 |       ecdh-sha2-nistp521 |       diffie-hellman-group-exchange-sha256 |       diffie-hellman-group14-sha256 |       diffie-hellman-group16-sha512 |       diffie-hellman-group18-sha512 |       diffie-hellman-group-exchange-sha1 |       diffie-hellman-group14-sha1 |   server_host_key_algorithms: (5) |       rsa-sha2-512 |       rsa-sha2-256 |       ssh-rsa |       ecdsa-sha2-nistp256 |       ssh-ed25519 |   encryption_algorithms: (7) |       aes256-gcm@openssh.com |       chacha20-poly1305@openssh.com |       aes256-ctr |       aes256-cbc |       aes128-gcm@openssh.com |       aes128-ctr |       aes128-cbc |   mac_algorithms: (8) |       hmac-sha2-256-etm@openssh.com |       hmac-sha1-etm@openssh.com |       umac-128-etm@openssh.com |       hmac-sha2-512-etm@openssh.com |       hmac-sha2-256 |       hmac-sha1 |       umac-128@openssh.com |       hmac-sha2-512 |   compression_algorithms: (2) |       none |_      zlib@openssh.com ```   ## References  * [SSH WEAK KEY EXCHANGE ALGORITHMS ENABLED](https://www.virtuesecurity.com/kb/ssh-weak-key-exchange-algorithms-enabled/) ","title":"Pentesting ssh weak key exchange algorithms"},{"id":407,"location":"/til/english-phonetics.html","tags":["english","phonetics"],"text":" Some tips for better pronunciation:   ::: youtube id=\"QPOjASQau2s\" title=\"[Advanced] English phonetics - voiced and unvoiced sounds, consonants and vowels sounds\"  ::: youtube id=\"QW5CGt_sMTk\" title=\"APRENDE EL IPA Y DOMINARÁS TU PRONUNCIACIÓN EN INGLÉS PARA SIEMPRE - Alfabeto Fonético Internacional\"  ## Vowel  * a, e, i, o and u * 12 sounds  | vowel | IPA | duration | examples  | portuguese sound | |:-----:|:---:|:--------:|:---------:|:----------------:| | a     | ɑ:  | large    | car, far  | a aberta | | a     | æ   | short    | cat       | é nasal | | a     | ʌ   | short    | sun, up   | a | | e     | ɜ:  | large    | bird      | e com bico de o | | e     | e   | short    | pet, bed  | e | | e     | ə   | short    | teacher   | a (schwa)| | i     | i:  | large    | sheep     | i | | i     | I   | short    | ship, fit | i virando é |   | o     | ɔ:  | large    | door      | ó | | o     | ɒ   | short    | on        | ó | | u     | u:  | large    | shoot     | u | | u     | ʊ   | short    | good      | u |  ## Diphthongs  * 8 sounds  | IPA | example | portuguese sound | |:---:|:-------:|:----------------:| | Iə  | here    | ia | | ʊə  | tourist | ua | | eə  | hair    | éa | | əʊ  | show    | ou | | aʊ  | cow     | au | | aI  | my      | ai | | eI  | wait    | ei | | ɔI  | boy     | ói |  ## Consonants  * 24 sounds * voiceless, unvoiced (no vibration) * voiced   ### Unvoiced consonants  | IPA | example | portuguese sound | |:---:|:-------:|:----------------:| | p   | pea     | | | f   | free    | | | ɵ   | thing   | | | t   | tree    | | | s   | see     | | | ʃ   | sheep   | | | ʧ   | cheese  | | | k   | coin    | |  ### Voiced consonants  | IPA | example | portuguese sound | |:---:|:-------:|:----------------:| | b   | boat    | | | v   | video   | | | ð   | this    | | | d   | dog     | | | z   | zoo     | | | ʤ   | joke    | | | ʒ   | television | | | g   | go      | | | m   | mouse   | | | n   | now     | | | ŋ   | thing   | | | h   | hope    | | | w   | we      | | | l   | love    | | | r   | run     | | | j   | you     | |  ### Semivowels  * j you * w won  ## Patterns  ### A_cons_E → /eɪ/  * Jane * cane * plane  ### A_cons → /æ/  * jam * can * plan  ### E_cons_E → /ɪː/  * Pete * delete  ### E_cons → /e/  * pet * let  ### I or Y_cons_E → /ai/  * white * fine * pine * site * byte * Skype  ### I_cons → /i/  * wit * coffin * pin * sit * bit * skip   ### O_cons_E → /əʊ/  * code * woke * hope  ### O_cons → /ɒ/  * cod * wok * hop  ### U_cons_E → /juː/  * cute * tune  ### U_cons → /ʌ/  * cut * tun  ## IPA Extensions - Official Unicode Consortium code chart  <big>  |      |0|1|2|3|4|5|6|7|8|9|A|B|C|D|E|F| |------|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-| |U+025x|ɐ|ɑ|ɒ|ɓ|ɔ|ɕ|ɖ|ɗ|ɘ|ə|ɚ|ɛ|ɜ|ɝ|ɞ|ɟ| |U+026x|ɠ|ɡ|ɢ|ɣ|ɤ|ɥ|ɦ|ɧ|ɨ|ɩ|ɪ|ɫ|ɬ|ɭ|ɮ|ɯ| |U+027x|ɰ|ɱ|ɲ|ɳ|ɴ|ɵ|ɶ|ɷ|ɸ|ɹ|ɺ|ɻ|ɼ|ɽ|ɾ|ɿ| |U+028x|ʀ|ʁ|ʂ|ʃ|ʄ|ʅ|ʆ|ʇ|ʈ|ʉ|ʊ|ʋ|ʌ|ʍ|ʎ|ʏ| |U+029x|ʐ|ʑ|ʒ|ʓ|ʔ|ʕ|ʖ|ʗ|ʘ|ʙ|ʚ|ʛ|ʜ|ʝ|ʞ|ʟ| |U+02Ax|ʠ|ʡ|ʢ|ʣ|ʤ|ʥ|ʦ|ʧ|ʨ|ʩ|ʪ|ʫ|ʬ|ʭ|ʮ|ʯ|  * U+00F0 ð * U+014B ŋ * U+02D0 ː use colon instead  </big>  ## References  * [IPA vowel chart with audio](https://en.wikipedia.org/wiki/IPA_vowel_chart_with_audio) * [Phonetic symbols in Unicode](https://en.wikipedia.org/wiki/Phonetic_symbols_in_Unicode) * [Magic E: \"vowel-consonant-E\" pattern (fate — fat)](https://lingbase.com/en/english/grammar/magic-e) ","title":"English phonetics"},{"id":408,"location":"/til/english-irregular-verbs.html","tags":["english","verb"],"text":" ::: youtube id=\"jJ80IH15PTg\" title=\"Неправильные глаголы английского языка\"  ## References  * [Full list of English irregular verbs with pronunciation](https://lingbase.com/en/english/grammar/complete-list-of-irregular-verbs) ","title":"Irregular verbs"},{"id":409,"location":"/til/pandoc.html","tags":["pandoc","latex","markdown","pdf"],"text":" ## References  * [Converting Markdown to Beautiful PDF with Pandoc](https://jdhao.github.io/2019/05/30/markdown2pdf_pandoc/) ","title":"Converting Markdown to Beautiful PDF with Pandoc"},{"id":410,"location":"/til/term-exa.html","tags":["exa","ls","terminal"],"text":" ## Installation  ```bash apt install exa ```   ","title":"exa - Modern replacement for ls"},{"id":411,"location":"/til/english-third-person.html","tags":["English","third-person"],"text":" ::: toc  ## Writing in Third Person Academically  ### Use third person for all academic writing  For formal writing, such as research and argumentative papers, use the third person. Third person makes writing more objective and less personal. For academic and professional writing, this sense of objectivity allows the writer to seem less biased and, therefore, more credible.  Third person helps the writing stay focused on facts and evidence instead of personal opinion.  ### Use the correct pronouns  Third person refers to people “on the outside.” Either write about someone by name or use third person pronouns.  Third person pronouns include: he, she, it; his, her, its; him, her, it; himself, herself, itself; they; them; their; themselves.  Names of other people are also considered appropriate for third person use.  Example: “Smith believes differently. According to his research, earlier claims on the subject are incorrect.”  ### Avoid first person pronouns  First person refers to a point of view in which the writer says things from his or her personal perspective. This point of view makes things too personal and opinionated. Avoid first person in an academic essay.  First person pronouns include: I, me, my, mine, myself, we, us, our, ours, ourselves.  The problem with first person is that, academically speaking, it sounds too personalized and too subjective. In other words, it may be difficult to convince the reader that the views and ideas being expressed are unbiased and untainted by personal feelings. Many times, when using first person in academic writing, people use phrases like \"I think,\" \"I believe,\" or \"in my opinion.\"  Incorrect example: “Even though Smith thinks this way, I think his argument is incorrect.”  Correct example: “Even though Smith thinks this way, others in the field disagree.”  ### Avoid second person pronouns  Second person refers to point of view that directly addresses the reader. This point of view shows too much familiarity with the reader, by speaking to them directly, as if the writer personally knows his or her reading audience. Second person should never be used in academic writing.  Second person pronouns include: you, your, yours, yourself.  One main problem with second person is that it can sound accusatory. It runs to risk of placing too much responsibility on the shoulders of the reader specifically and presently reading the work.  Incorrect example: “If you still disagree nowadays, then you must be ignorant of the facts.”  Correct example: “Someone who still disagrees nowadays must be ignorant of the facts.”  ### Refer to the subject in general terms  Sometimes, a writer will need to refer to someone in indefinite terms. In other words, they may need to generally address or speak about a person. This is usually when the temptation to slip into the second person “you” comes into play. An indefinite third person pronoun or noun is appropriate here.  Indefinite third person nouns common to academic writing include: the writer, the reader, individuals, students, a student, an instructor, people, a person, a woman, a man, a child, researchers, scientists, writers, experts.  Example: “In spite of the challenges involved, researchers still persist in their claims.”  Indefinite third person pronouns include: one, anyone, everyone, someone, no one, another, any, each, either, everybody, neither, nobody, other, anybody, somebody, everything, someone.  Incorrect example: \"You might be tempted to agree without all the facts.\"  Correct example: “One might be tempted to agree without all the facts.”  ### Watch out for singular and plural pronoun use  One mistake that writers often make when writing in third person is accidentally conjugating a plural pronoun as singular.  This is usually done in an attempt to avoid the gender-specific “he” and “she” pronouns. The mistake here would be to use the “they” pronoun with singular conjugation.  Incorrect example: “The witness wanted to offer anonymous testimony. They was afraid of getting hurt if their name was spread.”  Correct example: “The witness wanted to offer anonymous testimony. They were afraid of getting hurt if their name was spread.”  ## Writing in Third Person Omniscient  ### Shift your focus from character to character  When using third person omniscient perspective, the narrative jumps around from person to person instead of following the thoughts, actions, and words of a single character. The narrator knows everything about each character and the world. The narrator can reveal or withhold any thoughts, feelings, or actions.  For instance, a story may include four major characters: William, Bob, Erika, and Samantha. At various points throughout the story, the thoughts and actions of each character should be portrayed. These thoughts can occur within the same chapter or block of narration.  Writers of omniscient narratives should be conscious of “head-hopping” — that is, shifting character perspectives within a scene. While this does not technically break the rules of Third Person Omniscience, it is widely considered a hallmark of narrative laziness.  This is a good voice to use if you want to remove yourself from the work so the readers don't confuse the narrator for you.  ### Reveal any information you want  With third person omniscient view, the narration is not limited the inner thoughts and feelings of any character. Along with inner thoughts and feelings, third person omniscient point of view also permits the writer to reveal parts of the future or past within the story. The narrator can also hold an opinion, give a moral perspective, or discuss animals or nature scenes where the characters are not present.[7]  In a sense, the writer of a third person omniscient story is somewhat like the “god” of that story. The writer can observe the external actions of any character at any time, but unlike a limited human observer, the writer can also peek into the inner workings of that character at will, as well.  Know when to hold back. Even though a writer can reveal any information he or she chooses to reveal, it may be more beneficial to reveal some things gradually. For instance, if one character is supposed to have a mysterious aura, it would be wise to limit access to that character's inner feelings for a while before revealing his or her true motives.  ### Avoid use of the first person and second person pronouns  Active dialog should be the only time that first person pronouns like “I” and “we” should appear. The same goes for second person pronouns like “you.”  Do not use first person and second person points of view in the narrative or descriptive portions of the text.  Correct example: Bob said to Erika, “I think this is creepy. What do you think?”  Incorrect example: I thought this was creepy, and Bob and Erika thought so, too. What do you think?  ## Writing in Third Person Limited  ### Pick a single character to follow  When writing in third person limited perspective, a writer has complete access to the actions, thoughts, feelings, and belief of a single character. The writer can write as if the character is thinking and reacting, or the writer can step back and be more objective.  The thoughts and feelings of other characters remain an unknown for the writer throughout the duration of the text. There should be no switching back and forth between characters for this specific type of narrative viewpoint.  Unlike first person, where the narrator and protagonist are the same, third person limited puts a critical sliver of distance between protagonist and narrator. The writer has the choice to describe one main character’s nasty habit — something they wouldn’t readily reveal if the narration were left entirely to them.  ### Refer to the character's actions and thoughts from the outside  Even though the focus remains on one character, the writer still needs to treat that character as a separate entity. If the narrator follows the character's thoughts, feelings, and internal dialogue, this still needs to be in third person.[9]  In other words, do not use first person pronouns like “I,” “me,” “my,” “we,” or “our” outside of dialog. The main character's thoughts and feelings are transparent to the writer, but that character should not double as a narrator.  Correct example: “Tiffany felt awful after the argument with her boyfriend.”  Correct example: “Tiffany thought, “I feel awful after that argument with my boyfriend.”  Incorrect example: “I felt awful after the argument with my boyfriend.”  ### Focus on other characters' actions and words, not their thoughts or feelings  The writer is as limited to just the protagonist's thoughts and feelings with this point of view. However, with this point of view, other characters can be described without the protagonist noticing it. The narrator can anything the protagonist can; she just can't get into the other character's head.[10]  Note that the writer can offer insight or guesses regarding the thoughts of other characters, but those guesses must be presented through the perspective of the main character.  Correct example: “Tiffany felt awful, but judging by the expression on Carl's face, she imagined that he felt just as bad if not worse.”  Incorrect example: “Tiffany felt awful. What she didn't know was that Carl felt even worse.”  ### Do not reveal any information your main character would not know  Although the narrator can step back and describe the setting or other characters, it has to be anything the viewpoint character can see. Do not bounce around from one character to one character within one scene. The external actions of other characters can only be known when the main character is present to view those actions.  Correct example: “Tiffany watched from the window as Carl walked up to her house and rang the doorbell.”  Incorrect example: “As soon as Tiffany left the room, Carl let out a sigh of relief.”  ## Writing in Episodically Limited Third Person  ### Jump from character to character  With episodically limited third person, also referred to as third person multiple vision, the writer may have a handful of main characters whose thoughts and perspectives take turns in the limelight. Use each perspective to reveal important information and move the story forward.  Limit the amount of pov characters you include. You don't want to have too many characters that confuse your reader or serve no purpose. Each pov character should have a specific purpose for having a unique point of view. Ask yourself what each pov character contributes to the story.  For instance, in a romance story following two main characters, Kevin and Felicia, the writer may opt to explain the inner workings of both characters at different moments in the story.  One character may receive more attention than any other, but all main characters being followed should receive attention at some point in the story.  ### Only focus on one character's thoughts and perspective at a time  Even though multiple perspectives are included in the overall story, the writer should focus on each character one at a time.  Multiple perspectives should not appear within the same narrative space. When one character's perspective ends, another character's can begin. The two perspectives should not be intermixed within the same space.  Incorrect example: “Kevin felt completely enamored of Felicia from the moment he met her. Felicia, on the other hand, had difficulty trusting Kevin.”   ### Aim for smooth transitions  Even though the writer can switch back and forth between different character perspectives, doing so arbitrarily can cause the narrative to become confusing for the narrative.  In a novel-length work, a good time to switch perspective is at the start of a new chapter or at a chapter break.  The writer should also identify the character whose perspective is being followed at the start of the section, preferably in the first sentence. Otherwise, the reader may waste too much energy guessing.  Correct example: “Felicia hated to admit it, but the roses Kevin left on her doorstep were a pleasant surprise.”  Incorrect example: “The roses left on the doorstep seemed like a nice touch.”  ### Understand who knows what  Even though the reader may have access to information viewed from the perspective of multiple characters, those characters do not have the same sort of access. Some characters have no way of knowing what other characters know.  For instance, if Kevin had a talk with Felicia's best friend about Felicia's feelings for him, Felicia herself would have no way of knowing what was said unless she witnessed the conversation or heard about it from either Kevin or her friend.  ## Writing in Third Person Objective  ### Follow the actions of many characters  When using third person objective, the writer can describe the actions and words of any character at any time and place within the story.  There does not need to be a single main character to focus on. The writer can switch between characters, following different characters throughout the course of the narrative, as often as needed.  Stay away from first person terms like “I” and second person terms like “you” in the narrative, though. Only use first and second person within dialog.  ### Do not attempt to get into directly into a character's head  Unlike omniscient pov where the narrator looks into everyone's head, objective pov doesn't look into anyone's head.  Imagine that you are an invisible bystander observing the actions and dialog of the characters in your story. You are not omniscient, so you do not have access to any character's inner thoughts and feelings. You only have access to each character's actions.  Correct example: “After class, Graham hurriedly left the room and rushed back to his dorm room.”  Incorrect example: “After class, Graham raced from the room and rushed back to his dorm room. The lecture had made him so angry that he felt as though he might snap at the next person he met.”  ### Show but don't tell  Even though a third person objective writer cannot share a character's inner thoughts, the writer can make external observations that suggest what those internal thoughts might be. Describe what is going on. Instead of telling the reader that a character is angry, describe his facial expression, body language, and tone of voice to show that he is mad.  Correct example: “When no one else was watching her, Isabelle began to cry.”  Incorrect example: “Isabelle was too prideful to cry in front of other people, but she felt completely broken-hearted and began crying once she was alone.”  ### Avoid inserting your own thoughts  The writer's purpose when using third person objective is to act as a reporter, not a commentator.  Let the reader draw his or her own conclusions. Present the actions of the character without analyzing them or explaining how those actions should be viewed.  Correct example: “Yolanda looked over her shoulder three times before sitting down.”  Incorrect example: “It might seem like a strange action, but Yolanda looked over her shoulder three times before sitting down. This compulsive habit is an indication of her paranoid state of mind.”  ## References  * [How to Write in Third Person](https://www.wikihow.com/Write-in-Third-Person) ","title":"Writing in third person"},{"id":412,"location":"/til/vim-terminal.html","tags":["vim","terminal"],"text":" * Run a terminal emulator in a Vim window.  The job runs asynchronously from Vim, the window will be updated to show output from the job, also while editing in another window.  ``` :help terminal :term bash :term make myprogram :vertical term ls ```   ## References  * [A Case Study in Vim Script 101: Making a Test Runner](https://8thlight.com/insights/a-case-study-in-vim-script-101-making-a-test-runner) ","title":"vim terminal command"},{"id":413,"location":"/til/vim-vimscript.html","tags":["vim","vimscript"],"text":" ## References  * <https://learnxinyminutes.com/docs/vimscript/> ","title":"Vimscript"},{"id":414,"location":"/certificate/2022-09-05_linkedin_Linux_Foundation_Cert_Prep_Virtualization_Ubuntu.html","tags":["linux","virtualization","ubuntu"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Linux Foundation Cert Prep: Virtualization (Ubuntu) Course completed on Sep 05, 2022 at 12:50PM UTC • 1 hour 11 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate Id: Aekr-K0WwheGyep7AeA0f3gFBb9S ``` ","title":"linkedin Linux Foundation Cert Prep Virtualization Ubuntu"},{"id":415,"location":"/certificate/2022-10-18_stefanini_Ergonomia_em_Home_Office.html","tags":["ergonomia","home-office"],"text":" ```                  Certificamos que:         Geraldo Luis Da Silva Ribeiro  Concluiu com carga horária de 01:00 horas o curso:        ERGONOMIA EM HOME OFFICE                    Concluído em:                 18/Outubro/2022  Descrição:  Orientações de ergonomia voltado para trabalho home office.  Objetivo:  Orientar os profissionais quanto a ergonomia no seu ambiente home office.  Conteúdo Programático:   •   O que é ergonomia; •   Dicas de ergonomia; •   Como se adaptar em ambiente home office; •   Dicas de alongamento. ``` ","title":"stefanini Ergonomia em Home Office"},{"id":416,"location":"/certificate/2022-11-19_stefanini_Produtividade_e_Gestão_do_Tempo.html","tags":["soft-skill","project-management"],"text":" ```              Certificamos que:        Geraldo Luis da Silva Ribeiro  Concluiu com carga horária de 3 horas o curso:     Produtividade & Gestão do Tempo                 Concluído em:              19/Novembro/2022 \f ``` ","title":"stefanini Produtividade e Gestão do Tempo"},{"id":417,"location":"/til/bookmarklet.html","tags":["bookmarklets","youtube"],"text":" ```javascritp javascript:document.getElementsByClassName(\"video-stream html5-main-video\")[0].playbackRate = 3.14; ```  No caso do workout não funciona pois está dentro de um frame.  O comando abaixo nao funcionou! ```javascritp javascript:window.frames[0].document.getElementsByClassName(\"video-stream html5-main-video\")[0].playbackRate = 3.14; ```  F12 e selecionar o vídeo para ativar o frame antes de lançar o primeiro comando.  ","title":"Bookmarklet"},{"id":418,"location":"/til/dma.html","tags":["dma","memory"],"text":" ::: toc  DMA (Direct memory access) is an alternative method of communication to I/O ports that permits the device to transfer data directly, without the CPU’s attention. The system can request that the data be fetched into a particular memory region and continue with other tasks until the data is ready. This may result in lower CPU requirements for the I/O activity, which can improve system performance.  ## DMA Channels  To support DMA, the x86 architecture implements several DMA channels. To find out what DMA channels your system uses, you can use the `cat /proc/dma` command:  ```bash cat /proc/dma 2: floppy 4: cascade ```  As you can see from the output above, the DMA channels 2 and 4 are in use.  > https://www.vivaolinux.com.br/topico/Iniciantes-no-Linux/Nao-entendi-a-saida-do-~cat-proc-dma >> Os DMA's são canais de acesso a memória sem intervenção do processador. São praticamente um legado do ISA. Existem 8 canais de DMA que foram implementados ao longo da história. O canal 4, especificamente, funciona com 16 bits e está praticamente relacionado ao DMA1 e ao DMA2. A cascata(cascade) se remete ao mecanismo do canal. Esse mecanismo é que permite que um canal DMA solicite o bus. Uma vez o dispositivo conectado, ele é responsável pela alocação da informação de endereçamento no bus em vez do DMA. É usado na implementação do \"Bus Mastering\". Quando um canal DMA em modo cascade recebe o controle do bus, ele não aloca endereços nem sinais I/O de controle no bus, como geralmente ocorre.  ::: warning DMA addresses should not be shared in order to avoid conflicts.  ::: tip Kernel `include/linux/dmaengine.h`  ## Steps in DMA Transfer  FIXME slide 11  ## Operation modes  ### Burst Mode  Neste modo, o periférico que recebe acesso ao barramento irá transferir as informações necessárias de uma única vez, para então liberar as pistas para a CPU novamente. Ainda que permita que o processo de transferência atinja altas velocidades, a desvantagem desse modo é que o processador deixa de trabalhar até que o envio seja concluído.  ### Cycle Stealing  No \"roubo de ciclo\", em tradução livre, a transferência de dados é realizado lentamente, aguardando a conclusão de cada ciclo de processamento da CPU. Basicamente, o DMAC solicita acesso ao barramento para o processador e, após concedido, um byte de informação é transferido. O controle das pistas é então devolvido à CPU, e uma nova solicitação é realizada a cada ciclo, até que todos os dados sejam enviados.  ### Transparent Mode  Similar ao Burst Mode, o Transparent Mode dá acesso total do barramento ao periférico que enviará ou receberá informações. No entanto, há uma diferença importante: a CPU continuará operando normalmente, em tarefas que não exijam acesso ao barramento. O controle das pistas retorna ao processador assim que a transferência dos dados é finalizada.  ## References  * [DMA (Direct Memory Access)](https://geek-university.com/dma-direct-memory-access/) * [Linux DMA engine](https://www.slideshare.net/pradeep_tewani/linux-dma-engine-249984016) * [O que é DMA — Direct Memory Access?](https://canaltech.com.br/hardware/o-que-e-dma-direct-memory-acess-202990/) ","title":"DMA Direct Memory Access"},{"id":419,"location":"/til/desktop-entry-specification.html","tags":["desktop"],"text":" ## References  * [How can I register a custom protocol with xdg?](https://superuser.com/questions/162092/how-can-i-register-a-custom-protocol-with-xdg) * [Desktop Entry Specification](https://specifications.freedesktop.org/desktop-entry-spec/latest/index.html) ","title":"Custom protocol with Desktop Entry Specification"},{"id":420,"location":"/til/vim-fzf.html","tags":["vim","fzf"],"text":" To make it more convenient, fuzzy completion can be triggered if the word before the cursor ends with the trigger sequence which is by default `**`. For example, type `vim ~/path/**` and press `TAB`.   ```bash vim ~/.dotfiles/** <TAB> ```  ![Preview grabbed from freecodecamp](/til/vim-fzf-01.gif)   ## References  * [Why you should be using fzf, the command line fuzzy finder](https://www.freecodecamp.org/news/fzf-a-command-line-fuzzy-finder-missing-demo-a7de312403ff/) ","title":"Fuzzy completion for vim"},{"id":421,"location":"/certificate/2022-11-28_linkedin_Microsoft_Teams_Automating_with_Bots_Connectors_and_Flows.html","tags":["365","microsoft","teams","bots"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Microsoft Teams: Automating with Bots, Connectors, and Flows Course completed on Nov 28, 2022 at 05:23PM UTC • 1 hour 4 min  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                  LinkedIn Learning                                                1000 W Maude Ave Head of Content Strategy, Learning             Sunnyvale, CA 94085     Certificate ID: AfBz1phT0F8AyyydvvULsLVjCl7A \f ``` ","title":"linkedin Microsoft Teams Automating with Bots Connectors and Flows"},{"id":422,"location":"/certificate/2022-11-28_linkedin_Managing_Projects_with_Microsoft_365.html","tags":["365","microsoft","project"],"text":" ``` Certificate of Completion Congratulations, Geraldo Ribeiro   Managing Projects with Microsoft 365 Course completed on Nov 28, 2022 at 06:17PM UTC  By continuing to learn, you have expanded your perspective, sharpened your skills, and made yourself even more in demand.                                                                      LinkedIn Learning                                                                    1000 W Maude Ave Head of Content Strategy, Learning                                 Sunnyvale, CA 94085                     The PMI Registered Education Provider logo is a registered mark of the Project Management Institute, Inc.     Program: PMI® Registered Education Provider | Provider ID: #4101 Certificate No: AS_VJk7KcPO21N2Vkyw7lxlXJ3hA PDUs/ContactHours: 0.75 | Activity #: 4101WMD4IX \f ``` ","title":"linkedin Managing Projects with Microsoft 365"}]