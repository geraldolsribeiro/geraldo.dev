<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hoje eu aprendi que... on geraldo.dev</title>
    <link>https://geraldo.dev/posts/</link>
    <description>Recent content in Hoje eu aprendi que... on geraldo.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>&amp;copy; 2019 Geraldo Ribeiro</copyright>
    
	<atom:link href="https://geraldo.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; - const_cast</title>
      <link>https://geraldo.dev/posts/cpp-const-cast/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/cpp-const-cast/</guid>
      <description>O operadorconst_cast é utilizado para:
 adicionar um modificador const a um tipo remover um modificador const de um tipo adicionar um modificador volatile a um tipo remover um modificador volatile de um tipo  1#include &amp;lt;iostream&amp;gt;2using namespace std; 3 4void f(int* p) { 5 cout &amp;lt;&amp;lt; *p &amp;lt;&amp;lt; endl; 6} 7 8int main(void) { 9 const int a = 10; 10 const int* b = &amp;amp;a; 11 12 // A função f() espera receber um int* e não um const int* 13 // f(b); 14 15 int* c = const_cast&amp;lt;int*&amp;gt;(b); 16 f(c); 17 18 // Lvalue é const 19 // *b = 20; 20 21 // Comportamento indefinido 22 // *c = 30; 23 24 int a1 = 40; 25 const int* b1 = &amp;amp;a1; 26 int* c1 = const_cast&amp;lt;int*&amp;gt;(b1); 27 28 // o inteiro a1 referenciado por c1 não foi declarado como const 29 *c1 = 50; 30 31 return 0; 32} Referências  [const_cast operator syntax(https://www.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; - Gerenciando layout em FLTK</title>
      <link>https://geraldo.dev/posts/cpp-fltk-layout/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/cpp-fltk-layout/</guid>
      <description>Introdução O FLTK utiliza um sistema simples, porém versátil para redimensionar interfaces.
Aplicação inicial  Para demonstrar o gerenciamento do layout criei uma aplicação composta de 9 botões com labels de 1 até 9. Note que eu criei os botões totalmente fora de ordem: 5, 2, 4, 8, 6, 1, 3, 7 e 9. Isto não importa para o layout. Todos os botões são filhos da janela principal.  Arquivo 01.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; - Ordernação</title>
      <link>https://geraldo.dev/posts/cpp-sort/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/cpp-sort/</guid>
      <description>Estatísticas    Método Comparações Swaps Escrita Escrita auxiliar Tempo ms     Bubble sort 2.096.128 1.001.372 2.002.744 0 110   Cocktail Shaker sort 2.097.152 1.010.635 2.021.270 0 109   Gnome sort 2.002.322 1.000.141 2.000.282 0 106   Odd-Even sort 2.057.262 1.047.262 2.094.524 0 112   Comb sort 58.752 10.198 20.396 0 6    Os dados desta tabela forma tirados do vídeo https://www.</description>
    </item>
    
    <item>
      <title>Docker - exportar imagem</title>
      <link>https://geraldo.dev/posts/docker-exportar-imagem/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/docker-exportar-imagem/</guid>
      <description>1docker export nome-da-imagem &amp;gt; arquivo.tar 1docker export --output=&amp;#34;arquivo.tar&amp;#34; nome-da-image Nota Exte comando não salva o conteúdo dos volumes.
    Referências  docker export  </description>
    </item>
    
    <item>
      <title>C&#43;&#43;: array</title>
      <link>https://geraldo.dev/posts/cpp-array/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/cpp-array/</guid>
      <description>Características  é um wrapper para o array do C array oferece uma sintaxe mais amigável comparada com a array do C pode ser passado e retornado por valor pode ser passado e retornado por referência uso mais conveniente de size uso mais conveniente de iteradores STL possui exatamente a mesma performace da array do C  Array vs Vector  array é estático e possui tamanho definido em tempo de compilação vector é dinâmico e é alocado no heap  Exemplos 1#include &amp;lt;algorithm&amp;gt;2#include &amp;lt;array&amp;gt;3#include &amp;lt;iostream&amp;gt;4 5using namespace std; 6 7// Multidimensionais 8template &amp;lt;class T, size_t ROW, size_t COL&amp;gt; 9using Matrix = std::array&amp;lt;std::array&amp;lt;T, COL&amp;gt;, ROW&amp;gt;; 10 11template &amp;lt;class T, size_t I, size_t.</description>
    </item>
    
    <item>
      <title>Algoritmos</title>
      <link>https://geraldo.dev/posts/algoritmos/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/algoritmos/</guid>
      <description>Algoritmos que todo programador deveria conhecer bem.
Estruturas lineares de dados  Arrays Linked List - Single and Doubly Stack Queues  Algoritmos básicos  Sorting - Merge Sort, Insertion Sort, Quick Sort, Number of inversions Matrix Multiplication (just know the algo if not implement it) Prime Sieving Modular Math including multiplication and division Euclidean Algorithm for GCD, Modular Inverse, Fast Exponentiation Fibonacci number with matrix multiplication Probability distribution and expected value Stats - Mean, Median, Variance, Bayes theorem  Técnicas populares  Divide and Conquer - Binary Search, Maximum Subarray Greedy Algorithms - Activity Selection, Huffman encoding Dynamic Programming - Matrix Chain Multiplication, Knapsack, Linear Programming - Variable Maximisation, Linear time sorting String Algorithms - Manacher, LCS, Edit Distance  Estruturas não lineares de dados  Trees - Binary Tree, General Tree, Lowest Common Ancestor Binary Search Tree - Inorder Traversal, Level order traversal, finding kth largest element, diameter, depth, number of nodes, etc.</description>
    </item>
    
    <item>
      <title>Grafana: Reset da senha do admin</title>
      <link>https://geraldo.dev/posts/grafana-reset-senha-do-admin/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/grafana-reset-senha-do-admin/</guid>
      <description>Iniciar os containers
1cd /opt/docker/docker-compose-influxdb-grafana 2docker-compose up -d Localizar o id do container do &amp;lsquo;/run.sh&amp;rsquo;
1docker ps -a 2CONTAINER ID IMAGE COMMAND CREATED ... 3265059f8820a grafana/grafana:latest &amp;#34;/run.sh&amp;#34; 6 seconds ago ... 4637c3d25845f chronograf:latest &amp;#34;/entrypoint.sh chro…&amp;#34; 6 seconds ago ... 521b3a8d77cae influxdb:latest &amp;#34;/entrypoint.sh infl…&amp;#34; 7 seconds ago ... Abrir um shell no container do run.sh (265059f8820a)
1docker exec -ti 265059f8820a bash Trocar a senha usando o grafana-cli
1 2bash-5.0$ grafana-cli admin reset-admin-password aqui-vai-a-nova-senha 3INFO[01-03|16:34:42] Connecting to DB logger=sqlstore dbtype=sqlite3 4INFO[01-03|16:34:42] Starting DB migration logger=migrator 5 6Admin password changed successfully ✔ Referências  Reset Grafana password when running in Docker on Raspberry Pi  </description>
    </item>
    
    <item>
      <title>CORBA</title>
      <link>https://geraldo.dev/posts/corba/</link>
      <pubDate>Fri, 27 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/corba/</guid>
      <description>Introdução O que é CORBA?  é o acrônimo para Common Object Request Broker Architecture é um framework para construção de sistemas distribuídos orientados a objetos é multiplataforma é independente de linguagem é um padrão aberto e extensível definido pela Object Management Group clientes e servidores estão em diferentes máquinas programas clientes enviam mensagens para servidores remotos como se este estivesse locais (location transparency)  O que é a OMG?  www.</description>
    </item>
    
    <item>
      <title>Preprocessador M4</title>
      <link>https://geraldo.dev/posts/m4/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/m4/</guid>
      <description>m4 é uma linguagem de macro desenvolvida pelo Dennis M. Ritchie
Definindo uma macro O delimitador padrão é o backtick (`) junto com o single quote (&#39;).
define(`yoo&#39;,`Hello World!&#39;) I say this: yoo yoo yoo Executando m4 nome_do_arquivo.m4 temos:
I say this: Hello World! Hello World! Hello World! Definição com várias linhas define(`header&#39;, ` &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;/&amp;gt; &amp;lt;title&amp;gt;Meu título&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &#39;) Passando parâmetros define(`my_value&#39;,`$1_file&#39;) my_value(`test&#39;) Use $1, $2, &amp;hellip; para passar parâmetros:</description>
    </item>
    
    <item>
      <title>Álgebra linear com Armadillo</title>
      <link>https://geraldo.dev/posts/armadillo/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/armadillo/</guid>
      <description>$$ A_{m,n} = \begin{pmatrix} a_{1,1} &amp; a_{1,2} &amp; \cdots &amp; a_{1,n} \\ a_{2,1} &amp; a_{2,2} &amp; \cdots &amp; a_{2,n} \\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ a_{m,1} &amp; a_{m,2} &amp; \cdots &amp; a_{m,n} \end{pmatrix} $$  Armadillo é uma biblioteca de álgebra linear para C++ rápida e fácil de usar, com sintaxe parecida com a do Matlab.
Provê suporte para:
 vetores (tensores de primeira ordem) matrizes (tensores de segunda ordem) cubos (tensores de terceira ordem) matrizes densas e esparsas números inteiros, de ponto flutuante e complexos decomposição (via LAPACK) multi-thread (Intel MKL ou OpenBLAS) avaliador de expressão baseado em meta-programação paralelização (via OpenMP)  Principais usos:</description>
    </item>
    
    <item>
      <title>git - dicas</title>
      <link>https://geraldo.dev/posts/git-dicas/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/git-dicas/</guid>
      <description>Diferença entre dois branches &amp;ndash; somente nomes de arquivos 1git diff --name-only branch-1 branch-2 Status:
 M arquivos modificados A arquivos adicionados D arquivos removidos  Filtrando por estes códigos de status temos as próximas dicas.
Listar somente os arquivos modificados entre dois branches 1git diff --name-status branch-1 branch-2 | sed -n &amp;#34;s/^M\s\+//p&amp;#34;  filtra somente as linhas que começam com M de modificado.  Listar somente os arquivos adicionados entre dois branches 1git diff --name-status branch-1 branch-2 | sed -n &amp;#34;s/^A\s\+//p&amp;#34;  filtra somente as linhas que começam com A de adicionado  Listar somente os arquivos removidos entre dois branches 1git diff --name-status branch-1 branch-2 | sed -n &amp;#34;s/^D\s\+//p&amp;#34;  filtra somente as linhas que começam com D de deletados  Referências  Git - Getting a list of files changed between branches  </description>
    </item>
    
    <item>
      <title>Eclipse Modeling Framework - Lendo e escrevendo XML</title>
      <link>https://geraldo.dev/posts/eclipse-emf-xml/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/eclipse-emf-xml/</guid>
      <description>EMF é uma API Java que permite definir modelos, criar, salvar e carregar suas instâncias em vários formatos (EMF, UML, XSD).
A principal diferença para o Java é que os modelos podem ser definidos tanto estaticamente quanto dinamicamente em tempo de execução.
EMF suporta múltiplos formatos para o modelo e para input e output das intâncias do modelo.
EMF é uma API do tipo reflection e pode ser facilmente utilizada para gerar editores para seus modelos.</description>
    </item>
    
    <item>
      <title>Git - Limpando o repositório</title>
      <link>https://geraldo.dev/posts/git-limpeza/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/git-limpeza/</guid>
      <description>Para listar todos os branch locais que já formam mergeados no dev:
git branch --merged dev ajuste-cabecalho-inclui-guarda-de-formatacao dev fix-270B fix-86 fix-gitignore fix-wakeup hotfix-import-faltando * test-naming-service testar-xml-gerado-contra-dtd teste-funcional teste-funcional-com-geracao-de-screenshot update-documentation-from-testlink Nota: O branch marcado com * é o branch atual e não deve ser removido se estiver dentro dele.
$ git branch --merged dev | egrep -v &amp;quot;\*&amp;quot; ajuste-cabecalho-inclui-guarda-de-formatacao dev fix-270B fix-86 fix-gitignore fix-wakeup hotfix-import-faltando testar-xml-gerado-contra-dtd teste-funcional teste-funcional-com-geracao-de-screenshot update-documentation-from-testlink Passando esta lista para um xargs fica fácil executar o git branch -d para cada um dos branches mergeados.</description>
    </item>
    
    <item>
      <title>Eventos em javascript</title>
      <link>https://geraldo.dev/posts/js-eventos/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/js-eventos/</guid>
      <description>Principais eventos  onBlur: remove o foco do elemento onChange: muda o valor do elemento onClick: o elemento é clicado pelo usuário onFocus: o elemento é focado onKeyPress: o usuário pressiona uma tecla sobre o elemento onLoad: carrega o elemento por completo onMouseOver: define ação quando o usuário passa o mouse sobre o elemento onMouseOut: define ação quando o usuário retira o mouse sobre o elemento onSubmit: define ação ao enviar um formulário  Eventos inline 1&amp;lt;h1 onclick=&amp;#34;this.</description>
    </item>
    
    <item>
      <title>javascript set</title>
      <link>https://geraldo.dev/posts/js-set/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/js-set/</guid>
      <description>https://alligator.io/js/sets-introduction/
1let animals = new Set(); 2 3animals.add(&amp;#39;🐷&amp;#39;); 4animals.add(&amp;#39;🐼&amp;#39;); 5animals.add(&amp;#39;🐢&amp;#39;); 6animals.add(&amp;#39;🐿&amp;#39;); 7console.log(animals.size); // 4 8animals.add(&amp;#39;🐼&amp;#39;); 9console.log(animals.size); // 4 10 11console.log(animals.has(&amp;#39;🐷&amp;#39;)); // true 12animals.delete(&amp;#39;🐷&amp;#39;); 13console.log(animals.has(&amp;#39;🐷&amp;#39;)); // false 14 15animals.forEach(animal =&amp;gt; { 16 console.log(\`Hey ${animal}!\`); 17}); 1819// Hey 🐼! 20// Hey 🐢! 21// Hey 🐿! 2223animals.clear(); 24console.log(animals.size); // 0 1let myAnimals = new Set([&amp;#39;🐷&amp;#39;, &amp;#39;🐢&amp;#39;, &amp;#39;🐷&amp;#39;, &amp;#39;🐷&amp;#39;]); 2 3myAnimals.add([&amp;#39;🐨&amp;#39;, &amp;#39;🐑&amp;#39;]); 4myAnimals.add({ name: &amp;#39;Rud&amp;#39;, type: &amp;#39;🐢&amp;#39; }); 5console.log(myAnimals.size); // 4 6 7myAnimals.forEach(animal =&amp;gt; { 8 console.</description>
    </item>
    
    <item>
      <title>Gerenciamento de memória swap</title>
      <link>https://geraldo.dev/posts/swap/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/swap/</guid>
      <description>Configuração atual 1swapon --show A saída do comando acima, se tiver swap configurado, será parecido com:
1NAME TYPE SIZE USED PRIO 2/dev/sda5 partition 2,9G 1G -2 Neste caso uma partição foi utilizada para swap.
Outro modo de verificar o swap é:
1free -h Na ausência o valor é informado como zero.
1Mem: 996Mi 262Mi 79Mi 40Mi 654Mi 514Mi 2Swap: 0B 0B 0B Verificar se existe espaço disponível para criação Antes de criar o swap é necessário garantir que existe espaço em disco.</description>
    </item>
    
    <item>
      <title>Preact - Petit React</title>
      <link>https://geraldo.dev/posts/preact/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/preact/</guid>
      <description>Ciclo de vida  componentWillMount: Antes que o componente seja montado no DOM componentDidMount: Depois que o componente é montado no DOM componentWillUnmount: Antes da remoção do DOM componentWillReceiveProps: Antes que novas props sejam aceitas shouldComponentUpdate: Antes de render(). Retorne false caso queiram pular o render() componentWillUpdate: Antes render() componentDidUpdate: Depois render()  Preact sem babel ou JSX index.html
1&amp;lt;!DOCTYPE html&amp;gt; 2&amp;lt;html&amp;gt; 3 &amp;lt;head&amp;gt; 4 &amp;lt;title&amp;gt;Preact sem Babel or JSX&amp;lt;/title&amp;gt; 5 &amp;lt;/head&amp;gt; 6 &amp;lt;body&amp;gt; 7 &amp;lt;script src=&amp;#34;https://unpkg.</description>
    </item>
    
    <item>
      <title>Desabilitar função color com botão do meio</title>
      <link>https://geraldo.dev/posts/touchpad-desabilitar-colar-com-botao-do-meio/</link>
      <pubDate>Sat, 23 Nov 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/touchpad-desabilitar-colar-com-botao-do-meio/</guid>
      <description>Frequentemente tenho colado texto no editor enquanto tentava apens clicar para posicionar o cursor. Isto ocorre no notebook em que o touchpad não tem separação tátil entre os botões. É muito fácil clicar um pouco mais para a direita e acertar o botão errado.
Para desabilitar a função use:
1gsettings set org.gnome.desktop.interface gtk-enable-primary-paste false Para habilitar a função use:
1gsettings set org.gnome.desktop.interface gtk-enable-primary-paste true Referências  [How do I disable middle mouse button click paste?</description>
    </item>
    
    <item>
      <title>Formatando automaticamente antes do commit</title>
      <link>https://geraldo.dev/posts/git-auto-formatart-antes-do-commit/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/git-auto-formatart-antes-do-commit/</guid>
      <description>Escrever um arquivo .gitattributes contendo:
1*.java filter=clang-format-java Acrescentar os operações clean e smudge
1git config --global filter.clang-format-java.clean &amp;#39;clang-format -assume-filename=test.java&amp;#39; 2git config --global filter.clang-format-java.smudge cat  clean ocorre quando os arquivos são enviados para o stage smudge quando os arquivos são enviados para o workspace (checkout)  Quando os arquivos são enviados para stage (git add) são passados via stdin então não dá para saber qual o tipo. O uso da opção -assume-filename=test.</description>
    </item>
    
    <item>
      <title>Configurando um firewall no Debian</title>
      <link>https://geraldo.dev/posts/firewall/</link>
      <pubDate>Sun, 17 Nov 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/firewall/</guid>
      <description>Instalação 1apt install ufw Status 1ufw status verbose Depois de configurado alguns serviços a saída do comando pode ser similar a:
ufw status Status: active To Action From -- ------ ---- OpenSSH ALLOW Anywhere 80/tcp ALLOW Anywhere 443/tcp ALLOW Anywhere OpenSSH (v6) ALLOW Anywhere (v6) 80/tcp (v6) ALLOW Anywhere (v6) 443/tcp (v6) ALLOW Anywhere (v6) Listando aplicações 1ufw app list 2ufw app info OpenSSH Liberando algumas aplicações 1ufw allow OpenSSH 2ufw allow http 3ufw allow https Habilitando o firewall 1ufw enable Liberando uma porta específica 1ufw allow 8080/tcp Liberando um range de portas 1ufw allow 7100:7200/tcp 2ufw allow 7100:7200/udp Liberando acesso a um IP específico Cuidado: Este comando libera todas as portas para o IP especificado!</description>
    </item>
    
    <item>
      <title>Testando exceções com junit</title>
      <link>https://geraldo.dev/posts/junit-excecao/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/junit-excecao/</guid>
      <description>Este artigo apresenta uma visão suscinta sobre testes de exceção com JUnit usando o idioma try/fail/catch, o parâmetro expected da anotação @Test e a anotação @Rule. Cada um dos métodos apresenta prós e contras.
Usando bloco try/catch 1@Test 2public void example1() { 3 try { 4 find(&amp;#34;função que deveria lançar uma exceção&amp;#34;); 5 fail(); 6 // Ponto que nunca deveria ser alcançado quando o teste passar 7 } catch (NotFoundException e) { 8 assertThat(e.</description>
    </item>
    
    <item>
      <title>Vim: executar macro em todos os buffers</title>
      <link>https://geraldo.dev/posts/vim-executar-macro-em-todos-os-buffers/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-executar-macro-em-todos-os-buffers/</guid>
      <description>:bufdo execute &amp;quot;normal @a&amp;quot; | write Referências  Run a macro in all buffers in vim  </description>
    </item>
    
    <item>
      <title>Javascript - console.dir</title>
      <link>https://geraldo.dev/posts/javascript-console-dir/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/javascript-console-dir/</guid>
      <description>Considere o seguinte página:
1&amp;lt;html&amp;gt; 2 &amp;lt;head&amp;gt;&amp;lt;/head&amp;gt; 3 &amp;lt;body&amp;gt; 4 &amp;lt;input id=&amp;#34;clickMe&amp;#34; type=&amp;#34;button&amp;#34; value=&amp;#34;Clique aqui&amp;#34;&amp;gt; 5 &amp;lt;/body&amp;gt; 6&amp;lt;/html&amp;gt; Que quando aberta no navegador tem a seguinte aparência:
 img   Para obter o elemento do botão poderiamos fazer o seguinte:
1var btn = document.getElementById( &amp;#39;clickMe&amp;#39; ); Agora que temos o objeto botão armazenado em uma variável chamada btn podemos obter mais informações.
Ao enviar a variável btn para a função console.</description>
    </item>
    
    <item>
      <title>Criando um gif animado com o gnuplot</title>
      <link>https://geraldo.dev/posts/criando-animacao-com-o-gnuplot/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/criando-animacao-com-o-gnuplot/</guid>
      <description>A partir da versão 4.6 do gnuplot está bem mais fácil criar uma animação. Algumas vezes uma animação deixar as coisas mais fáceis de serem entendidas.
O segredo está no em configurar a saída para gif animate no comando set term.
1#Umaanimaçãosimplesdeumsen(x+t)2reset 3set term gif animate 4set output &amp;#34;animacao_do_seno.gif&amp;#34; 5n=24 #quantidadedeframesaseremgerados 6dt=2*pi/n 7set xrange [0:4*pi] 8i=0 #contador 9load &amp;#34;animate.gnuplot&amp;#34; 10set output O arquivo animate.gnuplot contem os comandos:
1plot sin(x+i*dt) w l lt 1 lw 1.</description>
    </item>
    
    <item>
      <title>Java 12 no Debian Buster</title>
      <link>https://geraldo.dev/posts/java-12-no-debian-buster/</link>
      <pubDate>Tue, 23 Jul 2019 11:33:38 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/java-12-no-debian-buster/</guid>
      <description>Adicionar repositório.
1cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/apt/sources.list.d/java-12-debian.list 2deb http://ppa.launchpad.net/linuxuprising/java/ubuntu bionic main 3deb-src http://ppa.launchpad.net/linuxuprising/java/ubuntu bionic main 4EOF 1apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EA8CACC073C3DB2A 2apt-get update 3apt-get install oracle-java12-installer Referências  How to Install Java 12 on Debian 10/9/8 via PPA  </description>
    </item>
    
    <item>
      <title>Nemo como Gerenciador De Arquivos Padrão</title>
      <link>https://geraldo.dev/posts/nemo-como-gerenciador-de-arquivos-padrao/</link>
      <pubDate>Tue, 23 Jul 2019 10:33:17 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/nemo-como-gerenciador-de-arquivos-padrao/</guid>
      <description>Trocando o Nautilus pelo Nemo no GNOME 1xdg-mime default \ 2 nemo.desktop inode/directory \ 3 application/x-gnome-saved-search Desabilitando o Nautilus
1gsettings set org.gnome.desktop.background show-desktop-icons false Habilitando o Nemo
1gsettings set org.nemo.desktop show-desktop-icons true Trocando o Thunar pelo Nemo no XFCE Em Configurações acesse Aplicativos preferidos
 img   Abra a aba Utilitários e altere para nemo em Gerenciador de Arquivos
 img   Testando 1xdg-open $HOME Usar o xfce4-terminal no nemo 1gsettings set org.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; Lambda</title>
      <link>https://geraldo.dev/posts/cpp-lambda/</link>
      <pubDate>Sun, 07 Jul 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/cpp-lambda/</guid>
      <description>Funções de primeira classe Em programação funcional funções são cidadães de primeira classe, o que significa que elas se comportam com dados e suportam quaisquer operações que a linguagem permita.
Algumas características das funções de primeira classe são:
 atribuir uma função a uma variável passar uma função como parâmetro para outra função retornar a função como valor de outra função armazenar a função em uma estrutura de dados  Lambdas Lambdas são funções anônimas (sem um nome) definidas in-place.</description>
    </item>
    
    <item>
      <title>Escolhendo versões dos pacotes no Debian/Ubuntu</title>
      <link>https://geraldo.dev/posts/escolhendo-versoes-dos-pacotes-no-debian-e-ubuntu/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/escolhendo-versoes-dos-pacotes-no-debian-e-ubuntu/</guid>
      <description>Parte 1 - Regra geral Antes de começar a escolher versões vamos estabelecer que todos os pacotes usarão a versão stable por padrão.
No arquivo /etc/apt/preferences (que deve estar vazio inicialmente) acrescente as seguintes linhas:
1# Arquivo: /etc/apt/preferences 2 3# Todos os pacotes vem do stable por padrão 4Package: * 5Pin: release a=stable 6Pin-Priority: 1001 7 8Package: * 9Pin: release a=testing 10Pin-Priority: 650 11 12Package: * 13Pin: release a=unstable 14Pin-Priority: 600 O valor acima de 1000 vai forçar os pacotes que foram instalados na mão usando outras versões a voltarem para o stable.</description>
    </item>
    
    <item>
      <title>Gerenciador de arquivos</title>
      <link>https://geraldo.dev/posts/gerenciador-de-arquivos/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/gerenciador-de-arquivos/</guid>
      <description>O gerenciador de arquivos pode fazer muito mais do que simplesmente copiar, colar e renomear arquivos.
Você já conhece o Nemo, um fork do GNOME Files?
Instalando o nemo 1apt install nemo Nemo como gerenciador padrão 1xdg-mime default nemo.desktop inode/directory application/x-gnome-saved-search Criando novas funções O arquivo /usr/share/nemo/actions/sample.nemo_action contém um exemplo de script para criação de comandos.
O locais padrão para os arquivos de script são:
 /usr/share/nemo/actions/ para todos os usuários do sistema ~/.</description>
    </item>
    
    <item>
      <title>Como limpar o audio com audacity</title>
      <link>https://geraldo.dev/posts/como-limpar-o-audio-com-o-audacity/</link>
      <pubDate>Wed, 15 May 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/como-limpar-o-audio-com-o-audacity/</guid>
      <description>Efeito redução de ruído  Selecionar somente o ruído (sem vóz) Menu Efeitos Menu Redução de ruídos Clicar no botão Obter perfil do ruído Ctrl+A Para para selecionar tudo Menu Efeitos Menu Redução de ruídos Clicar no botão OK  Efeito compressor  Ctrl+A para selecionar tudo Menu Efeitos Menu Compressor Não precisa mexer em nada Clicar no botão OK  Efeito normalizar  Ctrl+A para selecionar tudo Menu Efeitos Menu Normalizar Não precisa mexer em nada Clicar no botão OK  Efeito equalização  Ctrl+A para selecionar tudo Menu Efeitos Menu Equalização Selecione a curva 100Hz Rumble Clicar no botão OK  </description>
    </item>
    
    <item>
      <title>Feed Forward Neural Network no debian com mlpack</title>
      <link>https://geraldo.dev/posts/mlpack-feed-forward-neural-network-no-debian/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/mlpack-feed-forward-neural-network-no-debian/</guid>
      <description>Este artigo mostra como criar uma rede neural simples no Debian stable utilizando a mlpack. A mlpack é uma biblioteca popular e de alta performance para aprendizado de máquina em C++.
Versões do mlpack disponíveis do Debian As versões disponíveis no momento da escrita deste artigo são:
   Versão do Debian Versão do mlpack Arquiteturas     jessie (oldstable) 1.0.10-1 amd64 armel armhf i386   stretch (stable) 2.</description>
    </item>
    
    <item>
      <title>Como instalar o flameshot no Debian stretch</title>
      <link>https://geraldo.dev/posts/como-instalar-o-flameshot-no-debian-stable/</link>
      <pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/como-instalar-o-flameshot-no-debian-stable/</guid>
      <description>O flameshot é um excelente utilitário para tirar screenshots e já realizar as anotações no mesmo momento.
 Demonstração de uso do flameshot   .notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:&#34;Font Awesome 5 Free&#34;,FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:&#39;\f071&#39;}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:&#39;\f05a&#39;}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:&#39;\f06a&#39;}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:&#39;\f058&#39;}.notice.tip{background:#e6f9e6}Dica
Atualização: Agora que o Debian 10 foi lançado não é mais necessário recorrer ao backports, então basta usar apt install flameshot.
 O flameshot já está disponível no Debian 10, mas enquanto aguardamos a versão nova do Debian ser lançada é preciso utilizar a versão do stretch-backports.</description>
    </item>
    
    <item>
      <title>Como repetir texto no vim</title>
      <link>https://geraldo.dev/posts/vim-inserir-caracteres-repetidos/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-inserir-caracteres-repetidos/</guid>
      <description>Para fazer a linha do título acima &amp;lt;esc&amp;gt;70i=&amp;lt;esc&amp;gt;&amp;lt;esc&amp;gt;
1 &amp;lt;esc&amp;gt;Nic&amp;lt;esc&amp;gt;&amp;lt;esc&amp;gt;N número de repetições c caractere ou palavra
1&amp;lt;esc&amp;gt;5iX&amp;lt;esc&amp;gt;&amp;lt;esc&amp;gt;2XXXXX34&amp;lt;esc&amp;gt;5iX Y &amp;lt;esc&amp;gt;&amp;lt;esc&amp;gt;5X Y X Y X Y X Y X Y </description>
    </item>
    
    <item>
      <title>Compilar Vim 8</title>
      <link>https://geraldo.dev/posts/vim-compilar-vim-8/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-compilar-vim-8/</guid>
      <description>cd ~/git git clone https://github.com/vim/vim.git cd vim ./configure --with-compiledby=&amp;quot;Geraldo Ribeiro &amp;lt;geraldolsribeiro@gmail.com&amp;gt;&amp;quot; \ --with-features=huge \ --enable-gui=auto \ --with-x \ --enable-rubyinterp \ --with-ruby-command=/usr/bin/ruby \ --enable-perlinterp \ --enable-pythoninterp --with-python-config-dir=/usr/lib/python2.7/config \ --enable-fontset \ --enable-cscope \ --enable-gtk2-check \ --enable-gnome-check make </description>
    </item>
    
    <item>
      <title>Fast Search in Vim</title>
      <link>https://geraldo.dev/posts/vim-fast-search-vim/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-fast-search-vim/</guid>
      <description>Projects can be searched for specific text within Vim:
:grep sometext Can we grep faster?
Override to use The Silver Searcher grep is a built-in command of Vim. By default, it will use the system&#39;s grep command. We can overwrite it to use The Silver Searcher&amp;lsquo;s ag command by putting this in our ~/.vimrc:
1&amp;#34; The Silver Searcher2if executable(&amp;#39;ag&amp;#39;)3&amp;#34; Use ag over grep4 set grepprg=ag\ --nogroup\ --nocolor56&amp;#34; Use ag in CtrlP for listing files.</description>
    </item>
    
    <item>
      <title>Formatar JSON no Vim</title>
      <link>https://geraldo.dev/posts/vim-formatar-json/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-formatar-json/</guid>
      <description>Crie um comando com:
1nmap =j :%!python -m json.</description>
    </item>
    
    <item>
      <title>Formatar XML no vim</title>
      <link>https://geraldo.dev/posts/vim-formatar-xml/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-formatar-xml/</guid>
      <description>:&#39;&amp;lt;,&#39;&amp;gt;!xmllint --format - </description>
    </item>
    
    <item>
      <title>Plugins para o vim</title>
      <link>https://geraldo.dev/posts/vim-plugins/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-plugins/</guid>
      <description>Instalação do vundle 1git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim Ctrlp Ctrlp modified Easily open locally modified files in your git-versioned projects.
Uso a versão que lista os arquivos [modificadas[(https://github.com/jasoncodes/ctrlp-modified.vim)
Instalação Acrescentar no .vimrc
1Bundle &amp;#39;kien/ctrlp.vim&amp;#39;2Bundle &amp;#39;jasoncodes/ctrlp-modified.vim&amp;#39;Rodar o VundleInstall
Atalhos Acrescentar no .vimrc
1map &amp;lt;Leader&amp;gt;m :CtrlPModified&amp;lt;CR&amp;gt;2map &amp;lt;Leader&amp;gt;M :CtrlPBranch&amp;lt;CR&amp;gt;</description>
    </item>
    
    <item>
      <title>Run Tests in Vim</title>
      <link>https://geraldo.dev/posts/vim-run-tests/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-run-tests/</guid>
      <description>Test driven development thrives on a tight feedback loop but switching from the editor to the shell to manually run specs is inefficient.
Tools such as autotest and guard run specs whenever a file gets saved. Although an improvement over a manual workflow, those approaches often run the suite when not needed and run too many or too few specs.
Enter vim-rspec, a lightweight Vim plugin that runs specs directly from within Vim with the press of a key.</description>
    </item>
    
    <item>
      <title>Substituição de texto avançada no Vim</title>
      <link>https://geraldo.dev/posts/vim-substituicao-de-texto-avancada/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-substituicao-de-texto-avancada/</guid>
      <description>Como substituir texto em todos os buffers abertos :bufdo %s/pattern/replace/ge | update  O e server para não gerar erro quando o padrão não for encontrado em algum dos buffers. o comando update salva os buffers modificados.  Como substituir texto em um padrão :arg *.cpp :argadd ../include/*.hpp ... :argdo %s/search/replace/ge | update Referências  Search and replace in multiple buffers  </description>
    </item>
    
    <item>
      <title>Vim args, argdo</title>
      <link>https://geraldo.dev/posts/vim-argdo/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-argdo/</guid>
      <description>O editor vim nos ajuda muito quando precisamos editar uma grande quantidade de arquivos para realizar uma refatoração ou realizar modificações em lote.
Carregamento de arquivos por condição Carregar todos os arquivos md.
:args `find . -name &#39;*.md&#39;` Carregar todos os arquivos que são rastreados pelo controle de versão que contenham a palavra Apple.
:args `git grep -l Apple` o -l do git-grep faz listar somente os arquivos sem o texto que faz match.</description>
    </item>
    
    <item>
      <title>Vim awesome</title>
      <link>https://geraldo.dev/posts/vim-awesome/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-awesome/</guid>
      <description> http://vimawesome.com/ http://vimawesome.com/plugin/fugitive-vim http://vimawesome.com/plugin/vim-snipmate-mine  </description>
    </item>
    
    <item>
      <title>Vim com python habilitado</title>
      <link>https://geraldo.dev/posts/vim-with-python/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-with-python/</guid>
      <description>1apt install vim-nox 2ou 3apt install vim-gtk </description>
    </item>
    
    <item>
      <title>Vim com rails</title>
      <link>https://geraldo.dev/posts/vim-rails/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-rails/</guid>
      <description>https://github.com/tpope/vim-rails
 gf considers context and knows about partials, fixtures, and much more. There are two commands, :A (alternate) and :R (related) for easy jumping between files, including favorites like model to schema, template to helper, and controller to functional test. Commands like :Emodel, :Eview, :Econtroller  are provided to :edit files by type, along with S, V, and T variants for :split, :vsplit, and :tabedit. Throw a bang on the end (:Emodel foo!</description>
    </item>
    
    <item>
      <title>Vim lento</title>
      <link>https://geraldo.dev/posts/vim-slow/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-slow/</guid>
      <description> http://eduncan911.com/software/fix-slow-scrolling-in-vim-and-neovim.html  1:set cursorline!2:set lazyredraw1set synmaxcol=1282syntax sync minlines=256</description>
    </item>
    
    <item>
      <title>Vim plugin coersion: snake_case, MixedCase, camelCase, UPPER_CASE, dash-case, dot.case, space case, Title Case</title>
      <link>https://geraldo.dev/posts/vim-abolish/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-abolish/</guid>
      <description>  https://github.com/tpope/vim-abolish
  crm - MixedCase
  crc - camelCase
  crs - snake_case
  cru - UPPER_CASE
  cr- - dash-case
  cr. - dot.case
  cr&amp;lt;space&amp;gt; - space case
  crt - Title Case
  </description>
    </item>
    
    <item>
      <title>VIM single instance</title>
      <link>https://geraldo.dev/posts/vim-single-instance/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-single-instance/</guid>
      <description> http://unix.stackexchange.com/questions/23162/how-to-run-gvim-in-a-single-instance http://www.phacks.net/open-multiple-text-files-as-tabs-gvim-kde4/  </description>
    </item>
    
    <item>
      <title>Vim Spell Checking</title>
      <link>https://geraldo.dev/posts/vim-spell-checking/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-spell-checking/</guid>
      <description>There are times when we edit prose in Vim, such as in a project README or Git commit message. In those cases, we can use Vim&#39;s spell-checking to help us avoid embarrassing mistakes.
Switching on spell-checking We can switch on spell checking with this command:
:setlocal spell We can also specify the language:
:setlocal spell spelllang=en_us What does it look like Here&#39;s a screenshot of what I see as I edit this blog post:</description>
    </item>
    
    <item>
      <title>vim-livro-noob-gratis.md</title>
      <link>https://geraldo.dev/posts/vim-livro-noob-gratis/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-livro-noob-gratis/</guid>
      <description> Um livro guia/referência para quem deseja aprender a utilizar o editor de textos Vim
 Confira em https://leanpub.com/vimparanoobs
Referência  https://woliveiras.com.br/vimparanoobs/chapters/pesquisando-por-plugins-no-vundle.html  </description>
    </item>
    
    <item>
      <title>Vim: Auto completar especial</title>
      <link>https://geraldo.dev/posts/vim-special-auto-complete/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-special-auto-complete/</guid>
      <description>Do pacote UltiSnip:
~/.vim/bundle/vim-snippets/UltiSnips/
 date -&amp;gt; 2018-10-27 time -&amp;gt; 15:10 datetime -&amp;gt; 2018-10-27 15:47 uuid -&amp;gt; e348aa09-1875-4eaa-b016-edd12ad7091d lorem -&amp;gt; lorem ipsum bbox -&amp;gt; caixa com texto centrado com a largura de comentário box -&amp;gt; cria uma caixa do tamenho do texto  </description>
    </item>
    
    <item>
      <title>Webvim</title>
      <link>https://geraldo.dev/posts/vim-webvim/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/vim-webvim/</guid>
      <description>TODO: Estudar webvim https://github.com/vim-dist/webvim</description>
    </item>
    
    <item>
      <title>Pass</title>
      <link>https://geraldo.dev/posts/fixme/pass-2/</link>
      <pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://geraldo.dev/posts/fixme/pass-2/</guid>
      <description>Como exportar do google chrome http://www.thewindowsclub.com/export-import-passwords-chrome-browser
abre a caixa de exportação de senha do google chrome
chrome://settings-frame/passwords
Instalar extensão para o chrome https://github.com/dannyvankooten/browserpass
1apt-get install pass qtpass Os arquivos ficam em ~/.password-store/
Uso básico 1zx2c4@laptop ~ $ pass 2Password Store 3├── Business 4│ ├── some-silly-business-site.com 5│ └── another-business-site.net 6├── Email 7│ ├── donenfeld.com 8│ └── zx2c4.com 9└── France 10 ├── bank 11 ├── freebox 12 └── mobilephone 13 14zx2c4@laptop ~ $ pass Email/zx2c4.</description>
    </item>
    
    <item>
      <title>Diferenças entre mtime ctime atime</title>
      <link>https://geraldo.dev/posts/diferencas-entre-mtime-ctime-atime/</link>
      <pubDate>Fri, 17 Nov 2017 10:14:46 -0200</pubDate>
      
      <guid>https://geraldo.dev/posts/diferencas-entre-mtime-ctime-atime/</guid>
      <description>Adaptado de um post do Quora.
O comando find pode parecer um pouco complicado se alguns conceitos não forem entendidos antes de sua utilização. Quando procuramos por arquivos com critérios de tempo é fundamental saber a diferença entre mtime, atime e ctime.
De maneira muito breve:
 mtime é o momento de modificação do conteúdo atime é o momento que o arquivo foi acessado (lido) ctime é o momento que o arquivo teve algum atributo modificado  mtime mtime (modification time) indica o momento que o conteúdo do arquivo mudou.</description>
    </item>
    
    <item>
      <title>Bloqueando a Sessão com Light Locker</title>
      <link>https://geraldo.dev/posts/bloqueando-a-sessao-com-light-locker/</link>
      <pubDate>Wed, 25 Oct 2017 09:42:40 -0200</pubDate>
      
      <guid>https://geraldo.dev/posts/bloqueando-a-sessao-com-light-locker/</guid>
      <description>Instalação 1apt purge xscreensaver xscreensaver-data 2apt install light-locker Travando pelo terminal 1light-locker-command -l Referências  Instale Light Locker: Um novo bloqueador de sessão para LightDM Debian xscreensaver very old. What&#39;s an alternative?  </description>
    </item>
    
    <item>
      <title>Troca Rápida De Usuário No Xfce</title>
      <link>https://geraldo.dev/posts/troca-rapida-de-usuario-no-xfce/</link>
      <pubDate>Tue, 24 Oct 2017 19:03:57 -0200</pubDate>
      
      <guid>https://geraldo.dev/posts/troca-rapida-de-usuario-no-xfce/</guid>
      <description>apt install xfswitch-plugin  https://askubuntu.com/questions/79318/how-can-i-switch-users-from-within-xfce</description>
    </item>
    
    <item>
      <title>Como instalar o tema de ícones Papirus no Debian</title>
      <link>https://geraldo.dev/posts/como-instalar-o-tema-papirus-no-debian/</link>
      <pubDate>Tue, 24 Oct 2017 14:00:58 -0200</pubDate>
      
      <guid>https://geraldo.dev/posts/como-instalar-o-tema-papirus-no-debian/</guid>
      <description>O pacote papirus-icon-theme está no Debian Sid. Para instalar na versão stable basta criar um arquivo papirus-icon-theme.list contendo o endereço do repositório:
1echo &amp;#34;deb http://ppa.launchpad.net/papirus/papirus/ubuntu xenial main&amp;#34; \  2 &amp;gt; /etc/apt/sources.list.d/papirus-icon-theme.list Adicionar a chave
1apt-key adv --recv-keys --keyserver keyserver.ubuntu.com E58A9D36647CAE7F Instalar
1apt-get update 2apt-get install papirus-icon-theme Pronto, agora é só selecionar o tema papirus na configuração do seu ambiente.
Selecionando o tema no XFCE Em Configurações escolha Aparência e depois Ícones.</description>
    </item>
    
    <item>
      <title>Como trocar o nome do servidor sem reiniciar</title>
      <link>https://geraldo.dev/posts/como-trocar-hostname-sem-reiniciar/</link>
      <pubDate>Sun, 22 Oct 2017 11:21:50 -0200</pubDate>
      
      <guid>https://geraldo.dev/posts/como-trocar-hostname-sem-reiniciar/</guid>
      <description>Como um Administrador de Sistemas, as vezes, você precisa alterar o nome da máquina. Seja porque digitou o nome errado durante a instalação, ou se a política de nomes da empresa mudou ou se o nome já estava sendo utilizado por outra máquina.
Nota: O procedimento que veremos a seguir vale para as distribuições Linux derivadas do Debian, tais como Mint, Ubuntu, e outras 130 (segundo o distrowatch).
O arquivo de sistema que guarda o nome da máquina para ser usado a cada boot é o /etc/hostname, então basta trocar seu conteúdo que no próximo boot a máquina terá outro nome.</description>
    </item>
    
    <item>
      <title>Customizing the homepage with widgets</title>
      <link>https://geraldo.dev/posts/widgets/</link>
      <pubDate>Tue, 19 Apr 2016 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/widgets/</guid>
      <description>Homepage widgets display as sections on the homepage. They can be enabled/disabled and configured as desired. Academic has the following widgets available to use:
 About/biography Selected publications Recent publications Recent news/blog posts Projects Selected talks Recent talks Contact Tag cloud Custom widget (demonstrated with the teaching example)  The example site that you copied to create your site uses all the different types of widget (except talks), so you can generally just delete the widgets you don&#39;t need and customize the parameters of the widgets you wish to keep.</description>
    </item>
    
  </channel>
</rss>