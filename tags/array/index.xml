<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>array on geraldo.dev</title>
    <link>https://geraldo.dev/tags/array/</link>
    <description>Recent content in array on geraldo.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>&amp;copy; 2019 Geraldo Ribeiro</copyright>
    <lastBuildDate>Sat, 04 Jan 2020 00:00:00 -0300</lastBuildDate>
    
	<atom:link href="https://geraldo.dev/tags/array/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43;: array</title>
      <link>https://geraldo.dev/posts/cpp-array/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/cpp-array/</guid>
      <description>Características  é um wrapper para o array do C array oferece uma sintaxe mais amigável comparada com a array do C pode ser passado e retornado por valor pode ser passado e retornado por referência uso mais conveniente de size uso mais conveniente de iteradores STL possui exatamente a mesma performace da array do C  Array vs Vector  array é estático e possui tamanho definido em tempo de compilação vector é dinâmico e é alocado no heap  Exemplos 1 auto print = []( const auto &amp;amp;arr ) { 2 cout &amp;lt;&amp;lt; &amp;#34;{ &amp;#34;; 3 for( const auto &amp;amp;x : arr ) { 4 cout &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &amp;#34;&amp;#34;; 5 } 6 cout &amp;lt;&amp;lt; &amp;#34;}&amp;#34; &amp;lt;&amp;lt; endl; 7 }; 8 9 array&amp;lt;int, 3&amp;gt; a = {2, 1, 3}; 10 int c[3] = {2, 1, 3}; // old C style 11 12 sort( a.</description>
    </item>
    
  </channel>
</rss>