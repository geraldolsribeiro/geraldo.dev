<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on geraldo.dev</title>
    <link>https://geraldo.dev/tags/git/</link>
    <description>Recent content in git on geraldo.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>&amp;copy; 2019 Geraldo Ribeiro</copyright>
    <lastBuildDate>Sun, 08 Dec 2019 00:00:00 -0300</lastBuildDate>
    
	<atom:link href="https://geraldo.dev/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>git - dicas</title>
      <link>https://geraldo.dev/posts/git-dicas/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/git-dicas/</guid>
      <description>Diferença entre dois branches &amp;ndash; somente nomes de arquivos 1git diff --name-only branch-1 branch-2 Status:
 M arquivos modificados A arquivos adicionados D arquivos removidos  Filtrando por estes códigos de status temos as próximas dicas.
Listar somente os arquivos modificados entre dois branches 1git diff --name-status branch-1 branch-2 | sed -n &amp;#34;s/^M\s\+//p&amp;#34;  filtra somente as linhas que começam com M de modificado.  Listar somente os arquivos adicionados entre dois branches 1git diff --name-status branch-1 branch-2 | sed -n &amp;#34;s/^A\s\+//p&amp;#34;  filtra somente as linhas que começam com A de adicionado  Listar somente os arquivos removidos entre dois branches 1git diff --name-status branch-1 branch-2 | sed -n &amp;#34;s/^D\s\+//p&amp;#34;  filtra somente as linhas que começam com D de deletados  Referências  Git - Getting a list of files changed between branches  </description>
    </item>
    
    <item>
      <title>Git - Limpando o repositório</title>
      <link>https://geraldo.dev/posts/git-limpeza/</link>
      <pubDate>Thu, 05 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/git-limpeza/</guid>
      <description>Para listar todos os branch locais que já formam mergeados no dev:
git branch --merged dev ajuste-cabecalho-inclui-guarda-de-formatacao dev fix-270B fix-86 fix-gitignore fix-wakeup hotfix-import-faltando * test-naming-service testar-xml-gerado-contra-dtd teste-funcional teste-funcional-com-geracao-de-screenshot update-documentation-from-testlink Nota: O branch marcado com * é o branch atual e não deve ser removido se estiver dentro dele.
$ git branch --merged dev | egrep -v &amp;quot;\*&amp;quot; ajuste-cabecalho-inclui-guarda-de-formatacao dev fix-270B fix-86 fix-gitignore fix-wakeup hotfix-import-faltando testar-xml-gerado-contra-dtd teste-funcional teste-funcional-com-geracao-de-screenshot update-documentation-from-testlink Passando esta lista para um xargs fica fácil executar o git branch -d para cada um dos branches mergeados.</description>
    </item>
    
  </channel>
</rss>