<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on geraldo.dev</title>
    <link>https://geraldo.dev/tags/javascript/</link>
    <description>Recent content in javascript on geraldo.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>&amp;copy; 2019-2020 Geraldo Ribeiro</copyright>
    <lastBuildDate>Tue, 03 Dec 2019 00:00:00 -0300</lastBuildDate>
    
	<atom:link href="https://geraldo.dev/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Eventos em javascript</title>
      <link>https://geraldo.dev/posts/js-eventos/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/js-eventos/</guid>
      <description>Principais eventos  onBlur: remove o foco do elemento onChange: muda o valor do elemento onClick: o elemento é clicado pelo usuário onFocus: o elemento é focado onKeyPress: o usuário pressiona uma tecla sobre o elemento onLoad: carrega o elemento por completo onMouseOver: define ação quando o usuário passa o mouse sobre o elemento onMouseOut: define ação quando o usuário retira o mouse sobre o elemento onSubmit: define ação ao enviar um formulário  Eventos inline 1&amp;lt;h1 onclick=&amp;#34;this.</description>
    </item>
    
    <item>
      <title>javascript set</title>
      <link>https://geraldo.dev/posts/js-set/</link>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/js-set/</guid>
      <description>https://alligator.io/js/sets-introduction/
1let animals = new Set(); 2 3animals.add(&amp;#39;🐷&amp;#39;); 4animals.add(&amp;#39;🐼&amp;#39;); 5animals.add(&amp;#39;🐢&amp;#39;); 6animals.add(&amp;#39;🐿&amp;#39;); 7console.log(animals.size); // 4 8animals.add(&amp;#39;🐼&amp;#39;); 9console.log(animals.size); // 4 10 11console.log(animals.has(&amp;#39;🐷&amp;#39;)); // true 12animals.delete(&amp;#39;🐷&amp;#39;); 13console.log(animals.has(&amp;#39;🐷&amp;#39;)); // false 14 15animals.forEach(animal =&amp;gt; { 16 console.log(\`Hey ${animal}!\`); 17}); 1819// Hey 🐼! 20// Hey 🐢! 21// Hey 🐿! 2223animals.clear(); 24console.log(animals.size); // 0 1let myAnimals = new Set([&amp;#39;🐷&amp;#39;, &amp;#39;🐢&amp;#39;, &amp;#39;🐷&amp;#39;, &amp;#39;🐷&amp;#39;]); 2 3myAnimals.add([&amp;#39;🐨&amp;#39;, &amp;#39;🐑&amp;#39;]); 4myAnimals.add({ name: &amp;#39;Rud&amp;#39;, type: &amp;#39;🐢&amp;#39; }); 5console.log(myAnimals.size); // 4 6 7myAnimals.forEach(animal =&amp;gt; { 8 console.</description>
    </item>
    
    <item>
      <title>Javascript - console.dir</title>
      <link>https://geraldo.dev/posts/javascript-console-dir/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 -0300</pubDate>
      
      <guid>https://geraldo.dev/posts/javascript-console-dir/</guid>
      <description>Considere a seguinte página:
1&amp;lt;html&amp;gt; 2 &amp;lt;head&amp;gt;&amp;lt;/head&amp;gt; 3 &amp;lt;body&amp;gt; 4 &amp;lt;input id=&amp;#34;clickMe&amp;#34; type=&amp;#34;button&amp;#34; value=&amp;#34;Clique aqui&amp;#34;&amp;gt; 5 &amp;lt;/body&amp;gt; 6&amp;lt;/html&amp;gt; Que quando aberta no navegador tem a seguinte aparência:
 img   Para obter o elemento do botão poderiamos fazer o seguinte:
1var btn = document.getElementById( &amp;#39;clickMe&amp;#39; ); Agora que temos o objeto botão armazenado em uma variável chamada btn podemos obter mais informações.
Ao enviar a variável btn para a função console.</description>
    </item>
    
  </channel>
</rss>