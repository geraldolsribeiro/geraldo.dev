export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dm,dn,do0,dp){return {data:{"content-query-lG8HpYT942":{_path:"\u002Ftil\u002Fcpp-mlpack-feed-forward-neural-network-no-debian",_draft:N,_partial:N,_locale:"en",_empty:N,title:"Feed Forward Neural Network no debian com mlpack",description:"Como criar uma rede neural do tipo feed forward em C++ no Debian stable",excerpt:{type:bd,children:[{type:a,tag:d,props:{},children:[{type:b,value:be},{type:a,tag:n,props:{href:bf,rel:[o]},children:[{type:b,value:bg}]},{type:b,value:bh},{type:a,tag:n,props:{href:bi,rel:[o]},children:[{type:b,value:w}]},{type:b,value:bj},{type:a,tag:f,props:{},children:[{type:b,value:w}]},{type:b,value:bk}]},{type:a,tag:q,props:{id:O},children:[{type:b,value:P}]},{type:a,tag:d,props:{},children:[{type:b,value:bl}]},{type:a,tag:bm,props:{},children:[{type:a,tag:bn,props:{},children:[{type:a,tag:r,props:{},children:[{type:a,tag:C,props:{align:m},children:[{type:b,value:bo}]},{type:a,tag:C,props:{align:m},children:[{type:b,value:bp}]},{type:a,tag:C,props:{align:s},children:[{type:b,value:bq}]}]}]},{type:a,tag:br,props:{},children:[{type:a,tag:r,props:{},children:[{type:a,tag:l,props:{align:m},children:[{type:b,value:bs}]},{type:a,tag:l,props:{align:m},children:[{type:b,value:bt}]},{type:a,tag:l,props:{align:s},children:[{type:b,value:bu}]}]},{type:a,tag:r,props:{},children:[{type:a,tag:l,props:{align:m},children:[{type:b,value:bv}]},{type:a,tag:l,props:{align:m},children:[{type:b,value:bw}]},{type:a,tag:l,props:{align:s},children:[{type:b,value:E}]}]},{type:a,tag:r,props:{},children:[{type:a,tag:l,props:{align:m},children:[{type:b,value:bx}]},{type:a,tag:l,props:{align:m},children:[{type:b,value:by}]},{type:a,tag:l,props:{align:s},children:[{type:b,value:E}]}]},{type:a,tag:r,props:{},children:[{type:a,tag:l,props:{align:m},children:[{type:b,value:bz}]},{type:a,tag:l,props:{align:m},children:[{type:b,value:bA}]},{type:a,tag:l,props:{align:s},children:[{type:b,value:bB}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:bC},{type:a,tag:f,props:{},children:[{type:b,value:bD}]},{type:b,value:bE},{type:a,tag:n,props:{href:bF,rel:[o]},children:[{type:b,value:bG}]},{type:b,value:bH},{type:a,tag:n,props:{href:bI,rel:[o]},children:[{type:b,value:bJ}]},{type:b,value:t}]},{type:a,tag:d,props:{},children:[{type:b,value:bK},{type:a,tag:f,props:{},children:[{type:b,value:bL}]},{type:b,value:bM},{type:a,tag:f,props:{},children:[{type:b,value:x}]},{type:b,value:t}]},{type:a,tag:q,props:{id:Q},children:[{type:b,value:R}]},{type:a,tag:d,props:{},children:[{type:b,value:bN},{type:a,tag:f,props:{},children:[{type:b,value:D}]},{type:b,value:bO},{type:a,tag:f,props:{},children:[{type:b,value:D}]},{type:b,value:bP},{type:a,tag:f,props:{},children:[{type:b,value:x}]},{type:b,value:bQ},{type:a,tag:f,props:{},children:[{type:b,value:F}]},{type:b,value:bR},{type:a,tag:f,props:{},children:[{type:b,value:x}]},{type:b,value:bS},{type:a,tag:f,props:{},children:[{type:b,value:D}]},{type:b,value:bT},{type:a,tag:f,props:{},children:[{type:b,value:F}]},{type:b,value:bU}]},{type:a,tag:d,props:{},children:[{type:b,value:bV},{type:a,tag:y,props:{},children:[{type:b,value:bW}]},{type:b,value:bX},{type:a,tag:y,props:{},children:[{type:b,value:bY}]},{type:b,value:bZ}]},{type:a,tag:d,props:{},children:[{type:b,value:b_},{type:a,tag:u,props:{},children:[{type:b,value:b$}]},{type:b,value:ca}]},{type:a,tag:d,props:{},children:[{type:b,value:cb},{type:a,tag:f,props:{},children:[{type:b,value:w}]},{type:b,value:cc},{type:a,tag:f,props:{},children:[{type:b,value:S}]},{type:b,value:cd},{type:a,tag:f,props:{},children:[{type:b,value:x}]},{type:b,value:ce},{type:a,tag:f,props:{},children:[{type:b,value:G}]},{type:b,value:cf}]},{type:a,tag:c,props:{code:T,language:b},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:T}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:H},{type:a,tag:f,props:{},children:[{type:b,value:G}]},{type:b,value:cg}]},{type:a,tag:d,props:{},children:[{type:b,value:ch}]},{type:a,tag:d,props:{},children:[{type:b,value:ci},{type:a,tag:f,props:{},children:[{type:b,value:U}]},{type:b,value:cj}]},{type:a,tag:c,props:{code:V,language:I},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:V}]}]}]},{type:a,tag:q,props:{id:W},children:[{type:b,value:X}]},{type:a,tag:d,props:{},children:[{type:b,value:ck}]},{type:a,tag:d,props:{},children:[{type:b,value:cl}]},{type:a,tag:d,props:{},children:[{type:a,tag:v,props:{alt:J,src:cm},children:[]}]},{type:a,tag:d,props:{},children:[{type:b,value:cn},{type:a,tag:u,props:{},children:[{type:b,value:co}]},{type:b,value:cp},{type:a,tag:u,props:{},children:[{type:b,value:cq}]},{type:b,value:cr},{type:a,tag:u,props:{},children:[{type:b,value:cs}]},{type:b,value:t}]},{type:a,tag:d,props:{},children:[{type:a,tag:v,props:{alt:J,src:ct},children:[]}]},{type:a,tag:d,props:{},children:[{type:b,value:H},{type:a,tag:f,props:{},children:[{type:b,value:cu}]},{type:b,value:cv},{type:a,tag:y,props:{},children:[{type:b,value:cw}]},{type:b,value:cx},{type:a,tag:y,props:{},children:[{type:b,value:cy}]},{type:b,value:cz}]},{type:a,tag:c,props:{code:Y,language:cA},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:Y}]}]}]},{type:a,tag:q,props:{id:Z},children:[{type:b,value:_}]},{type:a,tag:j,props:{id:$},children:[{type:b,value:aa}]},{type:a,tag:d,props:{},children:[{type:b,value:cB}]},{type:a,tag:c,props:{code:ab,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:ab}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:cC}]},{type:a,tag:c,props:{code:ac,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:ac}]}]}]},{type:a,tag:j,props:{id:ad},children:[{type:b,value:ae}]},{type:a,tag:d,props:{},children:[{type:b,value:cD},{type:a,tag:n,props:{href:cE,rel:[o]},children:[{type:b,value:cF}]},{type:b,value:cG},{type:a,tag:f,props:{},children:[{type:b,value:cH}]},{type:b,value:cI},{type:a,tag:n,props:{href:cJ,rel:[o]},children:[{type:b,value:cK}]},{type:b,value:cL},{type:a,tag:f,props:{},children:[{type:b,value:w}]},{type:b,value:t}]},{type:a,tag:d,props:{},children:[{type:b,value:cM}]},{type:a,tag:d,props:{},children:[{type:b,value:cN}]},{type:a,tag:c,props:{code:af,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:af}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:cO}]},{type:a,tag:d,props:{},children:[{type:a,tag:v,props:{alt:cP,src:cQ},children:[]}]},{type:a,tag:d,props:{},children:[{type:b,value:cR}]},{type:a,tag:j,props:{id:ag},children:[{type:b,value:ah}]},{type:a,tag:d,props:{},children:[{type:b,value:cS},{type:a,tag:u,props:{},children:[{type:b,value:cT}]},{type:b,value:cU}]},{type:a,tag:c,props:{code:ai,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:ai}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:cV}]},{type:a,tag:j,props:{id:aj},children:[{type:b,value:ak}]},{type:a,tag:d,props:{},children:[{type:b,value:z},{type:a,tag:f,props:{},children:[{type:b,value:A}]},{type:b,value:cW}]},{type:a,tag:c,props:{code:al,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:al}]}]}]},{type:a,tag:j,props:{id:am},children:[{type:b,value:an}]},{type:a,tag:d,props:{},children:[{type:b,value:z},{type:a,tag:f,props:{},children:[{type:b,value:A}]},{type:b,value:cX}]},{type:a,tag:c,props:{code:ao,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:ao}]}]}]},{type:a,tag:j,props:{id:ap},children:[{type:b,value:aq}]},{type:a,tag:d,props:{},children:[{type:b,value:z},{type:a,tag:f,props:{},children:[{type:b,value:A}]},{type:b,value:cY}]},{type:a,tag:c,props:{code:ar,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:ar}]}]}]},{type:a,tag:j,props:{id:as},children:[{type:b,value:at}]},{type:a,tag:d,props:{},children:[{type:b,value:z},{type:a,tag:f,props:{},children:[{type:b,value:A}]},{type:b,value:cZ}]},{type:a,tag:c,props:{code:au,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:au}]}]}]},{type:a,tag:j,props:{id:av},children:[{type:b,value:aw}]},{type:a,tag:c,props:{code:ax,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:ax}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:c_}]},{type:a,tag:c,props:{code:ay},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:ay}]}]}]},{type:a,tag:j,props:{id:az},children:[{type:b,value:aA}]},{type:a,tag:d,props:{},children:[{type:a,tag:v,props:{alt:v,src:c$},children:[]}]},{type:a,tag:c,props:{code:aB,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aB}]}]}]},{type:a,tag:j,props:{id:aC},children:[{type:b,value:aD}]},{type:a,tag:d,props:{},children:[{type:b,value:da}]},{type:a,tag:c,props:{code:aE,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aE}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:db}]},{type:a,tag:c,props:{code:aF},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aF}]}]}]},{type:a,tag:j,props:{id:aG},children:[{type:b,value:aH}]},{type:a,tag:c,props:{code:aI,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aI}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:K}]},{type:a,tag:c,props:{code:aJ},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aJ}]}]}]},{type:a,tag:j,props:{id:aK},children:[{type:b,value:aL}]},{type:a,tag:d,props:{},children:[{type:b,value:dc},{type:a,tag:f,props:{},children:[{type:b,value:dd}]},{type:b,value:de},{type:a,tag:f,props:{},children:[{type:b,value:df}]},{type:b,value:dg}]},{type:a,tag:c,props:{code:aM,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aM}]}]}]},{type:a,tag:j,props:{id:aN},children:[{type:b,value:aO}]},{type:a,tag:c,props:{code:aP,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aP}]}]}]},{type:a,tag:j,props:{id:aQ},children:[{type:b,value:aR}]},{type:a,tag:c,props:{code:aS,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aS}]}]}]},{type:a,tag:j,props:{id:aT},children:[{type:b,value:aU}]},{type:a,tag:c,props:{code:aV,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aV}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:K}]},{type:a,tag:c,props:{code:aW},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aW}]}]}]},{type:a,tag:j,props:{id:aX},children:[{type:b,value:aY}]},{type:a,tag:c,props:{code:aZ,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:aZ}]}]}]},{type:a,tag:q,props:{id:a_},children:[{type:b,value:a$}]},{type:a,tag:d,props:{},children:[{type:b,value:dh},{type:a,tag:n,props:{href:di,rel:[o]},children:[{type:b,value:dj}]},{type:b,value:t}]},{type:a,tag:d,props:{},children:[{type:b,value:dk}]},{type:a,tag:c,props:{code:ba,language:I},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:b,value:ba}]}]}]},{type:a,tag:q,props:{id:bb},children:[{type:b,value:bc}]},{type:a,tag:dl,props:{},children:[{type:a,tag:L,props:{},children:[{type:a,tag:n,props:{href:dm,rel:[o]},children:[{type:b,value:dn}]}]},{type:a,tag:L,props:{},children:[{type:a,tag:n,props:{href:do0,rel:[o]},children:[{type:b,value:dp}]}]}]}]},date:"2019-04-29T00:00:00.000Z",tags:["ffn",w,"debian","linux",U,"C++","cpp",S],thumbnail:"\u002Fimg\u002Fheaders\u002Fffn.jpg",body:{type:bd,children:[{type:a,tag:d,props:{},children:[{type:b,value:be},{type:a,tag:n,props:{href:bf,rel:[o]},children:[{type:b,value:bg}]},{type:b,value:bh},{type:a,tag:n,props:{href:bi,rel:[o]},children:[{type:b,value:w}]},{type:b,value:bj},{type:a,tag:f,props:{},children:[{type:b,value:w}]},{type:b,value:bk}]},{type:a,tag:q,props:{id:O},children:[{type:b,value:P}]},{type:a,tag:d,props:{},children:[{type:b,value:bl}]},{type:a,tag:bm,props:{},children:[{type:a,tag:bn,props:{},children:[{type:a,tag:r,props:{},children:[{type:a,tag:C,props:{align:m},children:[{type:b,value:bo}]},{type:a,tag:C,props:{align:m},children:[{type:b,value:bp}]},{type:a,tag:C,props:{align:s},children:[{type:b,value:bq}]}]}]},{type:a,tag:br,props:{},children:[{type:a,tag:r,props:{},children:[{type:a,tag:l,props:{align:m},children:[{type:b,value:bs}]},{type:a,tag:l,props:{align:m},children:[{type:b,value:bt}]},{type:a,tag:l,props:{align:s},children:[{type:b,value:bu}]}]},{type:a,tag:r,props:{},children:[{type:a,tag:l,props:{align:m},children:[{type:b,value:bv}]},{type:a,tag:l,props:{align:m},children:[{type:b,value:bw}]},{type:a,tag:l,props:{align:s},children:[{type:b,value:E}]}]},{type:a,tag:r,props:{},children:[{type:a,tag:l,props:{align:m},children:[{type:b,value:bx}]},{type:a,tag:l,props:{align:m},children:[{type:b,value:by}]},{type:a,tag:l,props:{align:s},children:[{type:b,value:E}]}]},{type:a,tag:r,props:{},children:[{type:a,tag:l,props:{align:m},children:[{type:b,value:bz}]},{type:a,tag:l,props:{align:m},children:[{type:b,value:bA}]},{type:a,tag:l,props:{align:s},children:[{type:b,value:bB}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:bC},{type:a,tag:f,props:{},children:[{type:b,value:bD}]},{type:b,value:bE},{type:a,tag:n,props:{href:bF,rel:[o]},children:[{type:b,value:bG}]},{type:b,value:bH},{type:a,tag:n,props:{href:bI,rel:[o]},children:[{type:b,value:bJ}]},{type:b,value:t}]},{type:a,tag:d,props:{},children:[{type:b,value:bK},{type:a,tag:f,props:{},children:[{type:b,value:bL}]},{type:b,value:bM},{type:a,tag:f,props:{},children:[{type:b,value:x}]},{type:b,value:t}]},{type:a,tag:q,props:{id:Q},children:[{type:b,value:R}]},{type:a,tag:d,props:{},children:[{type:b,value:bN},{type:a,tag:f,props:{},children:[{type:b,value:D}]},{type:b,value:bO},{type:a,tag:f,props:{},children:[{type:b,value:D}]},{type:b,value:bP},{type:a,tag:f,props:{},children:[{type:b,value:x}]},{type:b,value:bQ},{type:a,tag:f,props:{},children:[{type:b,value:F}]},{type:b,value:bR},{type:a,tag:f,props:{},children:[{type:b,value:x}]},{type:b,value:bS},{type:a,tag:f,props:{},children:[{type:b,value:D}]},{type:b,value:bT},{type:a,tag:f,props:{},children:[{type:b,value:F}]},{type:b,value:bU}]},{type:a,tag:d,props:{},children:[{type:b,value:bV},{type:a,tag:y,props:{},children:[{type:b,value:bW}]},{type:b,value:bX},{type:a,tag:y,props:{},children:[{type:b,value:bY}]},{type:b,value:bZ}]},{type:a,tag:d,props:{},children:[{type:b,value:b_},{type:a,tag:u,props:{},children:[{type:b,value:b$}]},{type:b,value:ca}]},{type:a,tag:d,props:{},children:[{type:b,value:cb},{type:a,tag:f,props:{},children:[{type:b,value:w}]},{type:b,value:cc},{type:a,tag:f,props:{},children:[{type:b,value:S}]},{type:b,value:cd},{type:a,tag:f,props:{},children:[{type:b,value:x}]},{type:b,value:ce},{type:a,tag:f,props:{},children:[{type:b,value:G}]},{type:b,value:cf}]},{type:a,tag:c,props:{code:T,language:b},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:H},{type:a,tag:f,props:{},children:[{type:b,value:G}]},{type:b,value:cg}]},{type:a,tag:d,props:{},children:[{type:b,value:ch}]},{type:a,tag:d,props:{},children:[{type:b,value:ci},{type:a,tag:f,props:{},children:[{type:b,value:U}]},{type:b,value:cj}]},{type:a,tag:c,props:{code:V,language:I},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{class:M},children:[{type:b,value:"apt install libmlpack-dev"}]}]}]}]}]},{type:a,tag:q,props:{id:W},children:[{type:b,value:X}]},{type:a,tag:d,props:{},children:[{type:b,value:ck}]},{type:a,tag:d,props:{},children:[{type:b,value:cl}]},{type:a,tag:d,props:{},children:[{type:a,tag:v,props:{alt:J,src:cm},children:[]}]},{type:a,tag:d,props:{},children:[{type:b,value:cn},{type:a,tag:u,props:{},children:[{type:b,value:co}]},{type:b,value:cp},{type:a,tag:u,props:{},children:[{type:b,value:cq}]},{type:b,value:cr},{type:a,tag:u,props:{},children:[{type:b,value:cs}]},{type:b,value:t}]},{type:a,tag:d,props:{},children:[{type:a,tag:v,props:{alt:J,src:ct},children:[]}]},{type:a,tag:d,props:{},children:[{type:b,value:H},{type:a,tag:f,props:{},children:[{type:b,value:cu}]},{type:b,value:cv},{type:a,tag:y,props:{},children:[{type:b,value:cw}]},{type:b,value:cx},{type:a,tag:y,props:{},children:[{type:b,value:cy}]},{type:b,value:cz}]},{type:a,tag:c,props:{code:Y,language:cA},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n..."}]}]}]}]}]},{type:a,tag:q,props:{id:Z},children:[{type:b,value:_}]},{type:a,tag:j,props:{id:$},children:[{type:b,value:aa}]},{type:a,tag:d,props:{},children:[{type:b,value:cB}]},{type:a,tag:c,props:{code:ab,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"#include \u003Cmlpack\u002Fcore.hpp\u003E\n#include \u003Cmlpack\u002Fmethods\u002Fann\u002Fffn.hpp\u003E\n#include \u003Cmlpack\u002Fmethods\u002Fann\u002Flayer\u002Flayer.hpp\u003E\n#include \u003Cmlpack\u002Fmethods\u002Fann\u002Floss_functions\u002Fmean_squared_error.hpp\u003E"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:cC}]},{type:a,tag:c,props:{code:ac,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;"}]}]}]}]}]},{type:a,tag:j,props:{id:ad},children:[{type:b,value:ae}]},{type:a,tag:d,props:{},children:[{type:b,value:cD},{type:a,tag:n,props:{href:cE,rel:[o]},children:[{type:b,value:cF}]},{type:b,value:cG},{type:a,tag:f,props:{},children:[{type:b,value:cH}]},{type:b,value:cI},{type:a,tag:n,props:{href:cJ,rel:[o]},children:[{type:b,value:cK}]},{type:b,value:cL},{type:a,tag:f,props:{},children:[{type:b,value:w}]},{type:b,value:t}]},{type:a,tag:d,props:{},children:[{type:b,value:cM}]},{type:a,tag:d,props:{},children:[{type:b,value:cN}]},{type:a,tag:c,props:{code:af,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  \u002F\u002F lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  \u002F\u002F transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout \u003C\u003C \"Linhas:  \" \u003C\u003C data.n_rows \u003C\u003C endl; \u002F\u002F 3\n  cout \u003C\u003C \"Colunas: \" \u003C\u003C data.n_cols \u003C\u003C endl; \u002F\u002F 400"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:cO}]},{type:a,tag:d,props:{},children:[{type:a,tag:v,props:{alt:cP,src:cQ},children:[]}]},{type:a,tag:d,props:{},children:[{type:b,value:cR}]},{type:a,tag:j,props:{id:ag},children:[{type:b,value:ah}]},{type:a,tag:d,props:{},children:[{type:b,value:cS},{type:a,tag:u,props:{},children:[{type:b,value:cT}]},{type:b,value:cU}]},{type:a,tag:c,props:{code:ai,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:cV}]},{type:a,tag:j,props:{id:aj},children:[{type:b,value:ak}]},{type:a,tag:d,props:{},children:[{type:b,value:z},{type:a,tag:f,props:{},children:[{type:b,value:A}]},{type:b,value:cW}]},{type:a,tag:c,props:{code:al,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{type:a,tag:j,props:{id:am},children:[{type:b,value:an}]},{type:a,tag:d,props:{},children:[{type:b,value:z},{type:a,tag:f,props:{},children:[{type:b,value:A}]},{type:b,value:cX}]},{type:a,tag:c,props:{code:ao,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{type:a,tag:j,props:{id:ap},children:[{type:b,value:aq}]},{type:a,tag:d,props:{},children:[{type:b,value:z},{type:a,tag:f,props:{},children:[{type:b,value:A}]},{type:b,value:cY}]},{type:a,tag:c,props:{code:ar,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{type:a,tag:j,props:{id:as},children:[{type:b,value:at}]},{type:a,tag:d,props:{},children:[{type:b,value:z},{type:a,tag:f,props:{},children:[{type:b,value:A}]},{type:b,value:cZ}]},{type:a,tag:c,props:{code:au,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );"}]}]}]}]}]},{type:a,tag:j,props:{id:av},children:[{type:b,value:aw}]},{type:a,tag:c,props:{code:ax,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  cout \u003C\u003C \"Dados de entrada para teste: \\n\" \u003C\u003C testdata \u003C\u003C endl;\n  cout \u003C\u003C \"Dados de saída para teste: \\n\" \u003C\u003C testlabels \u003C\u003C endl;"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:c_}]},{type:a,tag:c,props:{code:ay},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000"}]}]}]}]}]},{type:a,tag:j,props:{id:az},children:[{type:b,value:aA}]},{type:a,tag:d,props:{},children:[{type:a,tag:v,props:{alt:v,src:c$},children:[]}]},{type:a,tag:c,props:{code:aB,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  \u002F\u002F Feed Forward Network\n  \u002F\u002F FFN\u003Ctipo-de-saída-das-camadas, regra-de-inicialização\u003E model;\n  FFN\u003CMeanSquaredError\u003C\u003E, RandomInitialization\u003E model;\n  \u002F\u002F Adiciona camada com 2 entradas e 8 saídas\n  model.Add\u003CLinear\u003C\u003E\u003E( traindata.n_rows, 8 );\n  model.Add\u003CSigmoidLayer\u003C\u003E\u003E();\n  \u002F\u002F Adiciona camada com 8 entradas e 8 saídas\n  model.Add\u003CLinear\u003C\u003E\u003E( 8, 8 );\n  model.Add\u003CSigmoidLayer\u003C\u003E\u003E();\n  \u002F\u002F Adiciona camada com 8 entradas e 1 saída\n  model.Add\u003CLinear\u003C\u003E\u003E( 8, 1 );\n  model.Add\u003CSigmoidLayer\u003C\u003E\u003E();"}]}]}]}]}]},{type:a,tag:j,props:{id:aC},children:[{type:b,value:aD}]},{type:a,tag:d,props:{},children:[{type:b,value:da}]},{type:a,tag:c,props:{code:aE,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  for( int i = 0; i \u003C 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    \u002F\u002F Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    \u002F\u002F Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout \u003C\u003C \"Erro: \" \u003C\u003C diff * diff.t();\n  }"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:db}]},{type:a,tag:c,props:{code:aF},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024"}]}]}]}]}]},{type:a,tag:j,props:{id:aG},children:[{type:b,value:aH}]},{type:a,tag:c,props:{code:aI,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  mat assignments;\n  model.Predict( testdata, assignments );\n  cout \u003C\u003C \"Previsões:\\n\" \u003C\u003C assignments \u003C\u003C endl;\n  cout \u003C\u003C \"Classificação correta:\\n\" \u003C\u003C testlabels \u003C\u003C endl;"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:K}]},{type:a,tag:c,props:{code:aJ},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000"}]}]}]}]}]},{type:a,tag:j,props:{id:aK},children:[{type:b,value:aL}]},{type:a,tag:d,props:{},children:[{type:b,value:dc},{type:a,tag:f,props:{},children:[{type:b,value:dd}]},{type:b,value:de},{type:a,tag:f,props:{},children:[{type:b,value:df}]},{type:b,value:dg}]},{type:a,tag:c,props:{code:aM,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  Save( \"model.xml\", \"model\", model, false );"}]}]}]}]}]},{type:a,tag:j,props:{id:aN},children:[{type:b,value:aO}]},{type:a,tag:c,props:{code:aP,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  Load( \"model.xml\", \"model\", model );"}]}]}]}]}]},{type:a,tag:j,props:{id:aQ},children:[{type:b,value:aR}]},{type:a,tag:c,props:{code:aS,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  for( int i = 0; i \u003C 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }"}]}]}]}]}]},{type:a,tag:j,props:{id:aT},children:[{type:b,value:aU}]},{type:a,tag:c,props:{code:aV,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  model.Predict( testdata, assignments );\n  cout \u003C\u003C \"Previsões:\\n\" \u003C\u003C assignments \u003C\u003C endl;\n  cout \u003C\u003C \"Classificação correta:\\n\" \u003C\u003C testlabels \u003C\u003C endl;"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:K}]},{type:a,tag:c,props:{code:aW},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000"}]}]}]}]}]},{type:a,tag:j,props:{id:aX},children:[{type:b,value:aY}]},{type:a,tag:c,props:{code:aZ,language:i},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{},children:[{type:b,value:"  Save( \"model2.xml\", \"model\", model, false );"}]}]}]}]}]},{type:a,tag:q,props:{id:a_},children:[{type:b,value:a$}]},{type:a,tag:d,props:{},children:[{type:b,value:dh},{type:a,tag:n,props:{href:di,rel:[o]},children:[{type:b,value:dj}]},{type:b,value:t}]},{type:a,tag:d,props:{},children:[{type:b,value:dk}]},{type:a,tag:c,props:{code:ba,language:I},children:[{type:a,tag:h,props:{},children:[{type:a,tag:c,props:{__ignoreMap:g},children:[{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{class:M},children:[{type:b,value:"git clone https:\u002F\u002Fgithub.com\u002Fgeraldolsribeiro\u002Fmlpack-tutorials\u002F"}]}]},{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{class:"ct-0839d5"},children:[{type:b,value:"cd"}]},{type:a,tag:e,props:{class:M},children:[{type:b,value:" mlpack-tutorials\u002Fffn"}]}]},{type:a,tag:e,props:{class:k},children:[{type:a,tag:e,props:{class:M},children:[{type:b,value:"make"}]}]}]}]}]},{type:a,tag:q,props:{id:bb},children:[{type:b,value:bc}]},{type:a,tag:dl,props:{},children:[{type:a,tag:L,props:{},children:[{type:a,tag:n,props:{href:dm,rel:[o]},children:[{type:b,value:dn}]}]},{type:a,tag:L,props:{},children:[{type:a,tag:n,props:{href:do0,rel:[o]},children:[{type:b,value:dp}]}]}]},{type:a,tag:"style",children:[{type:b,value:".ct-0839d5{color:#66D9EF}.ct-b52bf5{color:#F8F8F2}"}]}],toc:{title:g,searchDepth:B,depth:B,links:[{id:O,depth:B,text:P},{id:Q,depth:B,text:R},{id:W,depth:B,text:X},{id:Z,depth:B,text:_,children:[{id:$,depth:p,text:aa},{id:ad,depth:p,text:ae},{id:ag,depth:p,text:ah},{id:aj,depth:p,text:ak},{id:am,depth:p,text:an},{id:ap,depth:p,text:aq},{id:as,depth:p,text:at},{id:av,depth:p,text:aw},{id:az,depth:p,text:aA},{id:aC,depth:p,text:aD},{id:aG,depth:p,text:aH},{id:aK,depth:p,text:aL},{id:aN,depth:p,text:aO},{id:aQ,depth:p,text:aR},{id:aT,depth:p,text:aU},{id:aX,depth:p,text:aY}]},{id:a_,depth:B,text:a$},{id:bb,depth:B,text:bc}]}},_type:"markdown",_id:"content:til:cpp-mlpack-feed-forward-neural-network-no-debian.md",_source:"content",_file:"til\u002Fcpp-mlpack-feed-forward-neural-network-no-debian.md",_extension:"md"}},prerenderedAt:1664127116725}}("element","text","code","p","span","code-inline","","pre","c++","h3","line","td","center","a","nofollow",3,"h2","tr",null,".","em","img","mlpack","testing","strong","Usando a função ","submat",2,"th","stable","amd64 arm64 armel armhf i386 mips mips64el mipsel ppc64el s390x","unstable","\u002Fetc\u002Fapt\u002Fpreferences.d\u002Fmlpack","O arquivo ","bash","Grupo de dados de treinamento","Saída:","li","ct-b52bf5",false,"versões-do-mlpack-disponíveis-do-debian","Versões do mlpack disponíveis do Debian","utilizando-pacotes-testing-junto-com-stable","Utilizando pacotes testing junto com stable","armadillo","Package: *mlpack*\nPin: release a=testing\nPin-Priority: 1002\n\nPackage: *armadillo*\nPin: release a=testing\nPin-Priority: 1002\n","apt","apt install libmlpack-dev\n","dados-de-treinamento","Dados de treinamento","-1.336471627143056118e+00,3.770125142464317847e+00,0.000000000000000000e+00\n1.804415958408375431e+00,2.999013679368799146e+00,1.000000000000000000e+00\n1.401588838630331679e+00,3.746404773569839364e+00,0.000000000000000000e+00\n9.741670427761830453e-01,3.361695788254598583e+00,1.000000000000000000e+00\n-2.602637515616321284e+00,2.340144859256901189e+00,1.000000000000000000e+00\n...\n","implementação","Implementação","carregando-as-dependências","Carregando as dependências","#include \u003Cmlpack\u002Fcore.hpp\u003E\n#include \u003Cmlpack\u002Fmethods\u002Fann\u002Fffn.hpp\u003E\n#include \u003Cmlpack\u002Fmethods\u002Fann\u002Flayer\u002Flayer.hpp\u003E\n#include \u003Cmlpack\u002Fmethods\u002Fann\u002Floss_functions\u002Fmean_squared_error.hpp\u003E\n","using namespace mlpack;\nusing namespace mlpack::ann;\nusing namespace mlpack::optimization;\nusing namespace arma;\nusing namespace std;\nusing mlpack::data::Load;\nusing mlpack::data::Save;\n","carregar-e-transpor-os-dados-do-arquivo-csv","Carregar e transpor os dados do arquivo CSV","  \u002F\u002F lança uma exceção std::runtime_error se não conseguir carregar. default false\n  const auto THROW_EXCEPTION = true;\n  \u002F\u002F transpôe a matriz depois de carregar. default true\n  const auto TRANSPOSE_INPUT = true;\n  Load( \"foo.csv\", data, THROW_EXCEPTION, TRANSPOSE_INPUT );\n  cout \u003C\u003C \"Linhas:  \" \u003C\u003C data.n_rows \u003C\u003C endl; \u002F\u002F 3\n  cout \u003C\u003C \"Colunas: \" \u003C\u003C data.n_cols \u003C\u003C endl; \u002F\u002F 400\n","constantes-para-os-índices","Constantes para os índices","  const auto VAR1_ROW  = 0;\n  const auto VAR2_ROW  = 1;\n  const auto LABEL_ROW = 2;\n  const auto FIRST_COL = 0;\n  const auto LAST_COL  = data.n_cols - 1;\n  const auto TEST_SIZE = 10;\n","dados-de-entrada-para-treinamento","Dados de entrada para treinamento","  auto firtsRow  = VAR1_ROW;\n  auto firtsCol  = FIRST_COL;\n  auto lastRow   = VAR2_ROW;\n  auto lastCol   = LAST_COL - TEST_SIZE;\n  mat  traindata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","dados-de-saída-para-treinamento","Dados de saída para treinamento","  firtsRow        = LABEL_ROW;\n  lastRow         = LABEL_ROW;\n  mat trainlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","dados-de-entrada-para-teste","Dados de entrada para teste","  firtsRow     = VAR1_ROW;\n  lastRow      = VAR2_ROW;\n  firtsCol     = LAST_COL - TEST_SIZE + 1;\n  lastCol      = LAST_COL;\n  mat testdata = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","dados-de-saída-para-teste","Dados de saída para teste","  firtsRow       = LABEL_ROW;\n  lastRow        = LABEL_ROW;\n  mat testlabels = data.submat( firtsRow, firtsCol, lastRow, lastCol );\n","visualizando-os-dados-de-teste","Visualizando os dados de teste","  cout \u003C\u003C \"Dados de entrada para teste: \\n\" \u003C\u003C testdata \u003C\u003C endl;\n  cout \u003C\u003C \"Dados de saída para teste: \\n\" \u003C\u003C testlabels \u003C\u003C endl;\n","Dados de entrada para teste:\n   0.7482   2.5516   2.1925  -1.3355   0.0608   0.6829  -2.6796  -0.6668  -2.9646  -2.8399\n   3.9294   2.3957   2.7282   3.7705   3.9995   3.4327   2.2516   3.9440   1.8603   2.0458\n\nDados de saída para teste:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n","construindo-a-rede-neural","Construindo a rede neural","  \u002F\u002F Feed Forward Network\n  \u002F\u002F FFN\u003Ctipo-de-saída-das-camadas, regra-de-inicialização\u003E model;\n  FFN\u003CMeanSquaredError\u003C\u003E, RandomInitialization\u003E model;\n  \u002F\u002F Adiciona camada com 2 entradas e 8 saídas\n  model.Add\u003CLinear\u003C\u003E\u003E( traindata.n_rows, 8 );\n  model.Add\u003CSigmoidLayer\u003C\u003E\u003E();\n  \u002F\u002F Adiciona camada com 8 entradas e 8 saídas\n  model.Add\u003CLinear\u003C\u003E\u003E( 8, 8 );\n  model.Add\u003CSigmoidLayer\u003C\u003E\u003E();\n  \u002F\u002F Adiciona camada com 8 entradas e 1 saída\n  model.Add\u003CLinear\u003C\u003E\u003E( 8, 1 );\n  model.Add\u003CSigmoidLayer\u003C\u003E\u003E();\n","treinamento","Treinamento","  for( int i = 0; i \u003C 4; ++i ) {\n    model.Train( traindata, trainlabels );\n    \u002F\u002F Acompanha o erro do modelo\n    mat assignments;\n    model.Predict( testdata, assignments );\n    \u002F\u002F Diferença entre o obtido e o esperado\n    mat diff = assignments - testlabels;\n    cout \u003C\u003C \"Erro: \" \u003C\u003C diff * diff.t();\n  }\n","Erro:    0.0292\nErro:    0.0058\nErro:    0.0038\nErro:    0.0024\n","testando-o-modelo-ajustado","Testando o modelo ajustado","  mat assignments;\n  model.Predict( testdata, assignments );\n  cout \u003C\u003C \"Previsões:\\n\" \u003C\u003C assignments \u003C\u003C endl;\n  cout \u003C\u003C \"Classificação correta:\\n\" \u003C\u003C testlabels \u003C\u003C endl;\n","Previsões:\n   0.0074   0.9985   0.9918   0.0097   0.0057   0.9853   0.9998   0.0107   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n","salvando-modelo-para-continuar-depois","Salvando modelo para continuar depois","  Save( \"model.xml\", \"model\", model, false );\n","carregando-o-modelo-salvo-na-sessão-anterior","Carregando o modelo salvo na sessão anterior","  Load( \"model.xml\", \"model\", model );\n","nova-sessão-de-treinamento-para-refinar","Nova sessão de treinamento para refinar","  for( int i = 0; i \u003C 4; ++i ) {\n    model.Train( traindata, trainlabels );\n  }\n","novos-testes","Novos testes","  model.Predict( testdata, assignments );\n  cout \u003C\u003C \"Previsões:\\n\" \u003C\u003C assignments \u003C\u003C endl;\n  cout \u003C\u003C \"Classificação correta:\\n\" \u003C\u003C testlabels \u003C\u003C endl;\n","Previsões:\n   0.0045   0.9996   0.9893   0.0010   0.0049   0.9942   1.0000   0.0076   1.0000   1.0000\n\nClassificação correta:\n   0        1.0000   1.0000   0        0        1.0000   1.0000   0        1.0000   1.0000\n","salvando-o-modelo-atualizado","Salvando o modelo atualizado","  Save( \"model2.xml\", \"model\", model, false );\n","código-fonte-completo","Código fonte completo","git clone https:\u002F\u002Fgithub.com\u002Fgeraldolsribeiro\u002Fmlpack-tutorials\u002F\ncd mlpack-tutorials\u002Fffn\nmake\n","referências","Referências","root","Este artigo mostra como criar uma rede neural simples no\n","https:\u002F\u002Fwww.debian.org\u002Freleases\u002Fstable\u002F","Debian stable"," utilizando a\n","http:\u002F\u002Fwww.mlpack.org",". A "," é uma biblioteca popular e de alta\nperformance para aprendizado de máquina em C++.","As versões disponíveis no momento da escrita deste artigo são:","table","thead","Versão do Debian","Versão do mlpack","Arquiteturas","tbody","jessie (oldstable)","1.0.10-1","amd64 armel armhf i386","stretch (stable)","2.1.1-1","buster (testing)","3.0.4-1","sid (unstable)","3.0.4-1+b1","kfreebsd-amd64 kfreebsd-i386","As versões do ","libmlpack-dev"," disponíveis para o ","http:\u002F\u002Fdebian.org","Debian"," podem ser consultadas neste\n","https:\u002F\u002Fpackages.debian.org\u002Fsearch?keywords=libmlpack-dev&searchon=names&suite=all&section=all","link","Neste artigo usaremos a versão ","3.0.4"," presente no ","Eu prefiro utilizar somente os pacotes "," nos servidores por serem\nversões muito bem testadas. Normalmente as últimas versões não estão\ndisponíveis no repositório ",", mas sim nos repositórios ","\ne ",". O repositório "," contém próximo candidato a se tornar\n"," de cada pacote. O repositório "," contém a última versão\ndisponível de cada pacote.","Misturar repositórios diferente pode ser algo tranquilo de manter se feito com cuidado.\nÉ só indicar ","precisamente"," qual pacote deve ser pego de cada repositório.\nO Debian tem um mecanismo bem fácil de usar para realizar esta tarefa.\nNo meu caso eu tenho uma regra geral: ","pegar sempre do stable"," e algumas\npoucas exceções para pacotes específicos.","Para mesclar diferentes repositórios basta ","pinar"," os pacotes para indicar quais versões serão usadas.","Para marcar o "," e o "," para serem instalados a partir do\n"," crie um arquivo chamado "," com\no seguinte conteúdo:"," poderia ter qualquer nome, mas é conveniente usar algo descritivo.","E para desfazer a pinagem basta remover o arquivo.","Então é só proceder a instalação normal com o "," como de costume:","Vamos utilizar dois grupos de dados, cada um com duas variáveis (x e y).","Olhando nosso conjunto de dados de cima podemos ver claramente duas curvas, uma para cada conjunto.","\u002Ftil\u002Fmlpack-foo-1.gif#center","Para facilitar a visualização, o primeiro grupo está em ","z=0"," e o segundo em ","z=1",", conforme pode ser visto na\nanimação abaixo. É mais ou menos isso que a rede deverá ","aprender","\u002Ftil\u002Fmlpack-foo-2.gif#center","foo.csv"," contém as duas curvas com os pontos distribuídos do modo\naleatório para não favorecer ou influenciar o treinamento. São ao todo 400\nlinhas e 3 colunas. As duas primeiras colunas são as ","entradas"," e a terceira\né o ","grupo"," a qual pertencem.","csv","Incluindo os cabeçalhos específicos para rede neural artificial (ANN).","Para deixar o código bem mais legível alguns namespaces serão usados por padrão.","As matrizes do ","http:\u002F\u002Farma.sourceforge.net\u002F","Armadillo"," (pacote de álgebra linear do mlpack) são armazenada no\nformato ","column-major","; isto significa que no disco cada coluna é localizada\nnuma região contígua de memória. Veja\n","https:\u002F\u002Fwww.mlpack.org\u002Fdoc\u002Fmlpack-3.1.0\u002Fdoxygen\u002Fmatrices.html","detalhes"," na\ndocumentação do ","Esta é uma conveniência bem interessante, pois para escrever os arquivos os\nregistros são entrados por linha e para processamento são tratados em colunas.","Então além de carregar é preciso transpor a matriz de dados.","A matriz de dados foi carregada e precisa ser dividida entre dados de treinamento e dados de teste.","Dados depois de carregados","\u002Ftil\u002Fmlpack-data.svg#center","É muito importante que o modelo nunca veja os dados de teste para que se tenha\numa boa generalização.","Para facilitar a leitura do fonte e evitar ","números mágicos"," no código defini algumas constantes convenientes:","Note que neste caso serão usadas 10 amostras para teste."," vamos recortar uma porção dos dados para formar os dados de entrada para treinamento."," vamos recortar uma porção dos dados para formar os dados de saída para treinamento."," vamos recortar uma porção dos dados para formar os dados de entrada para teste."," vamos recortar uma porção dos dados para formar os dados de saída para teste.","É importante notar que os dados de teste contém amostras de ambos os grupos\ne estão distribuídos em todo o espaço de amostra.","\u002Ftil\u002Fmlpack-ffn.svg#center","A partir da inicialização aleatória dos pesos da conexões inicia-se o treinamento.","Note o erro sendo reduzido a cada treinamento.","O modelo pode ser salvo a qualquer momento e recarregado para continuar o treinamento.\nUm arquivo ","XML"," serializado pelo ","boost"," é salvo.","O código fonte completo pode ser encontrado no\n","https:\u002F\u002Fgithub.com\u002Fgeraldolsribeiro\u002Fmlpack-tutorials\u002Ftree\u002Fmaster\u002Fffn","github","Para baixar e compilar o fonte deste artigo utilize:","ul","https:\u002F\u002Fwiki.debian.org\u002FAptPreferences","Apt Preferences","https:\u002F\u002Fwww.mlpack.org\u002Fdoc\u002Fmlpack-3.1.0\u002Fdoxygen\u002Fanntutorial.html","Neural Network Tutorial"))